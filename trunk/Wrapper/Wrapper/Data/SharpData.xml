<?xml version="1.0" encoding="UTF-8"?>

<Root>

  <TypeHolder>

    <TypeInfo name="int">
      <TypeName>int</TypeName>
      <MarshalTypeName>int</MarshalTypeName>
    </TypeInfo>

    <TypeInfo name="float">
      <TypeName>float</TypeName>
      <MarshalTypeName>float</MarshalTypeName>
    </TypeInfo>

    <TypeInfo name="bool">
      <TypeName>bool</TypeName>
      <MarshalTypeName>bool</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.U1)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.U1)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="bool &amp;">
      <TypePrefix>ref</TypePrefix>
      <TypeName>bool</TypeName>
      <MarshalTypeName>bool</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.U1)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.U1)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="size_t">
      <TypeName>uint</TypeName>
      <MarshalTypeName>uint</MarshalTypeName>
    </TypeInfo>

    <TypeInfo name="unsigned int">
      <TypeName>uint</TypeName>
      <MarshalTypeName>uint</MarshalTypeName>
    </TypeInfo>


    <TypeInfo name="const Ogre::UTFString &amp;">
      <TypeName>string</TypeName>
      <MarshalTypeName>string</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.LPWStr)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.LPWStr)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="Ogre::UTFString">
      <TypeName>string</TypeName>
      <MarshalTypeName>string</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.LPWStr)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.LPWStr)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="const std::string &amp;">
      <TypeName>string</TypeName>
      <MarshalTypeName>string</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.LPStr)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.LPStr)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="std::string">
      <TypeName>string</TypeName>
      <MarshalTypeName>string</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.LPStr)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.LPStr)]</MarshalAs>
    </TypeInfo>


    <TypeInfo name="MyGUI::types::TPoint&lt; int &gt;">
      <TypeName>IntPoint</TypeName>
      <MarshalTypeName>IntPoint</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="const MyGUI::types::TPoint&lt; int &gt; &amp;">
      <TypeName>IntPoint</TypeName>
      <MarshalTypeName>IntPoint</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TPoint&lt; int &gt; &amp;">
      <TypeName>IntPoint</TypeName>
      <MarshalTypeName>IntPoint</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In, Out]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TPoint&lt; float &gt;">
      <TypeName>FloatPoint</TypeName>
      <MarshalTypeName>FloatPoint</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="const MyGUI::types::TPoint&lt; float &gt; &amp;">
      <TypeName>FloatPoint</TypeName>
      <MarshalTypeName>FloatPoint</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TPoint&lt; float &gt; &amp;">
      <TypeName>FloatPoint</TypeName>
      <MarshalTypeName>FloatPoint</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In, Out]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="MyGUI::types::TSize&lt; int &gt;">
      <TypeName>IntSize</TypeName>
      <MarshalTypeName>IntSize</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="const MyGUI::types::TSize&lt; int &gt; &amp;">
      <TypeName>IntSize</TypeName>
      <MarshalTypeName>IntSize</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TSize&lt; int &gt; &amp;">
      <TypeName>IntSize</TypeName>
      <MarshalTypeName>IntSize</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In, Out]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    
    <TypeInfo name="MyGUI::types::TSize&lt; float &gt;">
      <TypeName>FloatSize</TypeName>
      <MarshalTypeName>FloatSize</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="const MyGUI::types::TSize&lt; float &gt; &amp;">
      <TypeName>FloatSize</TypeName>
      <MarshalTypeName>FloatSize</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TSize&lt; float &gt; &amp;">
      <TypeName>FloatSize</TypeName>
      <MarshalTypeName>FloatSize</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In, Out]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="MyGUI::types::TCoord&lt; int &gt;">
      <TypeName>IntCoord</TypeName>
      <MarshalTypeName>IntCoord</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="const MyGUI::types::TCoord&lt; int &gt; &amp;">
      <TypeName>IntCoord</TypeName>
      <MarshalTypeName>IntCoord</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TCoord&lt; int &gt; &amp;">
      <TypeName>IntCoord</TypeName>
      <MarshalTypeName>IntCoord</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In, Out]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TCoord&lt; float &gt;">
      <TypeName>FloatCoord</TypeName>
      <MarshalTypeName>FloatCoord</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="const MyGUI::types::TCoord&lt; float &gt; &amp;">
      <TypeName>FloatCoord</TypeName>
      <MarshalTypeName>FloatCoord</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TCoord&lt; float &gt; &amp;">
      <TypeName>FloatCoord</TypeName>
      <MarshalTypeName>FloatCoord</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In, Out]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="MyGUI::types::TRect&lt; int &gt;">
      <TypeName>IntRect</TypeName>
      <MarshalTypeName>IntRect</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="const MyGUI::types::TRect&lt; int &gt; &amp;">
      <TypeName>IntRect</TypeName>
      <MarshalTypeName>IntRect</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TRect&lt; int &gt; &amp;">
      <TypeName>IntRect</TypeName>
      <MarshalTypeName>IntRect</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In, Out]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TRect&lt; float &gt;">
      <TypeName>FloatRect</TypeName>
      <MarshalTypeName>FloatRect</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="const MyGUI::types::TRect&lt; float &gt; &amp;">
      <TypeName>FloatRect</TypeName>
      <MarshalTypeName>FloatRect</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>
    <TypeInfo name="MyGUI::types::TRect&lt; float &gt; &amp;">
      <TypeName>FloatRect</TypeName>
      <MarshalTypeName>FloatRect</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In, Out]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>


    <TypeInfo name="MyGUI::Align">
      <TypeName>Align</TypeName>
      <MarshalTypeName>Align</MarshalTypeName>
      <MarshalAs>[MarshalAs(UnmanagedType.I4)]</MarshalAs>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.I4)]</MarshalAsReturn>
    </TypeInfo>

    <TypeInfo name="MyGUI::MessageBoxStyle">
      <TypeName>MessageBoxStyle</TypeName>
      <MarshalTypeName>MessageBoxStyle</MarshalTypeName>
      <MarshalAs>[MarshalAs(UnmanagedType.I4)]</MarshalAs>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.I4)]</MarshalAsReturn>
    </TypeInfo>

    <TypeInfo name="MyGUI::WidgetStyle">
      <TypeName>WidgetStyle</TypeName>
      <MarshalTypeName>WidgetStyle</MarshalTypeName>
      <MarshalAs>[MarshalAs(UnmanagedType.I4)]</MarshalAs>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.I4)]</MarshalAsReturn>
    </TypeInfo>

    <TypeInfo name="MyGUI::KeyCode">
      <TypeName>KeyCode</TypeName>
      <MarshalTypeName>KeyCode</MarshalTypeName>
      <MarshalAs>[MarshalAs(UnmanagedType.I4)]</MarshalAs>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.I4)]</MarshalAsReturn>
    </TypeInfo>

    <TypeInfo name="MyGUI::MouseButton">
      <TypeName>MouseButton</TypeName>
      <MarshalTypeName>MouseButton</MarshalTypeName>
      <MarshalAs>[MarshalAs(UnmanagedType.I4)]</MarshalAs>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.I4)]</MarshalAsReturn>
    </TypeInfo>

    <TypeInfo name="MyGUI::MenuItemType">
      <TypeName>MenuItemType</TypeName>
      <MarshalTypeName>MenuItemType</MarshalTypeName>
      <MarshalAs>[MarshalAs(UnmanagedType.I4)]</MarshalAs>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.I4)]</MarshalAsReturn>
    </TypeInfo>

    <TypeInfo name="const MyGUI::Guid &amp;">
      <TypeName>Guid</TypeName>
      <MarshalTypeName>Guid</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="const MyGUI::DDWidgetState &amp;">
      <TypeName>DDWidgetState</TypeName>
      <MarshalTypeName>DDWidgetState</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="MyGUI::DDItemState">
      <TypeName>DDItemState</TypeName>
      <MarshalTypeName>DDItemState</MarshalTypeName>
      <MarshalAs>[MarshalAs(UnmanagedType.I4)]</MarshalAs>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.I4)]</MarshalAsReturn>
    </TypeInfo>

    <TypeInfo name="const MyGUI::DDItemInfo &amp;">
      <TypeName>DDItemInfo</TypeName>
      <MarshalTypeName>DDItemInfo</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="const MyGUI::IBNotifyItemData &amp;">
      <TypeName>IBNotifyItemData</TypeName>
      <MarshalTypeName>IBNotifyItemData</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="const MyGUI::ToolTipInfo &amp;">
      <TypeName>ToolTipInfo</TypeName>
      <MarshalTypeName>ToolTipInfo</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="const MyGUI::IBDrawItemInfo &amp;">
      <TypeName>IBDrawItemInfo</TypeName>
      <MarshalTypeName>IBDrawItemInfo</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="const MyGUI::Colour &amp;">
      <TypeName>Colour</TypeName>
      <MarshalTypeName>Colour</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In]</MarshalAs>
      <Custom name="">
        <Template>Sharp.Templates</Template>
        <Param>0</Param>
      </Custom>
    </TypeInfo>

    <TypeInfo name="MyGUI::Any">
      <TypeName>object</TypeName>
      <MarshalTypeName>object</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.IUnknown)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.IUnknown)]</MarshalAs>
    </TypeInfo>





    <TypeInfo name="MyGUI::Button *">
      <TypeName>Button</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::Canvas *">
      <TypeName>Canvas</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::ComboBox *">
      <TypeName>ComboBox</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::DDContainer *">
      <TypeName>DDContainer</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::Edit *">
      <TypeName>EditBox</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::HScroll *">
      <TypeName>HScrollBar</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::ItemBox *">
      <TypeName>ItemBox</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::List *">
      <TypeName>ListBox</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::MenuBar *">
      <TypeName>MenuBar</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::MenuCtrl *">
      <TypeName>MenuCtrl</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::Message *">
      <TypeName>MessageBox</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::MultiList *">
      <TypeName>MultiListBox</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::PopupMenu *">
      <TypeName>PopupMenu</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::Progress *">
      <TypeName>ProgressBar</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::RenderBox  *">
      <TypeName>RenderBox</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::ScrollView *">
      <TypeName>ScrollView</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::StaticImage *">
      <TypeName>StaticImage</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::StaticText *">
      <TypeName>StaticText</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::Tab *">
      <TypeName>TabBar</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::VScroll *">
      <TypeName>VScrollBar</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::Widget *">
      <TypeName>Widget</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>
    <TypeInfo name="MyGUI::Widget * &amp;">
      <TypeName>Widget</TypeName>
      <MarshalTypeName>IntPtr</MarshalTypeName>
      <TypePrefix>ref</TypePrefix>
      <MarshalAs>[In, Out]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::Window *">
      <TypeName>Window</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::MenuItem *">
      <TypeName>MenuItem</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

    <TypeInfo name="MyGUI::TabItem *">
      <TypeName>TabItem</TypeName>
      <MarshalTypeName>BaseWidget</MarshalTypeName>
      <MarshalAsReturn>[return: MarshalAs(UnmanagedType.Interface)]</MarshalAsReturn>
      <MarshalAs>[MarshalAs(UnmanagedType.Interface)]</MarshalAs>
    </TypeInfo>

  </TypeHolder>

  <Item type="MyGUI::Button" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_Button.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_Button.cs"/>
    <Tag key="BaseName" value="StaticText"/>
    <Tag key="ThisName" value="Button"/>
    <Tag key="ThisType" value="Button"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="setEnabled" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::Canvas" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_Canvas.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_Canvas.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="Canvas"/>
    <Tag key="ThisType" value="Canvas"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="setEnabled" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="getPixel" template="Empty.txt"/>
    <Member name="getBuffer" template="Empty.txt"/>
    <Member name="getTextureFormat" template="Empty.txt"/>
    <Member name="setPixel" template="Empty.txt"/>
    <Member name="lock" template="Empty.txt"/>
    <Member name="loadTexture" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::ComboBox" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_ComboBox.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_ComboBox.cs"/>
    <Tag key="BaseName" value="EditBox"/>
    <Tag key="ThisName" value="ComboBox"/>
    <Tag key="ThisType" value="ComboBox"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="getItemCount" template="PropertyGet.txt"/>
    <Member name="getItemDataAt" template="GetItemDataAt.txt"/>
    <Member name="addItem" template="Method2_1.txt"/>
    <Member name="insertItemAt" template="Method3_2.txt"/>
  </Item>

  <Item type="MyGUI::DDContainer" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_DDContaner.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_DDContainer.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="DDContainer"/>
    <Tag key="ThisType" value="DDContainer"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="requestDragWidgetInfo" template="DelegateRequest3_Ref.txt"/>
    <Member name="getItemCount" template="PropertyGet.txt"/>
  </Item>

  <Item type="MyGUI::Edit" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_EditBox.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_EditBox.cs"/>
    <Tag key="BaseName" value="StaticText"/>
    <Tag key="ThisName" value="EditBox"/>
    <Tag key="ThisType" value="Edit"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setCaption" template="Empty.txt"/>
    <Member name="getCaption" template="Empty.txt"/>
    <Member name="setPosition" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
    <Member name="setFontHeight" template="Empty.txt"/>
    <Member name="setFontName" template="Empty.txt"/>
    <Member name="setTextAlign" template="Empty.txt"/>
    <Member name="setTextColour" template="Empty.txt"/>
    <Member name="getTextSelect" template="Empty.txt"/>
    <Member name="getTextLength" template="PropertyGet.txt"/>
  </Item>

  <Item type="MyGUI::HScroll" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_HScrollBar.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_HScrollBar.cs"/>
    <Tag key="BaseName" value="VScrollBar"/>
    <Tag key="ThisName" value="HScrollBar"/>
    <Tag key="ThisType" value="HScroll"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="getLineSize" template="Empty.txt"/>
    <Member name="setTrackSize" template="Empty.txt"/>
    <Member name="getTrackSize" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::ItemBox" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_ItemBox.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_ItemBox.cs"/>
    <Tag key="BaseName" value="DDContainer"/>
    <Tag key="ThisName" value="ItemBox"/>
    <Tag key="ThisType" value="ItemBox"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="setPosition" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
    <Member name="getItemCount" template="PropertyGet.txt"/>
    <Member name="getItemDataAt" template="GetItemDataAt.txt"/>
    <Member name="addItem" template="Method1_0.txt"/>
    <Member name="insertItemAt" template="Method2_1.txt"/>
  </Item>

  <Item type="MyGUI::List" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_ListBox.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_ListBox.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="ListBox"/>
    <Tag key="ThisType" value="List"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="setPosition" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
    <Member name="setScrollPosition" template="Empty.txt"/>
    <Member name="getItemCount" template="PropertyGet.txt"/>
    <Member name="getItemDataAt" template="GetItemDataAt.txt"/>
    <Member name="addItem" template="Method2_1.txt"/>
    <Member name="insertItemAt" template="Method3_2.txt"/>
  </Item>

  <Item type="MyGUI::MenuBar" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_MenuBar.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_MenuBar.cs"/>
    <Tag key="BaseName" value="MenuCtrl"/>
    <Tag key="ThisName" value="MenuBar"/>
    <Tag key="ThisType" value="MenuBar"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::MenuCtrl" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_MenuCtrl.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_MenuCtrl.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="MenuCtrl"/>
    <Tag key="ThisType" value="MenuCtrl"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setVisible" template="Empty.txt"/>
    <Member name="createItemChildT" template="Empty.txt"/>
    <Member name="createItemChildTAt" template="Empty.txt"/>
    <Member name="getItemCount" template="PropertyGet.txt"/>
    <Member name="getItemDataAt" template="GetItemDataAt.txt"/>
    <Member name="getItemData" template="GetItemDataAt.txt"/>
    <Member name="addItem" template="MethodReturn4_3_2_1.txt"/>
    <Member name="insertItemAt" template="MethodReturn5_4_3_2.txt"/>
  </Item>

  <Item type="MyGUI::Message" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_MessageBox.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_MessageBox.cs"/>
    <Tag key="BaseName" value="Window"/>
    <Tag key="ThisName" value="MessageBox"/>
    <Tag key="ThisType" value="Message"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::MultiList" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_MultiListBox.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_MultiListBox.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="MultiListBox"/>
    <Tag key="ThisType" value="MultiList"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="getItemCount" template="PropertyGet.txt"/>
    <Member name="getColumnCount" template="PropertyGet.txt"/>
    <Member name="getItemDataAt" template="GetItemDataAt.txt"/>
    <Member name="getColumnDataAt" template="GetItemDataAt.txt"/>
    <Member name="getSubItemDataAt" template="GetItemDataAt2.txt"/>
    <Member name="addColumn" template="Method3_2.txt"/>
    <Member name="insertColumnAt" template="Method4_3.txt"/>
    <Member name="addItem" template="Method2_1.txt"/>
    <Member name="insertItemAt" template="Method3_2.txt"/>
  </Item>

  <Item type="MyGUI::PopupMenu" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_PopupMenu.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_PopupMenu.cs"/>
    <Tag key="BaseName" value="MenuCtrl"/>
    <Tag key="ThisName" value="PopupMenu"/>
    <Tag key="ThisType" value="PopupMenu"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::Progress" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_ProgressBar.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_ProgressBar.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="ProgressBar"/>
    <Tag key="ThisType" value="Progress"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setPosition" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::RenderBox" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_RenderBox.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_RenderBox.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="RenderBox"/>
    <Tag key="ThisType" value="RenderBox"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setPosition" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
    <Member name="getBackgroungColour" template="Empty.txt"/>
    <Member name="setBackgroungColour" template="Empty.txt"/>
    <Member name="removeCamera" template="Empty.txt"/>
    <Member name="setCamera" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::ScrollView" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_ScrollView.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_ScrollVew.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="ScrollView"/>
    <Tag key="ThisType" value="ScrollView"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setPosition" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
    <Member name="setTextAlign" template="Empty.txt"/>
    <Member name="getClientCoord" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::StaticImage" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_StaticImage.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_StaticImage.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="StaticImage"/>
    <Tag key="ThisType" value="StaticImage"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setImageRect" template="Empty.txt"/>
    <Member name="getItemCount" template="Empty.txt"/>
    <Member name="setItemSelect" template="Empty.txt"/>
    <Member name="getItemSelect" template="Empty.txt"/>
    <Member name="resetItemSelect" template="Empty.txt"/>
    <Member name="insertItem" template="Empty.txt"/>
    <Member name="addItem" template="Empty.txt"/>
    <Member name="setItem" template="Empty.txt"/>
    <Member name="deleteItem" template="Empty.txt"/>
    <Member name="deleteAllItems" template="Empty.txt"/>
    <Member name="addItemFrame" template="Empty.txt"/>
    <Member name="insertItemFrame" template="Empty.txt"/>
    <Member name="addItemFrameDublicate" template="Empty.txt"/>
    <Member name="insertItemFrameDublicate" template="Empty.txt"/>
    <Member name="setItemFrame" template="Empty.txt"/>
    <Member name="deleteItemFrame" template="Empty.txt"/>
    <Member name="deleteAllItemsFrame" template="Empty.txt"/>
    <Member name="setItemFrameRate" template="Empty.txt"/>
    <Member name="getItemFrameRate" template="Empty.txt"/>
    <Member name="setItemResourcePtr" template="Empty.txt"/>
    <Member name="setItemResourceInfo" template="Empty.txt"/>
    <Member name="getItemResource" template="Empty.txt"/>
    <Member name="setItemResourceInfo" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::StaticText" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_StaticText.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_StaticText.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="StaticText"/>
    <Tag key="ThisType" value="StaticText"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::Tab" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_TabBar.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_TabBar.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="TabBar"/>
    <Tag key="ThisType" value="Tab"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setPosition" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
    <Member name="getItemCount" template="PropertyGet.txt"/>
    <Member name="getItemDataAt" template="GetItemDataAt.txt"/>
    <Member name="getItemData" template="GetItemDataAt.txt"/>
    <Member name="addItem" template="MethodReturn2_1.txt"/>
    <Member name="insertItemAt" template="MethodReturn3_2.txt"/>
  </Item>

  <Item type="MyGUI::VScroll" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_VScrollBar.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_VScrollBar.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="VScrollBar"/>
    <Tag key="ThisType" value="VScroll"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setPosition" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::WidgetEvent" namespace="MyGUI">
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_WidgetEvent.cpp"/>
    <Template type="Sharp.Templates" name="Part.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_WidgetEvent.cs"/>
    <Tag key="ThisName" value="Widget"/>
    <Tag key="ThisType" value="Widget"/>
  </Item>

  <Item type="MyGUI::UserData" namespace="MyGUI">
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_WidgetUserData.cpp"/>
    <Template type="Sharp.Templates" name="Part.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_WidgetUserData.cs"/>
    <Tag key="ThisName" value="Widget"/>
    <Tag key="ThisType" value="Widget"/>
    <Member name="setUserData" template="Empty.txt"/>
    <Member name="getUserData" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::ICroppedRectangle" namespace="MyGUI">
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_WidgetCropped.cpp"/>
    <Template type="Sharp.Templates" name="Part.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_WidgetCropped.cs"/>
    <Tag key="ThisName" value="Widget"/>
    <Tag key="ThisType" value="Widget"/>
    <Member name="getCroppedParent" template="Empty.txt"/>
  </Item>
  
  <Item type="MyGUI::Widget" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_Widget.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_Widget.cs"/>
    <Tag key="BaseName" value="BaseWidget"/>
    <Tag key="ThisName" value="Widget"/>
    <Tag key="ThisType" value="Widget"/>
    <Tag key="Partial" value="partial"/>
    <Member name="createWidgetT" template="Empty.txt"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="getSubWidgetMain" template="Empty.txt"/>
    <Member name="getSubWidgetText" template="Empty.txt"/>
    <Member name="getLayerName" template="Empty.txt"/>
    <Member name="getEnumerator" template="Empty.txt"/>
    <Member name="getWidgetStyle" template="Empty.txt"/>
    <Member name="setWidgetStyle" template="Empty.txt"/>
    <Member name="attachToWidget" template="Empty.txt"/>
    <Member name="detachFromWidget" template="Empty.txt"/>
    <Member name="createWidgetRealT" template="Empty.txt"/>
    <Member name="createWidgetReal" template="Empty.txt"/>
    <Member name="createWidget" template="Empty.txt"/>
    <Member name="castType" template="Empty.txt"/>
    <Member name="getSubWidgetText" template="PropertyGet.txt"/>
  </Item>

  <Item type="MyGUI::Window" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_Window.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_Window.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="Window"/>
    <Tag key="ThisType" value="Window"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setCaption" template="Empty.txt"/>
    <Member name="getCaption" template="Empty.txt"/>
    <Member name="setTextColour" template="Empty.txt"/>
    <Member name="getTextColour" template="Empty.txt"/>
    <Member name="setFontHeight" template="Empty.txt"/>
    <Member name="getFontHeight" template="Empty.txt"/>
    <Member name="setFontName" template="Empty.txt"/>
    <Member name="getFontName" template="Empty.txt"/>
    <Member name="setTextAlign" template="Empty.txt"/>
    <Member name="getTextAlign" template="Empty.txt"/>
    <Member name="setPosition" template="Empty.txt"/>
    <Member name="setSize" template="Empty.txt"/>
    <Member name="setCoord" template="Empty.txt"/>
    <Member name="setVisible" template="Empty.txt"/>
    <Member name="destroySmooth" template="Empty.txt"/>
  </Item>

  <Item type="MyGUI::MenuItem" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_MenuItem.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_MenuItem.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="MenuItem"/>
    <Tag key="ThisType" value="MenuItem"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setCaption" template="Empty.txt"/>
    <Member name="createItemChildT" template="Empty.txt"/>
    <Member name="setItemData" template="Empty.txt"/>
    <Member name="getItemData" template="PropertyDataGetSet.txt"/>
  </Item>

  <Item type="MyGUI::TabItem" namespace="MyGUI">
    <Template template="RegisterFactory.txt" type="Sharp.Templates" name="GuiPart.WrapWidget.txt" output="..\MyGUI.Sharp\Core\Generate\MyGUI.GuiPart_WidgetCreator.cs"/>
    <Template type="Export.Templates" name="Derived.txt" output="..\MyGUI.Export\Generate\MyGUI.Export_TabItem.cpp"/>
    <Template type="Sharp.Templates" name="Derived.txt" output="..\MyGUI.Sharp\Widgets\Generate\MyGUI.Sharp_TabItem.cs"/>
    <Tag key="BaseName" value="Widget"/>
    <Tag key="ThisName" value="TabItem"/>
    <Tag key="ThisType" value="TabItem"/>
    <Member name="isType" template="Empty.txt"/>
    <Member name="getTypeName" template="Empty.txt"/>
    <Member name="setCaption" template="Empty.txt"/>
    <Member name="setItemData" template="Empty.txt"/>
    <Member name="getItemData" template="PropertyDataGetSet.txt"/>
  </Item>

</Root>
