<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.6-NO">
  <compounddef id="classMyGUI_1_1FactoryManager" kind="class" prot="public">
    <compoundname>MyGUI::FactoryManager</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classMyGUI_1_1FactoryManager_163bc483a23f68cbc20c2bf53ff4fb738" prot="public" static="no">
        <type>delegates::CDelegate1&lt; IObject *&amp; &gt;</type>
        <definition>typedef delegates::CDelegate1&lt;IObject*&amp;&gt; MyGUI::FactoryManager::Delegate</definition>
        <argsstring></argsstring>
        <name>Delegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="42" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_1632d877da224641fbeea7439dd73070c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::FactoryManager::FactoryManager</definition>
        <argsstring>()</argsstring>
        <name>FactoryManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_1ac7b6f2257d6fd4725e9846bffc712da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::FactoryManager::initialise</definition>
        <argsstring>()</argsstring>
        <name>initialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="39"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_198771ab99c8a1a46723b71c58997e1dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::FactoryManager::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="40"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_18c386074b8e2f6b769b6b1d67e648652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::FactoryManager::registerFactory</definition>
        <argsstring>(const std::string &amp;_category, const std::string &amp;_type, Delegate::IDelegate *_delegate)</argsstring>
        <name>registerFactory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <param>
          <type>Delegate::IDelegate *</type>
          <declname>_delegate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register delegate function that creates object for specified _category and _type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_1211d3ebdb89a78a6ba5c77f1242ca826" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::FactoryManager::unregisterFactory</definition>
        <argsstring>(const std::string &amp;_category, const std::string &amp;_type)</argsstring>
        <name>unregisterFactory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister delegate function that creates object for specified _category and _type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_1146fd2b9ab084aa21727b9976cbe550f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::FactoryManager::unregisterFactory</definition>
        <argsstring>(const std::string &amp;_category)</argsstring>
        <name>unregisterFactory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister all delegate functions that creates object for specified _category. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_142084eb1c74c4283cd5126416dce9e72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::FactoryManager::isFactoryExist</definition>
        <argsstring>(const std::string &amp;_category, const std::string &amp;_type)</argsstring>
        <name>isFactoryExist</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is factory for specified _category and _type exist. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="51"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_1bae7e0ab287cc496bbe3f130d9ce6512" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>Type</declname>
            <defname>Type</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void MyGUI::FactoryManager::registerFactory</definition>
        <argsstring>(const std::string &amp;_category)</argsstring>
        <name>registerFactory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register factory for specified _category. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="56" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_1bb67028418cc1318c30aa25292a4c6e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>Type</declname>
            <defname>Type</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void MyGUI::FactoryManager::registerFactory</definition>
        <argsstring>(const std::string &amp;_category, const std::string &amp;_type)</argsstring>
        <name>registerFactory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register factory for specified _category and _type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="63" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_1146fd2b9ab084aa21727b9976cbe550f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>Type</declname>
            <defname>Type</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void MyGUI::FactoryManager::unregisterFactory</definition>
        <argsstring>(const std::string &amp;_category)</argsstring>
        <name>unregisterFactory</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_category</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unegister factory for specified _category. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="70" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_17ba5920057a9ae068a36cd6ba8939343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>IObject *</type>
        <definition>IObject* MyGUI::FactoryManager::createObject</definition>
        <argsstring>(const std::string &amp;_category, const std::string &amp;_type)</argsstring>
        <name>createObject</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_category</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create object with given _category and _type. Return nullptr if there&apos;s no registered factory. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1FactoryManager_1a305c0e97d8c3639a82ed767d0c6a339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::FactoryManager::destroyObject</definition>
        <argsstring>(IObject *_object)</argsstring>
        <name>destroyObject</name>
        <param>
          <type>IObject *</type>
          <declname>_object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classMyGUI_1_1FactoryManager_1aa79610480d08d7526190a1e9062a68e" prot="private" static="no">
        <type>std::map&lt; std::string, Delegate &gt;</type>
        <definition>typedef std::map&lt;std::string, Delegate&gt; MyGUI::FactoryManager::MapFactoryItem</definition>
        <argsstring></argsstring>
        <name>MapFactoryItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="80" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1FactoryManager_14c4aae3d6bf4895f1a7ad4946e7471b4" prot="private" static="no">
        <type>std::map&lt; std::string, MapFactoryItem &gt;</type>
        <definition>typedef std::map&lt;std::string, MapFactoryItem&gt; MyGUI::FactoryManager::MapRegisterFactoryItem</definition>
        <argsstring></argsstring>
        <name>MapRegisterFactoryItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="81" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMyGUI_1_1FactoryManager_1a6b262c3590effa40e6188ad6e3b4e78" prot="private" static="no" mutable="no">
        <type>MapRegisterFactoryItem</type>
        <definition>MapRegisterFactoryItem MyGUI::FactoryManager::mRegisterFactoryItems</definition>
        <argsstring></argsstring>
        <name>mRegisterFactoryItems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="82" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1FactoryManager_1a5d112b5c9eeb538310c1599f37c7e2a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MyGUI::FactoryManager::mIsInitialise</definition>
        <argsstring></argsstring>
        <name>mIsInitialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="84" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" line="35" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_FactoryManager.h" bodystart="33" bodyend="85"/>
    <listofallmembers>
      <member refid="classMyGUI_1_1FactoryManager_17ba5920057a9ae068a36cd6ba8939343" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>createObject</name></member>
      <member refid="classMyGUI_1_1FactoryManager_163bc483a23f68cbc20c2bf53ff4fb738" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>Delegate</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1a305c0e97d8c3639a82ed767d0c6a339" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>destroyObject</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1632d877da224641fbeea7439dd73070c" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>FactoryManager</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1ac7b6f2257d6fd4725e9846bffc712da" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>initialise</name></member>
      <member refid="classMyGUI_1_1FactoryManager_142084eb1c74c4283cd5126416dce9e72" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>isFactoryExist</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1aa79610480d08d7526190a1e9062a68e" prot="private" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>MapFactoryItem</name></member>
      <member refid="classMyGUI_1_1FactoryManager_14c4aae3d6bf4895f1a7ad4946e7471b4" prot="private" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>MapRegisterFactoryItem</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1a5d112b5c9eeb538310c1599f37c7e2a" prot="private" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>mIsInitialise</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1a6b262c3590effa40e6188ad6e3b4e78" prot="private" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>mRegisterFactoryItems</name></member>
      <member refid="classMyGUI_1_1FactoryManager_18c386074b8e2f6b769b6b1d67e648652" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>registerFactory</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1bae7e0ab287cc496bbe3f130d9ce6512" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>registerFactory</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1bb67028418cc1318c30aa25292a4c6e1" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>registerFactory</name></member>
      <member refid="classMyGUI_1_1FactoryManager_198771ab99c8a1a46723b71c58997e1dc" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>shutdown</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1211d3ebdb89a78a6ba5c77f1242ca826" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>unregisterFactory</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1146fd2b9ab084aa21727b9976cbe550f" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>unregisterFactory</name></member>
      <member refid="classMyGUI_1_1FactoryManager_1146fd2b9ab084aa21727b9976cbe550f" prot="public" virt="non-virtual"><scope>MyGUI::FactoryManager</scope><name>unregisterFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
