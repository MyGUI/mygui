<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.6-NO">
  <compounddef id="classMyGUI_1_1IObject" kind="class" prot="public">
    <compoundname>MyGUI::IObject</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classMyGUI_1_1IObject_17b2a5090bf8f5b8c5c487b76a4899b3d" prot="public" static="no">
        <type>IObject</type>
        <definition>typedef IObject MyGUI::IObject::RTTIBase</definition>
        <argsstring></argsstring>
        <name>RTTIBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="33" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMyGUI_1_1IObject_1ac70cf707b25698037189933db8249a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::string &amp;</type>
        <definition>virtual const std::string&amp; MyGUI::IObject::getTypeName</definition>
        <argsstring>() const </argsstring>
        <name>getTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get type name as string </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="33" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1IObject_1e8ba7a759dde3e86e720d46ae7553bd5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool MyGUI::IObject::isType</definition>
        <argsstring>(const std::type_info &amp;_type) const </argsstring>
        <name>isType</name>
        <param>
          <type>const std::type_info &amp;</type>
          <declname>_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare with selected type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="33" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1IObject_1d16562b01fb3c137198e391941058b2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>Type</declname>
            <defname>Type</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool MyGUI::IObject::isType</definition>
        <argsstring>() const </argsstring>
        <name>isType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare with selected type </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="33" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1IObject_1c542d61d7f1efd5c08dae100a3c68558" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>Type</declname>
            <defname>Type</defname>
          </param>
        </templateparamlist>
        <type>Type *</type>
        <definition>Type* MyGUI::IObject::castType</definition>
        <argsstring>(bool _throw=true)</argsstring>
        <name>castType</name>
        <param>
          <type>bool</type>
          <declname>_throw</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to cast pointer to selected type. \ param _throw If true throw exception when casting in wrong type, else return nullptr \ </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="35" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1IObject_1f636b3c71d893eeb41bebc1c6f4519e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>Type</declname>
            <defname>Type</defname>
          </param>
        </templateparamlist>
        <type>const Type *</type>
        <definition>const Type* MyGUI::IObject::castType</definition>
        <argsstring>(bool _throw=true) const </argsstring>
        <name>castType</name>
        <param>
          <type>bool</type>
          <declname>_throw</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Try to cast pointer to selected type. \ param _throw If true throw exception when casting in wrong type, else return nullptr \ </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="37" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1IObject_198f33c9772728fc4065fe0a1ffdf8246" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MyGUI::IObject::IObject</definition>
        <argsstring>()</argsstring>
        <name>IObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="40" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1IObject_1ba65cf3c7393db4589ce28630a5aaadf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>virtual</type>
        <definition>virtual MyGUI::IObject::~IObject</definition>
        <argsstring>()</argsstring>
        <name>~IObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="41" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="41" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classMyGUI_1_1IObject_1356fb2225a69926e892f9a4855dc6218" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>static const std::string&amp; MyGUI::IObject::getClassTypeName</definition>
        <argsstring>()</argsstring>
        <name>getClassTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="33" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="33" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" line="32" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_IObject.h" bodystart="31" bodyend="42"/>
    <listofallmembers>
      <member refid="classMyGUI_1_1IObject_1c542d61d7f1efd5c08dae100a3c68558" prot="public" virt="non-virtual"><scope>MyGUI::IObject</scope><name>castType</name></member>
      <member refid="classMyGUI_1_1IObject_1f636b3c71d893eeb41bebc1c6f4519e1" prot="public" virt="non-virtual"><scope>MyGUI::IObject</scope><name>castType</name></member>
      <member refid="classMyGUI_1_1IObject_1356fb2225a69926e892f9a4855dc6218" prot="public" virt="non-virtual"><scope>MyGUI::IObject</scope><name>getClassTypeName</name></member>
      <member refid="classMyGUI_1_1IObject_1ac70cf707b25698037189933db8249a8" prot="public" virt="virtual"><scope>MyGUI::IObject</scope><name>getTypeName</name></member>
      <member refid="classMyGUI_1_1IObject_198f33c9772728fc4065fe0a1ffdf8246" prot="public" virt="non-virtual"><scope>MyGUI::IObject</scope><name>IObject</name></member>
      <member refid="classMyGUI_1_1IObject_1e8ba7a759dde3e86e720d46ae7553bd5" prot="public" virt="virtual"><scope>MyGUI::IObject</scope><name>isType</name></member>
      <member refid="classMyGUI_1_1IObject_1d16562b01fb3c137198e391941058b2b" prot="public" virt="non-virtual"><scope>MyGUI::IObject</scope><name>isType</name></member>
      <member refid="classMyGUI_1_1IObject_17b2a5090bf8f5b8c5c487b76a4899b3d" prot="public" virt="non-virtual"><scope>MyGUI::IObject</scope><name>RTTIBase</name></member>
      <member refid="classMyGUI_1_1IObject_1ba65cf3c7393db4589ce28630a5aaadf" prot="public" virt="virtual"><scope>MyGUI::IObject</scope><name>~IObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
