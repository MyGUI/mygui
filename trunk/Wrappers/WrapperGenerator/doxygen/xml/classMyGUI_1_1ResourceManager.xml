<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.6-NO">
  <compounddef id="classMyGUI_1_1ResourceManager" kind="class" prot="public">
    <compoundname>MyGUI::ResourceManager</compoundname>
    <basecompoundref refid="classMyGUI_1_1Singleton" prot="public" virt="non-virtual">MyGUI::Singleton&lt; ResourceManager &gt;</basecompoundref>
    <basecompoundref refid="classMyGUI_1_1MemberObsolete_3_01ResourceManager_01_4" prot="public" virt="non-virtual">MyGUI::MemberObsolete&lt; ResourceManager &gt;</basecompoundref>
    <includes local="no">MyGUI_ResourceManager.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classMyGUI_1_1ResourceManager_12d370ade39e01ad99109f716a8327ee2" prot="public" static="no">
        <type><ref refid="classMyGUI_1_1delegates_1_1CDelegate3" kindref="compound">delegates::CDelegate3</ref>&lt; <ref refid="classMyGUI_1_1xml_1_1Element" kindref="compound">xml::ElementPtr</ref>, const std::string &amp;, <ref refid="classMyGUI_1_1Version" kindref="compound">Version</ref> &gt;</type>
        <definition>typedef delegates::CDelegate3&lt;xml::ElementPtr, const std::string&amp;, Version&gt; MyGUI::ResourceManager::LoadXmlDelegate</definition>
        <argsstring></argsstring>
        <name>LoadXmlDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="58" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1ResourceManager_14a19954dfa92ff56f375bf498519eb3f" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="classMyGUI_1_1IResource" kindref="compound">IResource</ref> * &gt;</type>
        <definition>typedef std::map&lt;std::string, IResource*&gt; MyGUI::ResourceManager::MapResource</definition>
        <argsstring></argsstring>
        <name>MapResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="79" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1ResourceManager_123bd8d7e4d5334164e52e55ae5bb8fcd" prot="public" static="no">
        <type><ref refid="classMyGUI_1_1Enumerator" kindref="compound">Enumerator</ref>&lt; <ref refid="classMyGUI_1_1ResourceManager_14a19954dfa92ff56f375bf498519eb3f" kindref="member">MapResource</ref> &gt;</type>
        <definition>typedef Enumerator&lt;MapResource&gt; MyGUI::ResourceManager::EnumeratorPtr</definition>
        <argsstring></argsstring>
        <name>EnumeratorPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="80" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_1194bc41b0f6969466a0a2913ae13a94a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::ResourceManager::ResourceManager</definition>
        <argsstring>()</argsstring>
        <name>ResourceManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="41"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_11aa5b58120b9ed50b84924055b2d8073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::ResourceManager::initialise</definition>
        <argsstring>()</argsstring>
        <name>initialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_1d2f63cf97b0e3198e34c533bc207ebef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::ResourceManager::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_18d1d68d98e6541b175d254dc5363a220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::ResourceManager::load</definition>
        <argsstring>(const std::string &amp;_file)</argsstring>
        <name>load</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load additional <ref refid="namespaceMyGUI" kindref="compound">MyGUI</ref> *_resource.xml file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_12ae42b33abdd621605a0bdc97303886d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::ResourceManager::loadFromXmlNode</definition>
        <argsstring>(xml::ElementPtr _node, const std::string &amp;_file, Version _version)</argsstring>
        <name>loadFromXmlNode</name>
        <param>
          <type><ref refid="classMyGUI_1_1xml_1_1Element" kindref="compound">xml::ElementPtr</ref></type>
          <declname>_node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_file</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1Version" kindref="compound">Version</ref></type>
          <declname>_version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="50"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_1fe3e54a9ba4646e1e9e3cbd7c61803b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::ResourceManager::addResource</definition>
        <argsstring>(IResourcePtr _item)</argsstring>
        <name>addResource</name>
        <param>
          <type><ref refid="classMyGUI_1_1IResource" kindref="compound">IResourcePtr</ref></type>
          <declname>_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add resource item to resources </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_12ecf0ff88928e6f2f2ec9d17b9bc47c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::ResourceManager::removeResource</definition>
        <argsstring>(IResourcePtr _item)</argsstring>
        <name>removeResource</name>
        <param>
          <type><ref refid="classMyGUI_1_1IResource" kindref="compound">IResourcePtr</ref></type>
          <declname>_item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remove resource item from resources </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_1f02a39deed5d726cd572a6e8b67c0280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1delegates_1_1CDelegate3" kindref="compound">LoadXmlDelegate</ref> &amp;</type>
        <definition>LoadXmlDelegate&amp; MyGUI::ResourceManager::registerLoadXmlDelegate</definition>
        <argsstring>(const std::string &amp;_key)</argsstring>
        <name>registerLoadXmlDelegate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register delegate that parse XML node with specified tag (_key) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_18f3f963e9da9b744f5d408c0e286be3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::ResourceManager::unregisterLoadXmlDelegate</definition>
        <argsstring>(const std::string &amp;_key)</argsstring>
        <name>unregisterLoadXmlDelegate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister delegate that parse XML node with specified tag (_key) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="64"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_1273e1d67a78c749755560186a5f16427" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::ResourceManager::isExist</definition>
        <argsstring>(const std::string &amp;_name) const </argsstring>
        <name>isExist</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check is resource exist </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="67"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_197c3d926e88ded91139035d95a68a3e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1IResource" kindref="compound">IResource</ref> *</type>
        <definition>IResource* MyGUI::ResourceManager::findByName</definition>
        <argsstring>(const std::string &amp;_name) const </argsstring>
        <name>findByName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find resource by name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="70"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_1497bc1aadf9e3ed73aa18d6a4158f40b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1IResource" kindref="compound">IResource</ref> *</type>
        <definition>IResource* MyGUI::ResourceManager::getByName</definition>
        <argsstring>(const std::string &amp;_name, bool _throw=true) const </argsstring>
        <name>getByName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_throw</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get resource by name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_189302d69c2dd76f916b1d70bd3015028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::ResourceManager::removeByName</definition>
        <argsstring>(const std::string &amp;_name)</argsstring>
        <name>removeByName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_176f2e747a608587bfcc7f8a6505a554e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::ResourceManager::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="77"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_184dfa61dd9fdb77ba4a4cdf28e5f98a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1Enumerator" kindref="compound">EnumeratorPtr</ref></type>
        <definition>EnumeratorPtr MyGUI::ResourceManager::getEnumerator</definition>
        <argsstring>() const </argsstring>
        <name>getEnumerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_1f964e7a6dd2753760dcdbee14f7b8164" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t MyGUI::ResourceManager::getCount</definition>
        <argsstring>() const </argsstring>
        <name>getCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classMyGUI_1_1ResourceManager_116249548ef593d64c408b24f1c2d29a5" prot="private" static="no">
        <type>std::map&lt; std::string, <ref refid="classMyGUI_1_1delegates_1_1CDelegate3" kindref="compound">LoadXmlDelegate</ref> &gt;</type>
        <definition>typedef std::map&lt;std::string, LoadXmlDelegate&gt; MyGUI::ResourceManager::MapLoadXmlDelegate</definition>
        <argsstring></argsstring>
        <name>MapLoadXmlDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="92" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1ResourceManager_114686516ecd7ea69353f7e1c88102b9d" prot="private" static="no">
        <type>std::vector&lt; <ref refid="classMyGUI_1_1IResource" kindref="compound">IResource</ref> * &gt;</type>
        <definition>typedef std::vector&lt;IResource*&gt; MyGUI::ResourceManager::VectorResource</definition>
        <argsstring></argsstring>
        <name>VectorResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="97" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_1bc7651c93517674da475884031c4e408" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::ResourceManager::_loadList</definition>
        <argsstring>(xml::ElementPtr _node, const std::string &amp;_file, Version _version)</argsstring>
        <name>_loadList</name>
        <param>
          <type><ref refid="classMyGUI_1_1xml_1_1Element" kindref="compound">xml::ElementPtr</ref></type>
          <declname>_node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_file</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1Version" kindref="compound">Version</ref></type>
          <declname>_version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1ResourceManager_11d5f859647ed4ea7c0b56841a03f6f92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::ResourceManager::_loadImplement</definition>
        <argsstring>(const std::string &amp;_file, bool _match, const std::string &amp;_type, const std::string &amp;_instance)</argsstring>
        <name>_loadImplement</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_file</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_match</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMyGUI_1_1ResourceManager_127e3f2a876ae17eab26035a72a6c7da6" prot="private" static="no" mutable="no">
        <type>MapLoadXmlDelegate</type>
        <definition>MapLoadXmlDelegate MyGUI::ResourceManager::mMapLoadXmlDelegate</definition>
        <argsstring></argsstring>
        <name>mMapLoadXmlDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="93" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1ResourceManager_19f923ed84881e5a7f788686a62476791" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1ResourceManager_14a19954dfa92ff56f375bf498519eb3f" kindref="member">MapResource</ref></type>
        <definition>MapResource MyGUI::ResourceManager::mResources</definition>
        <argsstring></argsstring>
        <name>mResources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="95" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1ResourceManager_14f511cb1d23f0a86612bc44ba3521170" prot="private" static="no" mutable="no">
        <type>VectorResource</type>
        <definition>VectorResource MyGUI::ResourceManager::mRemovedResoures</definition>
        <argsstring></argsstring>
        <name>mRemovedResoures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="98" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1ResourceManager_150eefe4c324df6f2beae3bcd15daace7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MyGUI::ResourceManager::mIsInitialise</definition>
        <argsstring></argsstring>
        <name>mIsInitialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="100" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2220">
        <label>MyGUI::Singleton&lt; ResourceManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
      </node>
      <node id="2221">
        <label>MyGUI::MemberObsolete&lt; ResourceManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01ResourceManager_01_4"/>
      </node>
      <node id="2219">
        <label>MyGUI::ResourceManager</label>
        <link refid="classMyGUI_1_1ResourceManager"/>
        <childnode refid="2220" relation="public-inheritance">
        </childnode>
        <childnode refid="2221" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2223">
        <label>MyGUI::Singleton&lt; ResourceManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="2222" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="2224">
        <label>MyGUI::MemberObsolete&lt; ResourceManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01ResourceManager_01_4"/>
      </node>
      <node id="2222">
        <label>MyGUI::ResourceManager</label>
        <link refid="classMyGUI_1_1ResourceManager"/>
        <childnode refid="2223" relation="public-inheritance">
        </childnode>
        <childnode refid="2224" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" line="39" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_ResourceManager.h" bodystart="36" bodyend="101"/>
    <listofallmembers>
      <member refid="classMyGUI_1_1ResourceManager_11d5f859647ed4ea7c0b56841a03f6f92" prot="private" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>_loadImplement</name></member>
      <member refid="classMyGUI_1_1ResourceManager_1bc7651c93517674da475884031c4e408" prot="private" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>_loadList</name></member>
      <member refid="classMyGUI_1_1ResourceManager_1fe3e54a9ba4646e1e9e3cbd7c61803b0" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>addResource</name></member>
      <member refid="classMyGUI_1_1Singleton_1a74db81b5e58d5c6cc4e9bcba1648253" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>Base</name></member>
      <member refid="classMyGUI_1_1ResourceManager_176f2e747a608587bfcc7f8a6505a554e" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>clear</name></member>
      <member refid="classMyGUI_1_1ResourceManager_123bd8d7e4d5334164e52e55ae5bb8fcd" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>EnumeratorPtr</name></member>
      <member refid="classMyGUI_1_1ResourceManager_197c3d926e88ded91139035d95a68a3e2" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>findByName</name></member>
      <member refid="classMyGUI_1_1ResourceManager_1497bc1aadf9e3ed73aa18d6a4158f40b" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>getByName</name></member>
      <member refid="classMyGUI_1_1Singleton_12c806053cf545c5fdf7a3e6822a585a9" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>getClassTypeName</name></member>
      <member refid="classMyGUI_1_1ResourceManager_1f964e7a6dd2753760dcdbee14f7b8164" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>getCount</name></member>
      <member refid="classMyGUI_1_1ResourceManager_184dfa61dd9fdb77ba4a4cdf28e5f98a6" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>getEnumerator</name></member>
      <member refid="classMyGUI_1_1Singleton_162dffea70e4b1061c1018a3b12d3ecd8" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>getInstance</name></member>
      <member refid="classMyGUI_1_1Singleton_14529a5eda85de92183260b77259fefa2" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>getInstancePtr</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01ResourceManager_01_4_15fd3fdc4772d9939c30246a62f7dc5c6" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>getResource</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01ResourceManager_01_4_1c88e49359a6a9d9de33b3463524acc37" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>getResourceCount</name></member>
      <member refid="classMyGUI_1_1ResourceManager_11aa5b58120b9ed50b84924055b2d8073" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>initialise</name></member>
      <member refid="classMyGUI_1_1ResourceManager_1273e1d67a78c749755560186a5f16427" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>isExist</name></member>
      <member refid="classMyGUI_1_1ResourceManager_18d1d68d98e6541b175d254dc5363a220" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>load</name></member>
      <member refid="classMyGUI_1_1ResourceManager_12ae42b33abdd621605a0bdc97303886d" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>loadFromXmlNode</name></member>
      <member refid="classMyGUI_1_1ResourceManager_12d370ade39e01ad99109f716a8327ee2" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>LoadXmlDelegate</name></member>
      <member refid="classMyGUI_1_1ResourceManager_116249548ef593d64c408b24f1c2d29a5" prot="private" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>MapLoadXmlDelegate</name></member>
      <member refid="classMyGUI_1_1ResourceManager_14a19954dfa92ff56f375bf498519eb3f" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>MapResource</name></member>
      <member refid="classMyGUI_1_1ResourceManager_150eefe4c324df6f2beae3bcd15daace7" prot="private" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>mIsInitialise</name></member>
      <member refid="classMyGUI_1_1ResourceManager_127e3f2a876ae17eab26035a72a6c7da6" prot="private" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>mMapLoadXmlDelegate</name></member>
      <member refid="classMyGUI_1_1ResourceManager_14f511cb1d23f0a86612bc44ba3521170" prot="private" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>mRemovedResoures</name></member>
      <member refid="classMyGUI_1_1ResourceManager_19f923ed84881e5a7f788686a62476791" prot="private" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>mResources</name></member>
      <member refid="classMyGUI_1_1ResourceManager_1f02a39deed5d726cd572a6e8b67c0280" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>registerLoadXmlDelegate</name></member>
      <member refid="classMyGUI_1_1ResourceManager_189302d69c2dd76f916b1d70bd3015028" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>removeByName</name></member>
      <member refid="classMyGUI_1_1ResourceManager_12ecf0ff88928e6f2f2ec9d17b9bc47c8" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>removeResource</name></member>
      <member refid="classMyGUI_1_1ResourceManager_1194bc41b0f6969466a0a2913ae13a94a" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>ResourceManager</name></member>
      <member refid="classMyGUI_1_1ResourceManager_1d2f63cf97b0e3198e34c533bc207ebef" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>shutdown</name></member>
      <member refid="classMyGUI_1_1Singleton_130052fd9a72b1c3ad326830169e85307" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>Singleton</name></member>
      <member refid="classMyGUI_1_1ResourceManager_18f3f963e9da9b744f5d408c0e286be3c" prot="public" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>unregisterLoadXmlDelegate</name></member>
      <member refid="classMyGUI_1_1ResourceManager_114686516ecd7ea69353f7e1c88102b9d" prot="private" virt="non-virtual"><scope>MyGUI::ResourceManager</scope><name>VectorResource</name></member>
      <member refid="classMyGUI_1_1Singleton_1d342e3b15791e6a20cbd2aa9229b5c6f" prot="public" virt="virtual"><scope>MyGUI::ResourceManager</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
