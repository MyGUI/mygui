<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.6-NO">
  <compounddef id="classMyGUI_1_1Gui" kind="class" prot="public">
    <compoundname>MyGUI::Gui</compoundname>
    <basecompoundref refid="classMyGUI_1_1Singleton" prot="public" virt="non-virtual">MyGUI::Singleton&lt; Gui &gt;</basecompoundref>
    <basecompoundref refid="classMyGUI_1_1IUnlinkWidget" prot="public" virt="non-virtual">MyGUI::IUnlinkWidget</basecompoundref>
    <basecompoundref refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4" prot="public" virt="non-virtual">MyGUI::MemberObsolete&lt; Gui &gt;</basecompoundref>
    <includes local="no">MyGUI_Gui.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMyGUI_1_1Gui_10d168beb41cb12af3cad0fb153bc44d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::Gui::Gui</definition>
        <argsstring>()</argsstring>
        <name>Gui</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="46"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_11cc04bb36a0801043ba4f60f3933b083" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::initialise</definition>
        <argsstring>(const std::string &amp;_core=&quot;MyGUI_Core.xml&quot;)</argsstring>
        <name>initialise</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_core</declname>
          <defval>&quot;MyGUI_Core.xml&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise GUI and all GUI Managers <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_core</parametername>
</parameternamelist>
<parameterdescription>
<para>name of core config file for <ref refid="namespaceMyGUI" kindref="compound">MyGUI</ref> (contain main config files with skins, layers, fonts, etc.) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_logFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>Log file name </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="54"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_12ec9a47e8d72e63cada5d05c3ace73b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::initialise</definition>
        <argsstring>(const std::string &amp;_core, const std::string &amp;_logFileName)</argsstring>
        <name>initialise</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_core</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_logFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="58"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_10b80e1437e9e2f7763d3599daf4491e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shutdown GUI and all GUI Managers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_19fd30ab9b45b60a2cdaa19df2762fcb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
        <definition>Widget* MyGUI::Gui::createWidgetT</definition>
        <argsstring>(const std::string &amp;_type, const std::string &amp;_skin, const IntCoord &amp;_coord, Align _align, const std::string &amp;_layer, const std::string &amp;_name=&quot;&quot;)</argsstring>
        <name>createWidgetT</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_skin</declname>
        </param>
        <param>
          <type>const <ref refid="structMyGUI_1_1types_1_1TCoord" kindref="compound">IntCoord</ref> &amp;</type>
          <declname>_coord</declname>
        </param>
        <param>
          <type><ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref></type>
          <declname>_align</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_layer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create widget <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_type</parametername>
</parameternamelist>
<parameterdescription>
<para>widget type </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_skin</parametername>
</parameternamelist>
<parameterdescription>
<para>widget skin </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_coord</parametername>
</parameternamelist>
<parameterdescription>
<para>int coordinates of widget (_left, _top, _width, _height) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_align</parametername>
</parameternamelist>
<parameterdescription>
<para>widget align (possible values can be found in enum <ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_layer</parametername>
</parameternamelist>
<parameterdescription>
<para>layer where widget will be created (all layers usually defined in core_layer.xml file). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>optional widget name (you can use it for finding widget by name later) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="73"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1f2789ae583087bdca36a64b36b2b4818" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
        <definition>Widget* MyGUI::Gui::createWidgetT</definition>
        <argsstring>(const std::string &amp;_type, const std::string &amp;_skin, int _left, int _top, int _width, int _height, Align _align, const std::string &amp;_layer, const std::string &amp;_name=&quot;&quot;)</argsstring>
        <name>createWidgetT</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_skin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_height</declname>
        </param>
        <param>
          <type><ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref></type>
          <declname>_align</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_layer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="classMyGUI_1_1Gui_19fd30ab9b45b60a2cdaa19df2762fcb6" kindref="member">Gui::createWidgetT</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="75"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1db1df41b4e2fa4867c36c7078da4f4c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
        <definition>Widget* MyGUI::Gui::createWidgetRealT</definition>
        <argsstring>(const std::string &amp;_type, const std::string &amp;_skin, const FloatCoord &amp;_coord, Align _align, const std::string &amp;_layer, const std::string &amp;_name=&quot;&quot;)</argsstring>
        <name>createWidgetRealT</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_skin</declname>
        </param>
        <param>
          <type>const <ref refid="structMyGUI_1_1types_1_1TCoord" kindref="compound">FloatCoord</ref> &amp;</type>
          <declname>_coord</declname>
        </param>
        <param>
          <type><ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref></type>
          <declname>_align</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_layer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create widget using coordinates relative to parent widget. see <ref refid="classMyGUI_1_1Gui_19fd30ab9b45b60a2cdaa19df2762fcb6" kindref="member">Gui::createWidgetT</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="77"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_122c75f968d89dfd1362889c4b29eaff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
        <definition>Widget* MyGUI::Gui::createWidgetRealT</definition>
        <argsstring>(const std::string &amp;_type, const std::string &amp;_skin, float _left, float _top, float _width, float _height, Align _align, const std::string &amp;_layer, const std::string &amp;_name=&quot;&quot;)</argsstring>
        <name>createWidgetRealT</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_skin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_left</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_top</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_height</declname>
        </param>
        <param>
          <type><ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref></type>
          <declname>_align</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_layer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create widget using coordinates relative to parent. see <ref refid="classMyGUI_1_1Gui_19fd30ab9b45b60a2cdaa19df2762fcb6" kindref="member">Gui::createWidgetT</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1847fdb105b71b9ab9c41d214e9d7770a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* MyGUI::Gui::createWidget</definition>
        <argsstring>(const std::string &amp;_skin, const IntCoord &amp;_coord, Align _align, const std::string &amp;_layer, const std::string &amp;_name=&quot;&quot;)</argsstring>
        <name>createWidget</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_skin</declname>
        </param>
        <param>
          <type>const <ref refid="structMyGUI_1_1types_1_1TCoord" kindref="compound">IntCoord</ref> &amp;</type>
          <declname>_coord</declname>
        </param>
        <param>
          <type><ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref></type>
          <declname>_align</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_layer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="classMyGUI_1_1Gui_19fd30ab9b45b60a2cdaa19df2762fcb6" kindref="member">Gui::createWidgetT</ref> but return T* instead of Widget* </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="85" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1aca0393aa58e7be44aa133e9ff30adbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* MyGUI::Gui::createWidget</definition>
        <argsstring>(const std::string &amp;_skin, int _left, int _top, int _width, int _height, Align _align, const std::string &amp;_layer, const std::string &amp;_name=&quot;&quot;)</argsstring>
        <name>createWidget</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_skin</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_top</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_height</declname>
        </param>
        <param>
          <type><ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref></type>
          <declname>_align</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_layer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="classMyGUI_1_1Gui_19fd30ab9b45b60a2cdaa19df2762fcb6" kindref="member">Gui::createWidgetT</ref> but return T* instead of Widget* </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="91" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_136bff93c8c37c80cf5207ffa2d76dbae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* MyGUI::Gui::createWidgetReal</definition>
        <argsstring>(const std::string &amp;_skin, const FloatCoord &amp;_coord, Align _align, const std::string &amp;_layer, const std::string &amp;_name=&quot;&quot;)</argsstring>
        <name>createWidgetReal</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_skin</declname>
        </param>
        <param>
          <type>const <ref refid="structMyGUI_1_1types_1_1TCoord" kindref="compound">FloatCoord</ref> &amp;</type>
          <declname>_coord</declname>
        </param>
        <param>
          <type><ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref></type>
          <declname>_align</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_layer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="classMyGUI_1_1Gui_1db1df41b4e2fa4867c36c7078da4f4c6" kindref="member">Gui::createWidgetRealT</ref> but return T* instead of Widget* </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="97" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_135ea1a1c7dc42517ba613598d44f26fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* MyGUI::Gui::createWidgetReal</definition>
        <argsstring>(const std::string &amp;_skin, float _left, float _top, float _width, float _height, Align _align, const std::string &amp;_layer, const std::string &amp;_name=&quot;&quot;)</argsstring>
        <name>createWidgetReal</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_skin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_left</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_top</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_width</declname>
        </param>
        <param>
          <type>float</type>
          <declname>_height</declname>
        </param>
        <param>
          <type><ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref></type>
          <declname>_align</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_layer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="classMyGUI_1_1Gui_1db1df41b4e2fa4867c36c7078da4f4c6" kindref="member">Gui::createWidgetRealT</ref> but return T* instead of Widget* </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="103" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1080c8762ddca338a91cf7015642cad39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::destroyWidget</definition>
        <argsstring>(Widget *_widget)</argsstring>
        <name>destroyWidget</name>
        <param>
          <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
          <declname>_widget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy any created widget </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="108"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_13574bd885c246e6842a5aded83185f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::destroyWidgets</definition>
        <argsstring>(const VectorWidgetPtr &amp;_widgets)</argsstring>
        <name>destroyWidgets</name>
        <param>
          <type>const <ref refid="namespaceMyGUI_1df1f7c0b898769fe23f821eee2f682f6" kindref="member">VectorWidgetPtr</ref> &amp;</type>
          <declname>_widgets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy vector of widgets </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="111"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1be4158d8c91987c960f15f94787a6697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::destroyWidgets</definition>
        <argsstring>(EnumeratorWidgetPtr &amp;_widgets)</argsstring>
        <name>destroyWidgets</name>
        <param>
          <type><ref refid="classMyGUI_1_1Enumerator" kindref="compound">EnumeratorWidgetPtr</ref> &amp;</type>
          <declname>_widgets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy <ref refid="classMyGUI_1_1Enumerator" kindref="compound">Enumerator</ref> of widgets </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_165664e96c7b95fc0f351b8a0723160b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
        <definition>Widget* MyGUI::Gui::findWidgetT</definition>
        <argsstring>(const std::string &amp;_name, bool _throw=true)</argsstring>
        <name>findWidgetT</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_throw</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find widget by name If widget is not found the exception will be thrown, or if the second parameter is false the nullptr pointer will be returned </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1bb6e91fee83c4b675b6077e802795a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
        <definition>Widget* MyGUI::Gui::findWidgetT</definition>
        <argsstring>(const std::string &amp;_name, const std::string &amp;_prefix, bool _throw=true)</argsstring>
        <name>findWidgetT</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_prefix</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_throw</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find widget by name and prefix If widget is not found the exception will be thrown, or if the second parameter is false the nullptr pointer will be returned </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1e61d9a4b7e52f1e312f2bf83c06e74bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* MyGUI::Gui::findWidget</definition>
        <argsstring>(const std::string &amp;_name, bool _throw=true)</argsstring>
        <name>findWidget</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_throw</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find widget by name and cast it to T type. If widget not found or T and found widget have different types exception will be thrown, or if the second parameter is false the nullptr pointer will be returned </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="131" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1a674fd98b2c5dca24fac0993679eda94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>T *</type>
        <definition>T* MyGUI::Gui::findWidget</definition>
        <argsstring>(const std::string &amp;_name, const std::string &amp;_prefix, bool _throw=true)</argsstring>
        <name>findWidget</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_prefix</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_throw</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find widget by name and prefix and cast it to T type If widget not found or T and found widget have different types cause exception, or if the second parameter is false the nullptr pointer will be returned </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="142" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1f0dc894d2a9fcc2df87a0e884da7b80b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::destroyChildWidget</definition>
        <argsstring>(Widget *_widget)</argsstring>
        <name>destroyChildWidget</name>
        <param>
          <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
          <declname>_widget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy child widget or throw exception if this child widget not found </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="147"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1320d93b50bdec9e434767aabd12d19f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::destroyAllChildWidget</definition>
        <argsstring>()</argsstring>
        <name>destroyAllChildWidget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy all child widgets </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="150"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_12a97a99324b7c6bb80a3e78c39cf1d16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1Enumerator" kindref="compound">EnumeratorWidgetPtr</ref></type>
        <definition>EnumeratorWidgetPtr MyGUI::Gui::getEnumerator</definition>
        <argsstring>() const </argsstring>
        <name>getEnumerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get root widgets <ref refid="classMyGUI_1_1Enumerator" kindref="compound">Enumerator</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="153"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_179a22957310cbff33fa459f1190548a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::frameEvent</definition>
        <argsstring>(float _time)</argsstring>
        <name>frameEvent</name>
        <param>
          <type>float</type>
          <declname>_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inject frame entered event (called be renderer, do not call it manually). This function is called every frame by renderer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="158"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_14272005168ed1affb72ae39c70eb307d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::_linkChildWidget</definition>
        <argsstring>(Widget *_widget)</argsstring>
        <name>_linkChildWidget</name>
        <param>
          <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
          <declname>_widget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="169"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_101e5fe827f15929bc3f694423ba1d652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::_unlinkChildWidget</definition>
        <argsstring>(Widget *_widget)</argsstring>
        <name>_unlinkChildWidget</name>
        <param>
          <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
          <declname>_widget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classMyGUI_1_1Gui_1f5274b0854eea81a43203dd811086532" prot="public" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1delegates_1_1CMultiDelegate1" kindref="compound">EventHandle_FrameEventDelegate</ref></type>
        <definition>EventHandle_FrameEventDelegate MyGUI::Gui::eventFrameStart</definition>
        <argsstring></argsstring>
        <name>eventFrameStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event : Multidelegate. GUI per frame call.<linebreak/>
 signature : void method(float _time)<linebreak/>
 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_time</parametername>
</parameternamelist>
<parameterdescription>
<para>Time elapsed since last frame </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="166" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classMyGUI_1_1Gui_1dfc0a8922a22796e45bc7130c885848a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
        <definition>Widget* MyGUI::Gui::baseCreateWidget</definition>
        <argsstring>(WidgetStyle _style, const std::string &amp;_type, const std::string &amp;_skin, const IntCoord &amp;_coord, Align _align, const std::string &amp;_layer, const std::string &amp;_name)</argsstring>
        <name>baseCreateWidget</name>
        <param>
          <type><ref refid="structMyGUI_1_1WidgetStyle" kindref="compound">WidgetStyle</ref></type>
          <declname>_style</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_type</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_skin</declname>
        </param>
        <param>
          <type>const <ref refid="structMyGUI_1_1types_1_1TCoord" kindref="compound">IntCoord</ref> &amp;</type>
          <declname>_coord</declname>
        </param>
        <param>
          <type><ref refid="structMyGUI_1_1Align" kindref="compound">Align</ref></type>
          <declname>_align</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_layer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="174"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1e182103845b49141b098a58b52cc0760" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::_destroyChildWidget</definition>
        <argsstring>(Widget *_widget)</argsstring>
        <name>_destroyChildWidget</name>
        <param>
          <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
          <declname>_widget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="177"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_1cd2d2303dd896e483939252f63e4258e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Gui::_destroyAllChildWidget</definition>
        <argsstring>()</argsstring>
        <name>_destroyAllChildWidget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="180"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Gui_13042b15c78f75af0d2f808737a1774c7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void MyGUI::Gui::_unlinkWidget</definition>
        <argsstring>(Widget *_widget)</argsstring>
        <name>_unlinkWidget</name>
        <reimplements refid="classMyGUI_1_1IUnlinkWidget_1f91e3521c71ef6ff34707922d0dc7fc5">_unlinkWidget</reimplements>
        <param>
          <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
          <declname>_widget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="182"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMyGUI_1_1Gui_19d52ad13936fbd66465fcc11a1ee3a26" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceMyGUI_1df1f7c0b898769fe23f821eee2f682f6" kindref="member">VectorWidgetPtr</ref></type>
        <definition>VectorWidgetPtr MyGUI::Gui::mWidgetChild</definition>
        <argsstring></argsstring>
        <name>mWidgetChild</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="186" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_105d0063365964bcae372ab6a3c983c3f" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1InputManager" kindref="compound">InputManager</ref> *</type>
        <definition>InputManager* MyGUI::Gui::mInputManager</definition>
        <argsstring></argsstring>
        <name>mInputManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="189" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_150b2bf0a353119ed7b7cb66b0536db7b" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1SubWidgetManager" kindref="compound">SubWidgetManager</ref> *</type>
        <definition>SubWidgetManager* MyGUI::Gui::mSubWidgetManager</definition>
        <argsstring></argsstring>
        <name>mSubWidgetManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="190" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_155f68feac926bdf42f3567a8800c3e2f" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1LayerManager" kindref="compound">LayerManager</ref> *</type>
        <definition>LayerManager* MyGUI::Gui::mLayerManager</definition>
        <argsstring></argsstring>
        <name>mLayerManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="191" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_1d1c0d3bc28d9b8189073e5ab97024a70" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1SkinManager" kindref="compound">SkinManager</ref> *</type>
        <definition>SkinManager* MyGUI::Gui::mSkinManager</definition>
        <argsstring></argsstring>
        <name>mSkinManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="192" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_11d5b3583e99a5175514095d0790d9ba7" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1WidgetManager" kindref="compound">WidgetManager</ref> *</type>
        <definition>WidgetManager* MyGUI::Gui::mWidgetManager</definition>
        <argsstring></argsstring>
        <name>mWidgetManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="193" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_1667c9b08160c5a2d13d5e75f3a123c62" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1FontManager" kindref="compound">FontManager</ref> *</type>
        <definition>FontManager* MyGUI::Gui::mFontManager</definition>
        <argsstring></argsstring>
        <name>mFontManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="194" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_1fb329374ac8451c4657c81512d1c8b11" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1ControllerManager" kindref="compound">ControllerManager</ref> *</type>
        <definition>ControllerManager* MyGUI::Gui::mControllerManager</definition>
        <argsstring></argsstring>
        <name>mControllerManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="195" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_1646cda8d4b2ab355bdb92344f0b4cf1d" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1PointerManager" kindref="compound">PointerManager</ref> *</type>
        <definition>PointerManager* MyGUI::Gui::mPointerManager</definition>
        <argsstring></argsstring>
        <name>mPointerManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="196" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_1f1fe2e399e757ac3720d34908657aac1" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1ClipboardManager" kindref="compound">ClipboardManager</ref> *</type>
        <definition>ClipboardManager* MyGUI::Gui::mClipboardManager</definition>
        <argsstring></argsstring>
        <name>mClipboardManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="197" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_108f67f7695358b791789b18ab1de8c4a" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1LayoutManager" kindref="compound">LayoutManager</ref> *</type>
        <definition>LayoutManager* MyGUI::Gui::mLayoutManager</definition>
        <argsstring></argsstring>
        <name>mLayoutManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="198" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_13252894b93df158e6e919316eb6fa7f8" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1DynLibManager" kindref="compound">DynLibManager</ref> *</type>
        <definition>DynLibManager* MyGUI::Gui::mDynLibManager</definition>
        <argsstring></argsstring>
        <name>mDynLibManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="199" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_15829670214792e9e088be45573aba291" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1PluginManager" kindref="compound">PluginManager</ref> *</type>
        <definition>PluginManager* MyGUI::Gui::mPluginManager</definition>
        <argsstring></argsstring>
        <name>mPluginManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="200" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_1e519db779f0bc9af65d434297be03277" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1LanguageManager" kindref="compound">LanguageManager</ref> *</type>
        <definition>LanguageManager* MyGUI::Gui::mLanguageManager</definition>
        <argsstring></argsstring>
        <name>mLanguageManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="201" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_1854744c27e0ffff667396c8be78287ed" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1ResourceManager" kindref="compound">ResourceManager</ref> *</type>
        <definition>ResourceManager* MyGUI::Gui::mResourceManager</definition>
        <argsstring></argsstring>
        <name>mResourceManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="202" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_182b0cc007a832f1caf4acaf34a1fa034" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1FactoryManager" kindref="compound">FactoryManager</ref> *</type>
        <definition>FactoryManager* MyGUI::Gui::mFactoryManager</definition>
        <argsstring></argsstring>
        <name>mFactoryManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="203" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_1e6b80d48591352c075e7f587d1c9310d" prot="private" static="no" mutable="no">
        <type><ref refid="classMyGUI_1_1ToolTipManager" kindref="compound">ToolTipManager</ref> *</type>
        <definition>ToolTipManager* MyGUI::Gui::mToolTipManager</definition>
        <argsstring></argsstring>
        <name>mToolTipManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="204" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1Gui_18ab457b365a82b63ce1a4cdbb3aed7a9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MyGUI::Gui::mIsInitialise</definition>
        <argsstring></argsstring>
        <name>mIsInitialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="206" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classMyGUI_1_1Gui_1804721196da6de4cfc2e8337927765ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class WidgetManager</definition>
        <argsstring></argsstring>
        <name>WidgetManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="43" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="653">
        <label>MyGUI::Singleton&lt; Gui &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
      </node>
      <node id="654">
        <label>MyGUI::IUnlinkWidget</label>
        <link refid="classMyGUI_1_1IUnlinkWidget"/>
      </node>
      <node id="655">
        <label>MyGUI::MemberObsolete&lt; Gui &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4"/>
      </node>
      <node id="652">
        <label>MyGUI::Gui</label>
        <link refid="classMyGUI_1_1Gui"/>
        <childnode refid="653" relation="public-inheritance">
        </childnode>
        <childnode refid="654" relation="public-inheritance">
        </childnode>
        <childnode refid="655" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="691">
        <label>MyGUI::delegates::CMultiDelegate1&lt; TP1 &gt;</label>
        <link refid="classMyGUI_1_1delegates_1_1CMultiDelegate1"/>
      </node>
      <node id="706">
        <label>MyGUI::WidgetStyle</label>
        <link refid="structMyGUI_1_1WidgetStyle"/>
      </node>
      <node id="676">
        <label>T</label>
      </node>
      <node id="717">
        <label>MyGUI::Singleton&lt; ControllerManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="716" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="698">
        <label>MyGUI::ILayer</label>
        <link refid="classMyGUI_1_1ILayer"/>
        <childnode refid="699" relation="public-inheritance">
        </childnode>
      </node>
      <node id="682">
        <label>MyGUI::types::TCoord&lt; T &gt;</label>
        <link refid="structMyGUI_1_1types_1_1TCoord"/>
        <childnode refid="676" relation="usage">
          <edgelabel>width
height
left
top</edgelabel>
        </childnode>
      </node>
      <node id="739">
        <label>MyGUI::Singleton&lt; ResourceManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="738" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="694">
        <label>MyGUI::SkinItem</label>
        <link refid="classMyGUI_1_1SkinItem"/>
        <childnode refid="695" relation="public-inheritance">
        </childnode>
        <childnode refid="697" relation="usage">
          <edgelabel>mTexture</edgelabel>
        </childnode>
        <childnode refid="701" relation="usage">
          <edgelabel>mMainSkin</edgelabel>
        </childnode>
        <childnode refid="704" relation="usage">
          <edgelabel>mText</edgelabel>
        </childnode>
      </node>
      <node id="716">
        <label>MyGUI::ControllerManager</label>
        <link refid="classMyGUI_1_1ControllerManager"/>
        <childnode refid="717" relation="public-inheritance">
        </childnode>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
      </node>
      <node id="696">
        <label>MyGUI::ILayerItem</label>
        <link refid="classMyGUI_1_1ILayerItem"/>
      </node>
      <node id="667">
        <label>MyGUI::Singleton&lt; FontManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="666" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="672">
        <label>MyGUI::PointerManager</label>
        <link refid="classMyGUI_1_1PointerManager"/>
        <childnode refid="673" relation="public-inheritance">
        </childnode>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
        <childnode refid="674" relation="public-inheritance">
        </childnode>
        <childnode refid="675" relation="usage">
          <edgelabel>mPoint</edgelabel>
        </childnode>
        <childnode refid="677" relation="usage">
          <edgelabel>eventChangeMousePointer</edgelabel>
        </childnode>
        <childnode refid="678" relation="usage">
          <edgelabel>mMousePointer</edgelabel>
        </childnode>
        <childnode refid="710" relation="usage">
          <edgelabel>mPointer</edgelabel>
        </childnode>
        <childnode refid="679" relation="usage">
          <edgelabel>mWidgetOwner</edgelabel>
        </childnode>
      </node>
      <node id="674">
        <label>MyGUI::MemberObsolete&lt; PointerManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01PointerManager_01_4"/>
      </node>
      <node id="663">
        <label>MyGUI::delegates::CMultiDelegate3&lt; TP1, TP2, TP3 &gt;</label>
        <link refid="classMyGUI_1_1delegates_1_1CMultiDelegate3"/>
      </node>
      <node id="662">
        <label>MyGUI::MemberObsolete&lt; LayoutManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01LayoutManager_01_4"/>
      </node>
      <node id="670">
        <label>MyGUI::Singleton&lt; WidgetManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="669" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="669">
        <label>MyGUI::WidgetManager</label>
        <link refid="classMyGUI_1_1WidgetManager"/>
        <childnode refid="670" relation="public-inheritance">
        </childnode>
        <childnode refid="671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="666">
        <label>MyGUI::FontManager</label>
        <link refid="classMyGUI_1_1FontManager"/>
        <childnode refid="667" relation="public-inheritance">
        </childnode>
        <childnode refid="668" relation="public-inheritance">
        </childnode>
      </node>
      <node id="742">
        <label>MyGUI::Singleton&lt; SkinManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="741" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="697">
        <label>MyGUI::ITexture</label>
        <link refid="classMyGUI_1_1ITexture"/>
      </node>
      <node id="688">
        <label>MyGUI::delegates::CMultiDelegate4&lt; TP1, TP2, TP3, TP4 &gt;</label>
        <link refid="classMyGUI_1_1delegates_1_1CMultiDelegate4"/>
      </node>
      <node id="690">
        <label>MyGUI::MaskPickInfo</label>
        <link refid="classMyGUI_1_1MaskPickInfo"/>
      </node>
      <node id="657">
        <label>MyGUI::Singleton&lt; Gui &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="656" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="741">
        <label>MyGUI::SkinManager</label>
        <link refid="classMyGUI_1_1SkinManager"/>
        <childnode refid="742" relation="public-inheritance">
        </childnode>
        <childnode refid="743" relation="public-inheritance">
        </childnode>
      </node>
      <node id="713">
        <label>MyGUI::MemberObsolete&lt; PluginManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01PluginManager_01_4"/>
      </node>
      <node id="681">
        <label>MyGUI::ICroppedRectangle</label>
        <link refid="classMyGUI_1_1ICroppedRectangle"/>
        <childnode refid="675" relation="usage">
          <edgelabel>mAbsolutePosition</edgelabel>
        </childnode>
        <childnode refid="682" relation="usage">
          <edgelabel>mCoord</edgelabel>
        </childnode>
        <childnode refid="683" relation="usage">
          <edgelabel>mMargin</edgelabel>
        </childnode>
        <childnode refid="681" relation="usage">
          <edgelabel>mCroppedParent</edgelabel>
        </childnode>
      </node>
      <node id="683">
        <label>MyGUI::types::TRect&lt; T &gt;</label>
        <link refid="structMyGUI_1_1types_1_1TRect"/>
        <childnode refid="676" relation="usage">
          <edgelabel>right
left
bottom
top</edgelabel>
        </childnode>
      </node>
      <node id="700">
        <label>MyGUI::ILayerNode</label>
        <link refid="classMyGUI_1_1ILayerNode"/>
        <childnode refid="680" relation="public-inheritance">
        </childnode>
      </node>
      <node id="726">
        <label>MyGUI::KeyCode</label>
        <link refid="structMyGUI_1_1KeyCode"/>
      </node>
      <node id="731">
        <label>MyGUI::MemberObsolete&lt; LanguageManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01LanguageManager_01_4"/>
      </node>
      <node id="658">
        <label>MyGUI::IUnlinkWidget</label>
        <link refid="classMyGUI_1_1IUnlinkWidget"/>
      </node>
      <node id="735">
        <label>MyGUI::Singleton&lt; DynLibManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="734" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="705">
        <label>MyGUI::MemberObsolete&lt; Widget &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01Widget_01_4"/>
      </node>
      <node id="740">
        <label>MyGUI::MemberObsolete&lt; ResourceManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01ResourceManager_01_4"/>
      </node>
      <node id="734">
        <label>MyGUI::DynLibManager</label>
        <link refid="classMyGUI_1_1DynLibManager"/>
        <childnode refid="735" relation="public-inheritance">
        </childnode>
      </node>
      <node id="728">
        <label>MyGUI::Timer</label>
        <link refid="classMyGUI_1_1Timer"/>
      </node>
      <node id="692">
        <label>MyGUI::delegates::CMultiDelegate2&lt; TP1, TP2 &gt;</label>
        <link refid="classMyGUI_1_1delegates_1_1CMultiDelegate2"/>
      </node>
      <node id="664">
        <label>MyGUI::ClipboardManager</label>
        <link refid="classMyGUI_1_1ClipboardManager"/>
        <childnode refid="665" relation="public-inheritance">
        </childnode>
      </node>
      <node id="678">
        <label>MyGUI::ImageBox</label>
        <link refid="classMyGUI_1_1ImageBox"/>
        <childnode refid="679" relation="public-inheritance">
        </childnode>
        <childnode refid="707" relation="usage">
          <edgelabel>mSizeTexture
mSizeTile</edgelabel>
        </childnode>
        <childnode refid="683" relation="usage">
          <edgelabel>mRectImage</edgelabel>
        </childnode>
        <childnode refid="708" relation="usage">
          <edgelabel>mResource</edgelabel>
        </childnode>
      </node>
      <node id="708">
        <label>MyGUI::ResourceImageSet</label>
        <link refid="classMyGUI_1_1ResourceImageSet"/>
        <childnode refid="709" relation="public-inheritance">
        </childnode>
      </node>
      <node id="684">
        <label>MyGUI::UserData</label>
        <link refid="classMyGUI_1_1UserData"/>
        <childnode refid="685" relation="usage">
          <edgelabel>mUserData
mInternalData</edgelabel>
        </childnode>
      </node>
      <node id="707">
        <label>MyGUI::types::TSize&lt; T &gt;</label>
        <link refid="structMyGUI_1_1types_1_1TSize"/>
        <childnode refid="676" relation="usage">
          <edgelabel>width
height</edgelabel>
        </childnode>
      </node>
      <node id="704">
        <label>MyGUI::ISubWidgetText</label>
        <link refid="classMyGUI_1_1ISubWidgetText"/>
        <childnode refid="702" relation="public-inheritance">
        </childnode>
      </node>
      <node id="733">
        <label>MyGUI::delegates::IDelegate2&lt; TP1, TP2 &gt;</label>
        <link refid="classMyGUI_1_1delegates_1_1IDelegate2"/>
      </node>
      <node id="729">
        <label>MyGUI::LanguageManager</label>
        <link refid="classMyGUI_1_1LanguageManager"/>
        <childnode refid="730" relation="public-inheritance">
        </childnode>
        <childnode refid="731" relation="public-inheritance">
        </childnode>
        <childnode refid="732" relation="usage">
          <edgelabel>eventRequestTag</edgelabel>
        </childnode>
        <childnode refid="677" relation="usage">
          <edgelabel>eventChangeLanguage</edgelabel>
        </childnode>
      </node>
      <node id="668">
        <label>MyGUI::MemberObsolete&lt; FontManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01FontManager_01_4"/>
      </node>
      <node id="714">
        <label>MyGUI::SubWidgetManager</label>
        <link refid="classMyGUI_1_1SubWidgetManager"/>
        <childnode refid="715" relation="public-inheritance">
        </childnode>
      </node>
      <node id="679">
        <label>MyGUI::Widget</label>
        <link refid="classMyGUI_1_1Widget"/>
        <childnode refid="680" relation="public-inheritance">
        </childnode>
        <childnode refid="681" relation="public-inheritance">
        </childnode>
        <childnode refid="684" relation="public-inheritance">
        </childnode>
        <childnode refid="687" relation="public-inheritance">
        </childnode>
        <childnode refid="693" relation="public-inheritance">
        </childnode>
        <childnode refid="694" relation="public-inheritance">
        </childnode>
        <childnode refid="705" relation="public-inheritance">
        </childnode>
        <childnode refid="663" relation="usage">
          <edgelabel>eventChangeProperty</edgelabel>
        </childnode>
        <childnode refid="706" relation="usage">
          <edgelabel>mWidgetStyle</edgelabel>
        </childnode>
        <childnode refid="679" relation="usage">
          <edgelabel>mContainer
mParent
mWidgetClient</edgelabel>
        </childnode>
        <childnode refid="703" relation="usage">
          <edgelabel>mAlign</edgelabel>
        </childnode>
      </node>
      <node id="671">
        <label>MyGUI::MemberObsolete&lt; WidgetManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01WidgetManager_01_4"/>
      </node>
      <node id="677">
        <label>MyGUI::delegates::CMultiDelegate1&lt; const std::string &amp; &gt;</label>
        <link refid="classMyGUI_1_1delegates_1_1CMultiDelegate1"/>
      </node>
      <node id="736">
        <label>MyGUI::FactoryManager</label>
        <link refid="classMyGUI_1_1FactoryManager"/>
        <childnode refid="737" relation="public-inheritance">
        </childnode>
      </node>
      <node id="703">
        <label>MyGUI::Align</label>
        <link refid="structMyGUI_1_1Align"/>
      </node>
      <node id="723">
        <label>MyGUI::InputManager</label>
        <link refid="classMyGUI_1_1InputManager"/>
        <childnode refid="724" relation="public-inheritance">
        </childnode>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
        <childnode refid="725" relation="public-inheritance">
        </childnode>
        <childnode refid="675" relation="usage">
          <edgelabel>mLastPressed
mMousePosition</edgelabel>
        </childnode>
        <childnode refid="698" relation="usage">
          <edgelabel>mLayerMouseFocus</edgelabel>
        </childnode>
        <childnode refid="726" relation="usage">
          <edgelabel>mHoldKey</edgelabel>
        </childnode>
        <childnode refid="727" relation="usage">
          <edgelabel>eventChangeMouseFocus
eventChangeKeyFocus</edgelabel>
        </childnode>
        <childnode refid="728" relation="usage">
          <edgelabel>mTimer</edgelabel>
        </childnode>
        <childnode refid="679" relation="usage">
          <edgelabel>mWidgetKeyFocus
mWidgetMouseFocus</edgelabel>
        </childnode>
      </node>
      <node id="715">
        <label>MyGUI::Singleton&lt; SubWidgetManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="714" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="701">
        <label>MyGUI::ISubWidgetRect</label>
        <link refid="classMyGUI_1_1ISubWidgetRect"/>
        <childnode refid="702" relation="public-inheritance">
        </childnode>
      </node>
      <node id="699">
        <label>MyGUI::ISerializable</label>
        <link refid="classMyGUI_1_1ISerializable"/>
        <childnode refid="680" relation="public-inheritance">
        </childnode>
      </node>
      <node id="702">
        <label>MyGUI::ISubWidget</label>
        <link refid="classMyGUI_1_1ISubWidget"/>
        <childnode refid="681" relation="public-inheritance">
        </childnode>
        <childnode refid="680" relation="public-inheritance">
        </childnode>
        <childnode refid="703" relation="usage">
          <edgelabel>mAlign</edgelabel>
        </childnode>
      </node>
      <node id="743">
        <label>MyGUI::MemberObsolete&lt; SkinManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01SkinManager_01_4"/>
      </node>
      <node id="693">
        <label>MyGUI::delegates::IDelegateUnlink</label>
        <link refid="classMyGUI_1_1delegates_1_1IDelegateUnlink"/>
        <childnode refid="693" relation="usage">
          <edgelabel>m_baseDelegateUnlink</edgelabel>
        </childnode>
      </node>
      <node id="689">
        <label>MyGUI::EventPair3to4&lt; EventHandle_WidgetIntInt, EventHandle_WidgetIntIntButton &gt;</label>
        <link refid="classMyGUI_1_1EventPair3to4"/>
        <childnode refid="663" relation="usage">
          <edgelabel>m_eventObsolete</edgelabel>
        </childnode>
        <childnode refid="688" relation="usage">
          <edgelabel>m_event</edgelabel>
        </childnode>
      </node>
      <node id="665">
        <label>MyGUI::Singleton&lt; ClipboardManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="664" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="732">
        <label>MyGUI::delegates::CDelegate2&lt; const UString &amp;, UString &amp; &gt;</label>
        <link refid="classMyGUI_1_1delegates_1_1CDelegate2"/>
        <childnode refid="733" relation="usage">
          <edgelabel>mDelegate</edgelabel>
        </childnode>
      </node>
      <node id="661">
        <label>MyGUI::Singleton&lt; LayoutManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="660" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="710">
        <label>MyGUI::IPointer</label>
        <link refid="classMyGUI_1_1IPointer"/>
        <childnode refid="709" relation="public-inheritance">
        </childnode>
      </node>
      <node id="687">
        <label>MyGUI::WidgetInput</label>
        <link refid="classMyGUI_1_1WidgetInput"/>
        <childnode refid="663" relation="usage">
          <edgelabel>eventKeyButtonPressed
eventMouseMove</edgelabel>
        </childnode>
        <childnode refid="688" relation="usage">
          <edgelabel>eventMouseButtonPressed
eventMouseButtonReleased</edgelabel>
        </childnode>
        <childnode refid="689" relation="usage">
          <edgelabel>eventMouseDrag</edgelabel>
        </childnode>
        <childnode refid="690" relation="usage">
          <edgelabel>mOwnMaskPickInfo</edgelabel>
        </childnode>
        <childnode refid="691" relation="usage">
          <edgelabel>eventMouseButtonDoubleClick
eventMouseButtonClick</edgelabel>
        </childnode>
        <childnode refid="692" relation="usage">
          <edgelabel>eventKeySetFocus
eventMouseSetFocus
eventKeyButtonReleased
eventKeyLostFocus
eventRootMouseChangeFocus
eventMouseWheel
eventToolTip
eventMouseLostFocus
eventRootKeyChangeFocus</edgelabel>
        </childnode>
      </node>
      <node id="660">
        <label>MyGUI::LayoutManager</label>
        <link refid="classMyGUI_1_1LayoutManager"/>
        <childnode refid="661" relation="public-inheritance">
        </childnode>
        <childnode refid="662" relation="public-inheritance">
        </childnode>
        <childnode refid="663" relation="usage">
          <edgelabel>eventAddUserString</edgelabel>
        </childnode>
      </node>
      <node id="722">
        <label>MyGUI::MemberObsolete&lt; LayerManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01LayerManager_01_4"/>
      </node>
      <node id="686">
        <label>MyGUI::Any::AnyEmpty</label>
        <link refid="structMyGUI_1_1Any_1_1AnyEmpty"/>
      </node>
      <node id="721">
        <label>MyGUI::Singleton&lt; LayerManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="720" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="724">
        <label>MyGUI::Singleton&lt; InputManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="723" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="719">
        <label>MyGUI::Singleton&lt; ToolTipManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="718" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="738">
        <label>MyGUI::ResourceManager</label>
        <link refid="classMyGUI_1_1ResourceManager"/>
        <childnode refid="739" relation="public-inheritance">
        </childnode>
        <childnode refid="740" relation="public-inheritance">
        </childnode>
      </node>
      <node id="695">
        <label>MyGUI::LayerItem</label>
        <link refid="classMyGUI_1_1LayerItem"/>
        <childnode refid="696" relation="public-inheritance">
        </childnode>
        <childnode refid="697" relation="usage">
          <edgelabel>mTexture</edgelabel>
        </childnode>
        <childnode refid="698" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
        <childnode refid="700" relation="usage">
          <edgelabel>mSaveLayerNode
mLayerNode</edgelabel>
        </childnode>
      </node>
      <node id="709">
        <label>MyGUI::IResource</label>
        <link refid="classMyGUI_1_1IResource"/>
        <childnode refid="699" relation="public-inheritance">
        </childnode>
      </node>
      <node id="737">
        <label>MyGUI::Singleton&lt; FactoryManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="736" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="659">
        <label>MyGUI::MemberObsolete&lt; Gui &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4"/>
      </node>
      <node id="656">
        <label>MyGUI::Gui</label>
        <link refid="classMyGUI_1_1Gui"/>
        <childnode refid="657" relation="public-inheritance">
        </childnode>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
        <childnode refid="659" relation="public-inheritance">
        </childnode>
        <childnode refid="660" relation="usage">
          <edgelabel>mLayoutManager</edgelabel>
        </childnode>
        <childnode refid="664" relation="usage">
          <edgelabel>mClipboardManager</edgelabel>
        </childnode>
        <childnode refid="666" relation="usage">
          <edgelabel>mFontManager</edgelabel>
        </childnode>
        <childnode refid="669" relation="usage">
          <edgelabel>mWidgetManager</edgelabel>
        </childnode>
        <childnode refid="672" relation="usage">
          <edgelabel>mPointerManager</edgelabel>
        </childnode>
        <childnode refid="711" relation="usage">
          <edgelabel>mPluginManager</edgelabel>
        </childnode>
        <childnode refid="714" relation="usage">
          <edgelabel>mSubWidgetManager</edgelabel>
        </childnode>
        <childnode refid="716" relation="usage">
          <edgelabel>mControllerManager</edgelabel>
        </childnode>
        <childnode refid="718" relation="usage">
          <edgelabel>mToolTipManager</edgelabel>
        </childnode>
        <childnode refid="720" relation="usage">
          <edgelabel>mLayerManager</edgelabel>
        </childnode>
        <childnode refid="723" relation="usage">
          <edgelabel>mInputManager</edgelabel>
        </childnode>
        <childnode refid="729" relation="usage">
          <edgelabel>mLanguageManager</edgelabel>
        </childnode>
        <childnode refid="734" relation="usage">
          <edgelabel>mDynLibManager</edgelabel>
        </childnode>
        <childnode refid="736" relation="usage">
          <edgelabel>mFactoryManager</edgelabel>
        </childnode>
        <childnode refid="738" relation="usage">
          <edgelabel>mResourceManager</edgelabel>
        </childnode>
        <childnode refid="741" relation="usage">
          <edgelabel>mSkinManager</edgelabel>
        </childnode>
        <childnode refid="691" relation="usage">
          <edgelabel>eventFrameStart</edgelabel>
        </childnode>
      </node>
      <node id="675">
        <label>MyGUI::types::TPoint&lt; T &gt;</label>
        <link refid="structMyGUI_1_1types_1_1TPoint"/>
        <childnode refid="676" relation="usage">
          <edgelabel>left
top</edgelabel>
        </childnode>
      </node>
      <node id="725">
        <label>MyGUI::MemberObsolete&lt; InputManager &gt;</label>
        <link refid="classMyGUI_1_1MemberObsolete_3_01InputManager_01_4"/>
      </node>
      <node id="718">
        <label>MyGUI::ToolTipManager</label>
        <link refid="classMyGUI_1_1ToolTipManager"/>
        <childnode refid="719" relation="public-inheritance">
        </childnode>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
        <childnode refid="675" relation="usage">
          <edgelabel>mOldMousePoint</edgelabel>
        </childnode>
        <childnode refid="679" relation="usage">
          <edgelabel>mOldFocusWidget</edgelabel>
        </childnode>
      </node>
      <node id="673">
        <label>MyGUI::Singleton&lt; PointerManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="672" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="712">
        <label>MyGUI::Singleton&lt; PluginManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="711" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="730">
        <label>MyGUI::Singleton&lt; LanguageManager &gt;</label>
        <link refid="classMyGUI_1_1Singleton"/>
        <childnode refid="729" relation="usage">
          <edgelabel>msInstance</edgelabel>
        </childnode>
      </node>
      <node id="685">
        <label>MyGUI::Any</label>
        <link refid="classMyGUI_1_1Any"/>
        <childnode refid="686" relation="usage">
          <edgelabel>Null</edgelabel>
        </childnode>
      </node>
      <node id="711">
        <label>MyGUI::PluginManager</label>
        <link refid="classMyGUI_1_1PluginManager"/>
        <childnode refid="712" relation="public-inheritance">
        </childnode>
        <childnode refid="713" relation="public-inheritance">
        </childnode>
      </node>
      <node id="680">
        <label>MyGUI::IObject</label>
        <link refid="classMyGUI_1_1IObject"/>
      </node>
      <node id="720">
        <label>MyGUI::LayerManager</label>
        <link refid="classMyGUI_1_1LayerManager"/>
        <childnode refid="721" relation="public-inheritance">
        </childnode>
        <childnode refid="658" relation="public-inheritance">
        </childnode>
        <childnode refid="722" relation="public-inheritance">
        </childnode>
      </node>
      <node id="727">
        <label>MyGUI::delegates::CMultiDelegate1&lt; Widget * &gt;</label>
        <link refid="classMyGUI_1_1delegates_1_1CMultiDelegate1"/>
      </node>
    </collaborationgraph>
    <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" line="42" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Gui.h" bodystart="38" bodyend="207"/>
    <listofallmembers>
      <member refid="classMyGUI_1_1Gui_1cd2d2303dd896e483939252f63e4258e" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>_destroyAllChildWidget</name></member>
      <member refid="classMyGUI_1_1Gui_1e182103845b49141b098a58b52cc0760" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>_destroyChildWidget</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_1a3c2f892c1cb791ab4c84aa06ed8054c" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>_injectFrameEntered</name></member>
      <member refid="classMyGUI_1_1Gui_14272005168ed1affb72ae39c70eb307d" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>_linkChildWidget</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_1cd319b3350c3b1ddb160935a07ff5522" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>_resizeWindow</name></member>
      <member refid="classMyGUI_1_1Gui_101e5fe827f15929bc3f694423ba1d652" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>_unlinkChildWidget</name></member>
      <member refid="classMyGUI_1_1Gui_13042b15c78f75af0d2f808737a1774c7" prot="private" virt="virtual"><scope>MyGUI::Gui</scope><name>_unlinkWidget</name></member>
      <member refid="classMyGUI_1_1Singleton_1a74db81b5e58d5c6cc4e9bcba1648253" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>Base</name></member>
      <member refid="classMyGUI_1_1Gui_1dfc0a8922a22796e45bc7130c885848a" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>baseCreateWidget</name></member>
      <member refid="classMyGUI_1_1Gui_1847fdb105b71b9ab9c41d214e9d7770a" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>createWidget</name></member>
      <member refid="classMyGUI_1_1Gui_1aca0393aa58e7be44aa133e9ff30adbc" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>createWidget</name></member>
      <member refid="classMyGUI_1_1Gui_136bff93c8c37c80cf5207ffa2d76dbae" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>createWidgetReal</name></member>
      <member refid="classMyGUI_1_1Gui_135ea1a1c7dc42517ba613598d44f26fe" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>createWidgetReal</name></member>
      <member refid="classMyGUI_1_1Gui_1db1df41b4e2fa4867c36c7078da4f4c6" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>createWidgetRealT</name></member>
      <member refid="classMyGUI_1_1Gui_122c75f968d89dfd1362889c4b29eaff2" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>createWidgetRealT</name></member>
      <member refid="classMyGUI_1_1Gui_19fd30ab9b45b60a2cdaa19df2762fcb6" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>createWidgetT</name></member>
      <member refid="classMyGUI_1_1Gui_1f2789ae583087bdca36a64b36b2b4818" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>createWidgetT</name></member>
      <member refid="classMyGUI_1_1Gui_1320d93b50bdec9e434767aabd12d19f0" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>destroyAllChildWidget</name></member>
      <member refid="classMyGUI_1_1Gui_1f0dc894d2a9fcc2df87a0e884da7b80b" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>destroyChildWidget</name></member>
      <member refid="classMyGUI_1_1Gui_1080c8762ddca338a91cf7015642cad39" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>destroyWidget</name></member>
      <member refid="classMyGUI_1_1Gui_13574bd885c246e6842a5aded83185f71" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>destroyWidgets</name></member>
      <member refid="classMyGUI_1_1Gui_1be4158d8c91987c960f15f94787a6697" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>destroyWidgets</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_1048693eba19c1a0504468a01802d6bdb" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>destroyWidgetsVector</name></member>
      <member refid="classMyGUI_1_1Gui_1f5274b0854eea81a43203dd811086532" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>eventFrameStart</name></member>
      <member refid="classMyGUI_1_1Gui_1e61d9a4b7e52f1e312f2bf83c06e74bd" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>findWidget</name></member>
      <member refid="classMyGUI_1_1Gui_1a674fd98b2c5dca24fac0993679eda94" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>findWidget</name></member>
      <member refid="classMyGUI_1_1Gui_165664e96c7b95fc0f351b8a0723160b8" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>findWidgetT</name></member>
      <member refid="classMyGUI_1_1Gui_1bb6e91fee83c4b675b6077e802795a1c" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>findWidgetT</name></member>
      <member refid="classMyGUI_1_1Gui_179a22957310cbff33fa459f1190548a8" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>frameEvent</name></member>
      <member refid="classMyGUI_1_1Singleton_12c806053cf545c5fdf7a3e6822a585a9" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>getClassTypeName</name></member>
      <member refid="classMyGUI_1_1Gui_12a97a99324b7c6bb80a3e78c39cf1d16" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>getEnumerator</name></member>
      <member refid="classMyGUI_1_1Singleton_162dffea70e4b1061c1018a3b12d3ecd8" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>getInstance</name></member>
      <member refid="classMyGUI_1_1Singleton_14529a5eda85de92183260b77259fefa2" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>getInstancePtr</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_1f9a07725cc7c9e78381c646775204870" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>getViewHeight</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_14c449ce3a8d84960af286519ca04c204" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>getViewSize</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_11142fa104e39e701c0109b788b7702cc" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>getViewWidth</name></member>
      <member refid="classMyGUI_1_1Gui_10d168beb41cb12af3cad0fb153bc44d9" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>Gui</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_12c760c9b81a79be74eb241e8b184bdd5" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>hidePointer</name></member>
      <member refid="classMyGUI_1_1Gui_11cc04bb36a0801043ba4f60f3933b083" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>initialise</name></member>
      <member refid="classMyGUI_1_1Gui_12ec9a47e8d72e63cada5d05c3ace73b0" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>initialise</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_1dc1d1ee63c995f0a86e05a29b56d4c05" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>injectFrameEntered</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_1bfbcdca1569097078d454427208d0933" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>injectKeyPress</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_196d40585df116245c4fa5c7a15c5b787" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>injectKeyRelease</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_18ad284c5c53c253f4fcc504045946925" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>injectMouseMove</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_1433785ed53314b902edf344a3f4d76b7" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>injectMousePress</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_107578c630dcdef09b64763feac7d8fa6" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>injectMouseRelease</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_12fddad7b51b3cefa7e89539018c5e94d" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>isShowPointer</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_129e8954e7580d3833ec2ebb931483216" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>isVisiblePointer</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_1b39e7b6bcc390d7550f6893363a819b2" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>load</name></member>
      <member refid="classMyGUI_1_1Gui_1f1fe2e399e757ac3720d34908657aac1" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mClipboardManager</name></member>
      <member refid="classMyGUI_1_1Gui_1fb329374ac8451c4657c81512d1c8b11" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mControllerManager</name></member>
      <member refid="classMyGUI_1_1Gui_13252894b93df158e6e919316eb6fa7f8" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mDynLibManager</name></member>
      <member refid="classMyGUI_1_1Gui_182b0cc007a832f1caf4acaf34a1fa034" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mFactoryManager</name></member>
      <member refid="classMyGUI_1_1Gui_1667c9b08160c5a2d13d5e75f3a123c62" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mFontManager</name></member>
      <member refid="classMyGUI_1_1Gui_105d0063365964bcae372ab6a3c983c3f" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mInputManager</name></member>
      <member refid="classMyGUI_1_1Gui_18ab457b365a82b63ce1a4cdbb3aed7a9" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mIsInitialise</name></member>
      <member refid="classMyGUI_1_1Gui_1e519db779f0bc9af65d434297be03277" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mLanguageManager</name></member>
      <member refid="classMyGUI_1_1Gui_155f68feac926bdf42f3567a8800c3e2f" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mLayerManager</name></member>
      <member refid="classMyGUI_1_1Gui_108f67f7695358b791789b18ab1de8c4a" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mLayoutManager</name></member>
      <member refid="classMyGUI_1_1Gui_15829670214792e9e088be45573aba291" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mPluginManager</name></member>
      <member refid="classMyGUI_1_1Gui_1646cda8d4b2ab355bdb92344f0b4cf1d" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mPointerManager</name></member>
      <member refid="classMyGUI_1_1Gui_1854744c27e0ffff667396c8be78287ed" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mResourceManager</name></member>
      <member refid="classMyGUI_1_1Gui_1d1c0d3bc28d9b8189073e5ab97024a70" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mSkinManager</name></member>
      <member refid="classMyGUI_1_1Gui_150b2bf0a353119ed7b7cb66b0536db7b" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mSubWidgetManager</name></member>
      <member refid="classMyGUI_1_1Gui_1e6b80d48591352c075e7f587d1c9310d" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mToolTipManager</name></member>
      <member refid="classMyGUI_1_1Gui_19d52ad13936fbd66465fcc11a1ee3a26" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mWidgetChild</name></member>
      <member refid="classMyGUI_1_1Gui_11d5b3583e99a5175514095d0790d9ba7" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>mWidgetManager</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_149f7c1bfecb03fb8c10f0cf48a18c8c4" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>setVisiblePointer</name></member>
      <member refid="classMyGUI_1_1MemberObsolete_3_01Gui_01_4_1467cdeec99d06339732bcaecd2f604f5" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>showPointer</name></member>
      <member refid="classMyGUI_1_1Gui_10b80e1437e9e2f7763d3599daf4491e9" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>shutdown</name></member>
      <member refid="classMyGUI_1_1Singleton_130052fd9a72b1c3ad326830169e85307" prot="public" virt="non-virtual"><scope>MyGUI::Gui</scope><name>Singleton</name></member>
      <member refid="classMyGUI_1_1Gui_1804721196da6de4cfc2e8337927765ad" prot="private" virt="non-virtual"><scope>MyGUI::Gui</scope><name>WidgetManager</name></member>
      <member refid="classMyGUI_1_1IUnlinkWidget_1a2e24c22ce9088c193b5b759c1f283d6" prot="public" virt="virtual"><scope>MyGUI::Gui</scope><name>~IUnlinkWidget</name></member>
      <member refid="classMyGUI_1_1Singleton_1d342e3b15791e6a20cbd2aa9229b5c6f" prot="public" virt="virtual"><scope>MyGUI::Gui</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
