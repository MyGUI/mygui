<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.6-NO">
  <compounddef id="classMyGUI_1_1Allocator" kind="class" prot="public">
    <compoundname>MyGUI::Allocator</compoundname>
    <innerclass refid="structMyGUI_1_1Allocator_1_1rebind">MyGUI::Allocator::rebind</innerclass>
    <innerclass refid="structMyGUI_1_1Allocator_1_1rebind">MyGUI::Allocator::rebind</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1fd2a2120850ec6e82da7668f05dd034d" prot="public" static="no">
        <type>T</type>
        <definition>typedef T MyGUI::Allocator&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="36" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_16ae55a8a8d6f90797743cf39fc0994c4" prot="public" static="no">
        <type>value_type *</type>
        <definition>typedef value_type* MyGUI::Allocator&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="37" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1525b4434513fc482234114c6afcafc6b" prot="public" static="no">
        <type>const value_type *</type>
        <definition>typedef const value_type* MyGUI::Allocator&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="38" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1c8815bdcb1563ee647b4aa922f67869f" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>typedef value_type&amp; MyGUI::Allocator&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="39" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_15999de8bbf3b7a482a0bd53e4ee67dab" prot="public" static="no">
        <type>const value_type &amp;</type>
        <definition>typedef const value_type&amp; MyGUI::Allocator&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="40" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1f0fd319c1d24eb7a5fbe1dcb92b426f8" prot="public" static="no">
        <type>std::size_t</type>
        <definition>typedef std::size_t MyGUI::Allocator&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="41" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1044f1c711fb59a3e7cdd2166d09e2be0" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>typedef std::ptrdiff_t MyGUI::Allocator&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="42" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1fd2a2120850ec6e82da7668f05dd034d" prot="public" static="no">
        <type>T</type>
        <definition>typedef T MyGUI::Allocator&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="44" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_16ae55a8a8d6f90797743cf39fc0994c4" prot="public" static="no">
        <type>value_type *</type>
        <definition>typedef value_type* MyGUI::Allocator&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="45" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1525b4434513fc482234114c6afcafc6b" prot="public" static="no">
        <type>const value_type *</type>
        <definition>typedef const value_type* MyGUI::Allocator&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="46" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1c8815bdcb1563ee647b4aa922f67869f" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>typedef value_type&amp; MyGUI::Allocator&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="47" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_15999de8bbf3b7a482a0bd53e4ee67dab" prot="public" static="no">
        <type>const value_type &amp;</type>
        <definition>typedef const value_type&amp; MyGUI::Allocator&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="48" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1f0fd319c1d24eb7a5fbe1dcb92b426f8" prot="public" static="no">
        <type>std::size_t</type>
        <definition>typedef std::size_t MyGUI::Allocator&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="49" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1Allocator_1044f1c711fb59a3e7cdd2166d09e2be0" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>typedef std::ptrdiff_t MyGUI::Allocator&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="50" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMyGUI_1_1Allocator_17a6b54c5faba56a0a09ea0fbaefbef77" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MyGUI::Allocator&lt; T &gt;::Allocator</definition>
        <argsstring>()</argsstring>
        <name>Allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="53" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_199df16429a9f3ef9111fc04d81a450ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MyGUI::Allocator&lt; T &gt;::~Allocator</definition>
        <argsstring>()</argsstring>
        <name>~Allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="54" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_127cd21fb0db4fdcb5a68a15d6c4534ed" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>MyGUI::Allocator&lt; T &gt;::Allocator</definition>
        <argsstring>(Allocator&lt; U &gt; const &amp;)</argsstring>
        <name>Allocator</name>
        <param>
          <type>Allocator&lt; U &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="56" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_18c13fd8509140699c77bbc6bfc189d3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer MyGUI::Allocator&lt; T &gt;::address</definition>
        <argsstring>(reference r)</argsstring>
        <name>address</name>
        <param>
          <type>reference</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="60" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_1d0c62052cbd1be595a0f6a8bb20a8399" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const_pointer</type>
        <definition>const_pointer MyGUI::Allocator&lt; T &gt;::address</definition>
        <argsstring>(const_reference r)</argsstring>
        <name>address</name>
        <param>
          <type>const_reference</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="64" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_1d9123496138aefaad63f7edf05a82b57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer MyGUI::Allocator&lt; T &gt;::allocate</definition>
        <argsstring>(size_type cnt, typename std::allocator&lt; void &gt;::const_pointer=0)</argsstring>
        <name>allocate</name>
        <param>
          <type>size_type</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>typename std::allocator&lt; void &gt;::const_pointer</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="70" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_143da2870b281193b903e6e2b6f822e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Allocator&lt; T &gt;::deallocate</definition>
        <argsstring>(pointer p, size_type)</argsstring>
        <name>deallocate</name>
        <param>
          <type>pointer</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="74" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_16295c1277521b35e0239377f4a99a7e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type MyGUI::Allocator&lt; T &gt;::max_size</definition>
        <argsstring>() const </argsstring>
        <name>max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="80" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_15e25142785170dcd876e628b140ae6c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Allocator&lt; T &gt;::construct</definition>
        <argsstring>(pointer p, const T &amp;t)</argsstring>
        <name>construct</name>
        <param>
          <type>pointer</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="86" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_1099909248d0c86744a64e7a46f93ecce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Allocator&lt; T &gt;::destroy</definition>
        <argsstring>(pointer p)</argsstring>
        <name>destroy</name>
        <param>
          <type>pointer</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="90" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_19af1045e670e414158901c4526513c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::Allocator&lt; T &gt;::operator==</definition>
        <argsstring>(Allocator const &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type>Allocator const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="95" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_1dd1aa94e46f0a5298cd9db91b18648ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::Allocator&lt; T &gt;::operator!=</definition>
        <argsstring>(Allocator const &amp;a)</argsstring>
        <name>operator!=</name>
        <param>
          <type>Allocator const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" line="99" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_Allocator.h" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_17a6b54c5faba56a0a09ea0fbaefbef77" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MyGUI::Allocator&lt; T &gt;::Allocator</definition>
        <argsstring>()</argsstring>
        <name>Allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="61" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_199df16429a9f3ef9111fc04d81a450ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MyGUI::Allocator&lt; T &gt;::~Allocator</definition>
        <argsstring>()</argsstring>
        <name>~Allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="62" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_127cd21fb0db4fdcb5a68a15d6c4534ed" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>MyGUI::Allocator&lt; T &gt;::Allocator</definition>
        <argsstring>(Allocator&lt; U &gt; const &amp;)</argsstring>
        <name>Allocator</name>
        <param>
          <type>Allocator&lt; U &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="64" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_18c13fd8509140699c77bbc6bfc189d3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer MyGUI::Allocator&lt; T &gt;::address</definition>
        <argsstring>(reference r)</argsstring>
        <name>address</name>
        <param>
          <type>reference</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="68" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_1d0c62052cbd1be595a0f6a8bb20a8399" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const_pointer</type>
        <definition>const_pointer MyGUI::Allocator&lt; T &gt;::address</definition>
        <argsstring>(const_reference r)</argsstring>
        <name>address</name>
        <param>
          <type>const_reference</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="72" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_1d9123496138aefaad63f7edf05a82b57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer MyGUI::Allocator&lt; T &gt;::allocate</definition>
        <argsstring>(size_type cnt, typename std::allocator&lt; void &gt;::const_pointer=0)</argsstring>
        <name>allocate</name>
        <param>
          <type>size_type</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type>typename std::allocator&lt; void &gt;::const_pointer</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="78" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_143da2870b281193b903e6e2b6f822e7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Allocator&lt; T &gt;::deallocate</definition>
        <argsstring>(pointer p, size_type)</argsstring>
        <name>deallocate</name>
        <param>
          <type>pointer</type>
          <declname>p</declname>
        </param>
        <param>
          <type>size_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="82" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_16295c1277521b35e0239377f4a99a7e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_type</type>
        <definition>size_type MyGUI::Allocator&lt; T &gt;::max_size</definition>
        <argsstring>() const </argsstring>
        <name>max_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="88" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_15e25142785170dcd876e628b140ae6c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Allocator&lt; T &gt;::construct</definition>
        <argsstring>(pointer p, const T &amp;t)</argsstring>
        <name>construct</name>
        <param>
          <type>pointer</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="94" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_1099909248d0c86744a64e7a46f93ecce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::Allocator&lt; T &gt;::destroy</definition>
        <argsstring>(pointer p)</argsstring>
        <name>destroy</name>
        <param>
          <type>pointer</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="98" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_19af1045e670e414158901c4526513c88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::Allocator&lt; T &gt;::operator==</definition>
        <argsstring>(Allocator const &amp;)</argsstring>
        <name>operator==</name>
        <param>
          <type>Allocator const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="103" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1Allocator_1dd1aa94e46f0a5298cd9db91b18648ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::Allocator&lt; T &gt;::operator!=</definition>
        <argsstring>(Allocator const &amp;a)</argsstring>
        <name>operator!=</name>
        <param>
          <type>Allocator const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="107" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="106" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" line="41" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_CustomAllocator.h" bodystart="40" bodyend="110"/>
    <listofallmembers>
      <member refid="classMyGUI_1_1Allocator_18c13fd8509140699c77bbc6bfc189d3a" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>address</name></member>
      <member refid="classMyGUI_1_1Allocator_1d0c62052cbd1be595a0f6a8bb20a8399" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>address</name></member>
      <member refid="classMyGUI_1_1Allocator_18c13fd8509140699c77bbc6bfc189d3a" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>address</name></member>
      <member refid="classMyGUI_1_1Allocator_1d0c62052cbd1be595a0f6a8bb20a8399" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>address</name></member>
      <member refid="classMyGUI_1_1Allocator_1d9123496138aefaad63f7edf05a82b57" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>allocate</name></member>
      <member refid="classMyGUI_1_1Allocator_1d9123496138aefaad63f7edf05a82b57" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>allocate</name></member>
      <member refid="classMyGUI_1_1Allocator_17a6b54c5faba56a0a09ea0fbaefbef77" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>Allocator</name></member>
      <member refid="classMyGUI_1_1Allocator_127cd21fb0db4fdcb5a68a15d6c4534ed" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>Allocator</name></member>
      <member refid="classMyGUI_1_1Allocator_17a6b54c5faba56a0a09ea0fbaefbef77" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>Allocator</name></member>
      <member refid="classMyGUI_1_1Allocator_127cd21fb0db4fdcb5a68a15d6c4534ed" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>Allocator</name></member>
      <member refid="classMyGUI_1_1Allocator_1525b4434513fc482234114c6afcafc6b" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>const_pointer</name></member>
      <member refid="classMyGUI_1_1Allocator_1525b4434513fc482234114c6afcafc6b" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>const_pointer</name></member>
      <member refid="classMyGUI_1_1Allocator_15999de8bbf3b7a482a0bd53e4ee67dab" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>const_reference</name></member>
      <member refid="classMyGUI_1_1Allocator_15999de8bbf3b7a482a0bd53e4ee67dab" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>const_reference</name></member>
      <member refid="classMyGUI_1_1Allocator_15e25142785170dcd876e628b140ae6c7" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>construct</name></member>
      <member refid="classMyGUI_1_1Allocator_15e25142785170dcd876e628b140ae6c7" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>construct</name></member>
      <member refid="classMyGUI_1_1Allocator_143da2870b281193b903e6e2b6f822e7a" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>deallocate</name></member>
      <member refid="classMyGUI_1_1Allocator_143da2870b281193b903e6e2b6f822e7a" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>deallocate</name></member>
      <member refid="classMyGUI_1_1Allocator_1099909248d0c86744a64e7a46f93ecce" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>destroy</name></member>
      <member refid="classMyGUI_1_1Allocator_1099909248d0c86744a64e7a46f93ecce" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>destroy</name></member>
      <member refid="classMyGUI_1_1Allocator_1044f1c711fb59a3e7cdd2166d09e2be0" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>difference_type</name></member>
      <member refid="classMyGUI_1_1Allocator_1044f1c711fb59a3e7cdd2166d09e2be0" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>difference_type</name></member>
      <member refid="classMyGUI_1_1Allocator_16295c1277521b35e0239377f4a99a7e9" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>max_size</name></member>
      <member refid="classMyGUI_1_1Allocator_16295c1277521b35e0239377f4a99a7e9" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>max_size</name></member>
      <member refid="classMyGUI_1_1Allocator_1dd1aa94e46f0a5298cd9db91b18648ae" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>operator!=</name></member>
      <member refid="classMyGUI_1_1Allocator_1dd1aa94e46f0a5298cd9db91b18648ae" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>operator!=</name></member>
      <member refid="classMyGUI_1_1Allocator_19af1045e670e414158901c4526513c88" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>operator==</name></member>
      <member refid="classMyGUI_1_1Allocator_19af1045e670e414158901c4526513c88" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>operator==</name></member>
      <member refid="classMyGUI_1_1Allocator_16ae55a8a8d6f90797743cf39fc0994c4" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>pointer</name></member>
      <member refid="classMyGUI_1_1Allocator_16ae55a8a8d6f90797743cf39fc0994c4" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>pointer</name></member>
      <member refid="classMyGUI_1_1Allocator_1c8815bdcb1563ee647b4aa922f67869f" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>reference</name></member>
      <member refid="classMyGUI_1_1Allocator_1c8815bdcb1563ee647b4aa922f67869f" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>reference</name></member>
      <member refid="classMyGUI_1_1Allocator_1f0fd319c1d24eb7a5fbe1dcb92b426f8" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>size_type</name></member>
      <member refid="classMyGUI_1_1Allocator_1f0fd319c1d24eb7a5fbe1dcb92b426f8" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>size_type</name></member>
      <member refid="classMyGUI_1_1Allocator_1fd2a2120850ec6e82da7668f05dd034d" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>value_type</name></member>
      <member refid="classMyGUI_1_1Allocator_1fd2a2120850ec6e82da7668f05dd034d" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>value_type</name></member>
      <member refid="classMyGUI_1_1Allocator_199df16429a9f3ef9111fc04d81a450ce" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>~Allocator</name></member>
      <member refid="classMyGUI_1_1Allocator_199df16429a9f3ef9111fc04d81a450ce" prot="public" virt="non-virtual"><scope>MyGUI::Allocator</scope><name>~Allocator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
