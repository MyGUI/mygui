<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.6-NO">
  <compounddef id="classMyGUI_1_1LayoutManager" kind="class" prot="public">
    <compoundname>MyGUI::LayoutManager</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMyGUI_1_1LayoutManager_1e388bbb1ada099940696fffb092f5ea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::LayoutManager::LayoutManager</definition>
        <argsstring>()</argsstring>
        <name>LayoutManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="42"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1LayoutManager_18f2cdab091cb01f6fd1971b5d8be7c7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::LayoutManager::initialise</definition>
        <argsstring>()</argsstring>
        <name>initialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="44"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1LayoutManager_1f7206f813f737ba52ca5d96e048e618b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::LayoutManager::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1LayoutManager_19092a72d108ee9ccbacbb2411eed1b38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VectorWidgetPtr</type>
        <definition>VectorWidgetPtr MyGUI::LayoutManager::loadLayout</definition>
        <argsstring>(const std::string &amp;_file, const std::string &amp;_prefix=&quot;&quot;, Widget *_parent=0)</argsstring>
        <name>loadLayout</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_file</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_prefix</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> *</type>
          <declname>_parent</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load layout file <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_file</parametername>
</parameternamelist>
<parameterdescription>
<para>name of layout </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>will be added to all loaded widgets names </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_parent</parametername>
</parameternamelist>
<parameterdescription>
<para>widget to load on </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return vector of pointers of loaded root widgets (root == without parents) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1LayoutManager_10a6c6fa823098ca76c5b4e71f39adbf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::LayoutManager::unloadLayout</definition>
        <argsstring>(VectorWidgetPtr &amp;_widgets)</argsstring>
        <name>unloadLayout</name>
        <param>
          <type>VectorWidgetPtr &amp;</type>
          <declname>_widgets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unload layout (actually deletes vector of widgets returned by loadLayout) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1LayoutManager_101d983f32e0b1a3eec5925389520555d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1ResourceLayout" kindref="compound">ResourceLayout</ref> *</type>
        <definition>ResourceLayout* MyGUI::LayoutManager::getByName</definition>
        <argsstring>(const std::string &amp;_name, bool _throw=true) const </argsstring>
        <name>getByName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>_throw</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get <ref refid="classMyGUI_1_1ResourceLayout" kindref="compound">ResourceLayout</ref> by name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="59"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1LayoutManager_1bad8d60b76e0b6c8b8a8991be50f0f24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::LayoutManager::isExist</definition>
        <argsstring>(const std::string &amp;_name) const </argsstring>
        <name>isExist</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if skin with specified name exist </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1LayoutManager_1a89530ce7050673b18f61420fe2b3a8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; MyGUI::LayoutManager::getCurrentLayout</definition>
        <argsstring>() const </argsstring>
        <name>getCurrentLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="74"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classMyGUI_1_1LayoutManager_1772ce3bd59719c4fbf6692e1a1974e6a" prot="public" static="no" mutable="no">
        <type>EventHandle_AddUserStringDelegate</type>
        <definition>EventHandle_AddUserStringDelegate MyGUI::LayoutManager::eventAddUserString</definition>
        <argsstring></argsstring>
        <name>eventAddUserString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Event : Multidelegate. UserString was added from layout.<linebreak/>
 signature : void method(MyGUI::Widget* _widget, const std::string&amp; _key, const std::string&amp; _value) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_widget</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classMyGUI_1_1Widget" kindref="compound">Widget</ref> that got new UserString. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_key</parametername>
</parameternamelist>
<parameterdescription>
<para>UserString key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_key</parametername>
</parameternamelist>
<parameterdescription>
<para>UserString value. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Happens only when UserString was loaded from layout, but not when it was added in code. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="72" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classMyGUI_1_1LayoutManager_1d9d1b1e6b904fce544e4b4a6afcbb4e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::LayoutManager::_load</definition>
        <argsstring>(xml::ElementPtr _node, const std::string &amp;_file, Version _version)</argsstring>
        <name>_load</name>
        <param>
          <type>xml::ElementPtr</type>
          <declname>_node</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>_file</declname>
        </param>
        <param>
          <type>Version</type>
          <declname>_version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMyGUI_1_1LayoutManager_1c1582a20f302564acf1fad6c5e0be075" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool MyGUI::LayoutManager::mIsInitialise</definition>
        <argsstring></argsstring>
        <name>mIsInitialise</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="80" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1LayoutManager_1551d15fb5a3584db2a58c2e57c76bdfe" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string MyGUI::LayoutManager::mCurrentLayoutName</definition>
        <argsstring></argsstring>
        <name>mCurrentLayoutName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="81" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" line="40" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_LayoutManager.h" bodystart="37" bodyend="82"/>
    <listofallmembers>
      <member refid="classMyGUI_1_1LayoutManager_1d9d1b1e6b904fce544e4b4a6afcbb4e2" prot="private" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>_load</name></member>
      <member refid="classMyGUI_1_1LayoutManager_1772ce3bd59719c4fbf6692e1a1974e6a" prot="public" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>eventAddUserString</name></member>
      <member refid="classMyGUI_1_1LayoutManager_101d983f32e0b1a3eec5925389520555d" prot="public" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>getByName</name></member>
      <member refid="classMyGUI_1_1LayoutManager_1a89530ce7050673b18f61420fe2b3a8f" prot="public" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>getCurrentLayout</name></member>
      <member refid="classMyGUI_1_1LayoutManager_18f2cdab091cb01f6fd1971b5d8be7c7a" prot="public" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>initialise</name></member>
      <member refid="classMyGUI_1_1LayoutManager_1bad8d60b76e0b6c8b8a8991be50f0f24" prot="public" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>isExist</name></member>
      <member refid="classMyGUI_1_1LayoutManager_1e388bbb1ada099940696fffb092f5ea9" prot="public" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>LayoutManager</name></member>
      <member refid="classMyGUI_1_1LayoutManager_19092a72d108ee9ccbacbb2411eed1b38" prot="public" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>loadLayout</name></member>
      <member refid="classMyGUI_1_1LayoutManager_1551d15fb5a3584db2a58c2e57c76bdfe" prot="private" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>mCurrentLayoutName</name></member>
      <member refid="classMyGUI_1_1LayoutManager_1c1582a20f302564acf1fad6c5e0be075" prot="private" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>mIsInitialise</name></member>
      <member refid="classMyGUI_1_1LayoutManager_1f7206f813f737ba52ca5d96e048e618b" prot="public" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>shutdown</name></member>
      <member refid="classMyGUI_1_1LayoutManager_10a6c6fa823098ca76c5b4e71f39adbf6" prot="public" virt="non-virtual"><scope>MyGUI::LayoutManager</scope><name>unloadLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
