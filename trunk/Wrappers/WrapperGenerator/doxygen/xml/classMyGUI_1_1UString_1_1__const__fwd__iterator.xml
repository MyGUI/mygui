<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.6-NO">
  <compounddef id="classMyGUI_1_1UString_1_1__const__fwd__iterator" kind="class" prot="public">
    <compoundname>MyGUI::UString::_const_fwd_iterator</compoundname>
    <basecompoundref refid="classMyGUI_1_1UString_1_1__base__iterator" prot="public" virt="non-virtual">MyGUI::UString::_base_iterator</basecompoundref>
    <includes local="no">MyGUI_UString.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_16ca179fd9136e7608ac36d5134610db0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::_const_fwd_iterator::_const_fwd_iterator</definition>
        <argsstring>()</argsstring>
        <name>_const_fwd_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="292"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1acddee4561517238f53c2d174b449baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::_const_fwd_iterator::_const_fwd_iterator</definition>
        <argsstring>(const _const_fwd_iterator &amp;i)</argsstring>
        <name>_const_fwd_iterator</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="293"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_13c3738ca9d974645b3d78a32f062bd3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::_const_fwd_iterator::_const_fwd_iterator</definition>
        <argsstring>(const _fwd_iterator &amp;i)</argsstring>
        <name>_const_fwd_iterator</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">_fwd_iterator</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="294"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1ec1e3890c6822d6c901c9c84fea16ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
        <definition>_const_fwd_iterator&amp; MyGUI::UString::_const_fwd_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>pre-increment </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="297"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_19cb70f13e4267f0d9552f5c615a74739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref></type>
        <definition>_const_fwd_iterator MyGUI::UString::_const_fwd_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>post-increment </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="299"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1cdf358d86665438fbf441b056a13b046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
        <definition>_const_fwd_iterator&amp; MyGUI::UString::_const_fwd_iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
<para>pre-decrement </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="302"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1c7ab070f45f7ae45887337c06a0b1a0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref></type>
        <definition>_const_fwd_iterator MyGUI::UString::_const_fwd_iterator::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>post-decrement </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="304"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_10eb082e473d05032a88d13f01b6f0426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref></type>
        <definition>_const_fwd_iterator MyGUI::UString::_const_fwd_iterator::operator+</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator+</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="307"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_16405b6e7c80462bb517058aa3d37dcc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref></type>
        <definition>_const_fwd_iterator MyGUI::UString::_const_fwd_iterator::operator-</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator-</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>subtraction operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="309"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_115ad0df9e411f634a5d458f6601be0ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
        <definition>_const_fwd_iterator&amp; MyGUI::UString::_const_fwd_iterator::operator+=</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator+=</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>addition assignment operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="312"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1180e49c52e4434bf2223f5d8dbb463e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
        <definition>_const_fwd_iterator&amp; MyGUI::UString::_const_fwd_iterator::operator-=</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>operator-=</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>subtraction assignment operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="314"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1573853a8b9b30d4efe6ef33fcbdf4620" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classMyGUI_1_1UString_1574652f8b78157eb2c3f815d2ba2dbf5" kindref="member">value_type</ref> &amp;</type>
        <definition>const value_type&amp; MyGUI::UString::_const_fwd_iterator::operator *</definition>
        <argsstring>() const </argsstring>
        <name>operator *</name>
        <briefdescription>
<para>dereference operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="317"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1eee2512a12ae4a2a61cad2c62fff21ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classMyGUI_1_1UString_1574652f8b78157eb2c3f815d2ba2dbf5" kindref="member">value_type</ref> &amp;</type>
        <definition>const value_type&amp; MyGUI::UString::_const_fwd_iterator::operator[]</definition>
        <argsstring>(difference_type n) const </argsstring>
        <name>operator[]</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>dereference at offset operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="320"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1f779a336337e09bcfeaf5f4f06e0e1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
        <definition>_const_fwd_iterator&amp; MyGUI::UString::_const_fwd_iterator::moveNext</definition>
        <argsstring>()</argsstring>
        <name>moveNext</name>
        <briefdescription>
<para>advances to the next Unicode character, honoring surrogate pairs in the UTF-16 stream </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="323"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1281f0f73d527902810ecf64e29113182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
        <definition>_const_fwd_iterator&amp; MyGUI::UString::_const_fwd_iterator::movePrev</definition>
        <argsstring>()</argsstring>
        <name>movePrev</name>
        <briefdescription>
<para>rewinds to the previous Unicode character, honoring surrogate pairs in the UTF-16 stream </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="325"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_107745c7620859380f29a80bc272be55a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
        <definition>unicode_char MyGUI::UString::_const_fwd_iterator::getCharacter</definition>
        <argsstring>() const </argsstring>
        <name>getCharacter</name>
        <briefdescription>
<para>Returns the Unicode value of the character at the current position (decodes surrogate pairs if needed). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="327"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_122dde239a9cf3a999fc41d2a1e731c0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type operator-</definition>
        <argsstring>(const _const_fwd_iterator &amp;left, const _const_fwd_iterator &amp;right)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>difference operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="330" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1043" bodyend="1045"/>
      </memberdef>
      <memberdef kind="friend" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1b0f5d88e565768b2770e97f6cf82271f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const _const_fwd_iterator &amp;left, const _const_fwd_iterator &amp;right)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>equality operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="332" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1046" bodyend="1048"/>
      </memberdef>
      <memberdef kind="friend" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_143cc9018b46e0315e4318c56b5ba9cf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const _const_fwd_iterator &amp;left, const _const_fwd_iterator &amp;right)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>inequality operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="334" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1049" bodyend="1051"/>
      </memberdef>
      <memberdef kind="friend" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_15f02f1a2995d55a4014b32bb11450856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const _const_fwd_iterator &amp;left, const _const_fwd_iterator &amp;right)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>less than </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="336" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1052" bodyend="1054"/>
      </memberdef>
      <memberdef kind="friend" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_101b8b73aa7aea93fc5442ac4519a2575" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const _const_fwd_iterator &amp;left, const _const_fwd_iterator &amp;right)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>less than or equal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="338" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1055" bodyend="1057"/>
      </memberdef>
      <memberdef kind="friend" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_1e267f0b680407062dabc2bf646597ffa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const _const_fwd_iterator &amp;left, const _const_fwd_iterator &amp;right)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>greater than </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="340" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1058" bodyend="1060"/>
      </memberdef>
      <memberdef kind="friend" id="classMyGUI_1_1UString_1_1__const__fwd__iterator_12d55fbc97b74ae4b574fbafb71693461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const _const_fwd_iterator &amp;left, const _const_fwd_iterator &amp;right)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>greater than or equal </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="342" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1061" bodyend="1063"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>const forward iterator for <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2932">
        <label>MyGUI::UString::_base_iterator</label>
        <link refid="classMyGUI_1_1UString_1_1__base__iterator"/>
      </node>
      <node id="2931">
        <label>MyGUI::UString::_const_fwd_iterator</label>
        <link refid="classMyGUI_1_1UString_1_1__const__fwd__iterator"/>
        <childnode refid="2932" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2934">
        <label>MyGUI::UString::_base_iterator</label>
        <link refid="classMyGUI_1_1UString_1_1__base__iterator"/>
        <childnode refid="2935" relation="usage">
          <edgelabel>mString</edgelabel>
        </childnode>
      </node>
      <node id="2935">
        <label>MyGUI::UString</label>
        <link refid="classMyGUI_1_1UString"/>
      </node>
      <node id="2933">
        <label>MyGUI::UString::_const_fwd_iterator</label>
        <link refid="classMyGUI_1_1UString_1_1__const__fwd__iterator"/>
        <childnode refid="2934" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="290" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="290" bodyend="344"/>
    <listofallmembers>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_152a49810f126233684ea29685224a872" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_base_iterator</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_1406aa3426aba04303629702d3c299214" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_become</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_16ca179fd9136e7608ac36d5134610db0" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_const_fwd_iterator</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1acddee4561517238f53c2d174b449baa" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_const_fwd_iterator</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_13c3738ca9d974645b3d78a32f062bd3d" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_const_fwd_iterator</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_11bb263d62aecbceebae8918b7e6f0ea1" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_get_index</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_197fbb01c682232f30c1b3bfee3c7a0df" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_getCharacter</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_1b1b096ec48efae09b80c1d9642ec0579" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_jump_to</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_1ec09fc4f9815eb8ac9576c9863d9cd51" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_moveNext</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_10842757d9750cb2b98efa16ce32551f3" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_movePrev</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_1eaa7513daead083ce1fbbaca6245ec91" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_seekFwd</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_1690a9b7e65b70ecb55d828c29373332b" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_seekRev</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_116c38d465369898c8e8685298efe0d8f" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_setCharacter</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_1f007c5491be8f1a75c6d11c814726a17" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_test_begin</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_15ba1f3b30146dcd68dc3aae0e9439ea0" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>_test_end</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_107745c7620859380f29a80bc272be55a" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>getCharacter</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_15246c70c31fc95c3efdb591a1331c667" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>mIter</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1f779a336337e09bcfeaf5f4f06e0e1f0" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>moveNext</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1281f0f73d527902810ecf64e29113182" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>movePrev</name></member>
      <member refid="classMyGUI_1_1UString_1_1__base__iterator_1e268cedeb3a660f94d03b50cf7839099" prot="protected" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>mString</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1573853a8b9b30d4efe6ef33fcbdf4620" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator *</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_143cc9018b46e0315e4318c56b5ba9cf8" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator!=</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_10eb082e473d05032a88d13f01b6f0426" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1ec1e3890c6822d6c901c9c84fea16ffa" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator++</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_19cb70f13e4267f0d9552f5c615a74739" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator++</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_115ad0df9e411f634a5d458f6601be0ad" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator+=</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_16405b6e7c80462bb517058aa3d37dcc6" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator-</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_122dde239a9cf3a999fc41d2a1e731c0f" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator-</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1cdf358d86665438fbf441b056a13b046" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator--</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1c7ab070f45f7ae45887337c06a0b1a0a" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator--</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1180e49c52e4434bf2223f5d8dbb463e6" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator-=</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_15f02f1a2995d55a4014b32bb11450856" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator&lt;</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_101b8b73aa7aea93fc5442ac4519a2575" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator&lt;=</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1b0f5d88e565768b2770e97f6cf82271f" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator==</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1e267f0b680407062dabc2bf646597ffa" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator&gt;</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_12d55fbc97b74ae4b574fbafb71693461" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator&gt;=</name></member>
      <member refid="classMyGUI_1_1UString_1_1__const__fwd__iterator_1eee2512a12ae4a2a61cad2c62fff21ca" prot="public" virt="non-virtual"><scope>MyGUI::UString::_const_fwd_iterator</scope><name>operator[]</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
