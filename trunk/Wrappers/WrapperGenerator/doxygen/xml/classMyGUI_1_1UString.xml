<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.6-NO">
  <compounddef id="classMyGUI_1_1UString" kind="class" prot="public">
    <compoundname>MyGUI::UString</compoundname>
    <includes local="no">MyGUI_UString.h</includes>
    <innerclass refid="classMyGUI_1_1UString_1_1__base__iterator">MyGUI::UString::_base_iterator</innerclass>
    <innerclass refid="classMyGUI_1_1UString_1_1__const__fwd__iterator">MyGUI::UString::_const_fwd_iterator</innerclass>
    <innerclass refid="classMyGUI_1_1UString_1_1__const__rev__iterator">MyGUI::UString::_const_rev_iterator</innerclass>
    <innerclass refid="classMyGUI_1_1UString_1_1__fwd__iterator">MyGUI::UString::_fwd_iterator</innerclass>
    <innerclass refid="classMyGUI_1_1UString_1_1__rev__iterator">MyGUI::UString::_rev_iterator</innerclass>
    <innerclass refid="classMyGUI_1_1UString_1_1invalid__data">MyGUI::UString::invalid_data</innerclass>
      <sectiondef kind="user-defined">
      <header>Constructors/Destructor</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1157521f39d214bb91341ac99417c0706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>()</argsstring>
        <name>UString</name>
        <briefdescription>
<para>default constructor, creates an empty string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="442"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1fef714d257f63bfb5e3ce4f59b8ef613" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const UString &amp;copy)</argsstring>
        <name>UString</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
<para>copy constructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="444"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_148ac3d0e1993af6cb8721164d64de5bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(size_type length, const code_point &amp;ch)</argsstring>
        <name>UString</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para><emphasis>length</emphasis> copies of <emphasis>ch</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="446"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_11495351cfcae8b6f2ab40e622b4891b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const code_point *str)</argsstring>
        <name>UString</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>duplicate of nul-terminated sequence <emphasis>str</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="448"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1635460c2372aa8d7e2ee39f2f3c7d8ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const code_point *str, size_type length)</argsstring>
        <name>UString</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>duplicate of <emphasis>str</emphasis>, <emphasis>length</emphasis> code points long </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="450"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_16fcb41a41fe3481d859243a32c3e77df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const UString &amp;str, size_type index, size_type length)</argsstring>
        <name>UString</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>substring of <emphasis>str</emphasis> starting at <emphasis>index</emphasis> and <emphasis>length</emphasis> code points long </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="452"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ffc00652ca83c6a19f4b7c3b1b7f72a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const wchar_t *w_str)</argsstring>
        <name>UString</name>
        <param>
          <type>const wchar_t *</type>
          <declname>w_str</declname>
        </param>
        <briefdescription>
<para>duplicate of nul-terminated <computeroutput>wchar_t</computeroutput> array </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="455"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_18cff862de53edbc858f407dd8a608cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const wchar_t *w_str, size_type length)</argsstring>
        <name>UString</name>
        <param>
          <type>const wchar_t *</type>
          <declname>w_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>duplicate of <emphasis>w_str</emphasis>, <emphasis>length</emphasis> characters long </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="457"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1fff1025d8f1b5c0ac3221549291ff361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const std::wstring &amp;wstr)</argsstring>
        <name>UString</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>wstr</declname>
        </param>
        <briefdescription>
<para>duplicate of <emphasis>wstr</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="460"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1021e0f46c634366ed0e600c60daf38fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const char *c_str)</argsstring>
        <name>UString</name>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <briefdescription>
<para>duplicate of nul-terminated C-string <emphasis>c_str</emphasis> (UTF-8 encoding) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="462"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1345cb6f67d223e68495ad531dca843be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const char *c_str, size_type length)</argsstring>
        <name>UString</name>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>duplicate of <emphasis>c_str</emphasis>, <emphasis>length</emphasis> characters long (UTF-8 encoding) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="464"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_10740942bee628ac6be0dd94a5c623a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::UString</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>UString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>duplicate of <emphasis>str</emphasis> (UTF-8 encoding) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="466"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_142f8239ea6e91289f409331739b9ef18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::~UString</definition>
        <argsstring>()</argsstring>
        <name>~UString</name>
        <briefdescription>
<para>destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="469"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Utility functions</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1613f6c781cd8286030962c3cb62e5580" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the number of code points in the current string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="477"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1e308d11a1f02e8683548605e86d69c76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
<para>Returns the number of code points in the current string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="479"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_10d0dc02e72cbe7f190cee92b3a034b75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::length_Characters</definition>
        <argsstring>() const </argsstring>
        <name>length_Characters</name>
        <briefdescription>
<para>Returns the number of Unicode characters in the string. </para>        </briefdescription>
        <detaileddescription>
<para>Executes in linear time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="482"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_165148bc6b19509f7660410de200d6bf8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::max_size</definition>
        <argsstring>() const </argsstring>
        <name>max_size</name>
        <briefdescription>
<para>returns the maximum number of UTF-16 code points that the string can hold </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="484"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12bf1c1237beb73671ecbab1a3396eaba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::reserve</definition>
        <argsstring>(size_type size)</argsstring>
        <name>reserve</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>sets the capacity of the string to at least <emphasis>size</emphasis> code points </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="486"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ccca24e972e317b9190f8b48434da43a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::resize</definition>
        <argsstring>(size_type num, const code_point &amp;val=0)</argsstring>
        <name>resize</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &amp;</type>
          <declname>val</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>changes the size of the string to <emphasis>size</emphasis>, filling in any new area with <emphasis>val</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="488"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1f87bbc917cd14e6b10ab014ab1cd6148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::swap</definition>
        <argsstring>(UString &amp;from)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>exchanges the elements of the current string with those of <emphasis>from</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="490"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1b775d335ea4e3fb4b6f9f298e4179127" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::UString::empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the string has no elements, <computeroutput>false</computeroutput> otherwise </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="492"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_170d5324de90c8a7a499b7be2ab845118" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
        <definition>const code_point* MyGUI::UString::c_str</definition>
        <argsstring>() const </argsstring>
        <name>c_str</name>
        <briefdescription>
<para>returns a pointer to the first character in the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="494"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_121b0b62a87b79a78667b726956d7f6d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
        <definition>const code_point* MyGUI::UString::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
<para>returns a pointer to the first character in the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="496"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_18f69500ae2d5ee234761b24549251bcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::capacity</definition>
        <argsstring>() const </argsstring>
        <name>capacity</name>
        <briefdescription>
<para>returns the number of elements that the string can hold before it will need to allocate more space </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="498"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_13e6cb4e8ffd926dda2613a47d3ea2eeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>deletes all of the elements in the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="500"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_143a0eab543f2e97ef30ca2e7a5d3ab34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString MyGUI::UString::substr</definition>
        <argsstring>(size_type index, size_type num=npos) const </argsstring>
        <name>substr</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns a substring of the current string, starting at <emphasis>index</emphasis>, and <emphasis>num</emphasis> characters long. </para>        </briefdescription>
        <detaileddescription>
<para>If <emphasis>num</emphasis> is omitted, it will default to <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput>, and the <ref refid="classMyGUI_1_1UString_143a0eab543f2e97ef30ca2e7a5d3ab34" kindref="member">substr()</ref> function will simply return the remainder of the string starting at <emphasis>index</emphasis>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="503"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1dea87abfc31f6068ebf44aa406853ca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::push_back</definition>
        <argsstring>(unicode_char val)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>val</emphasis> to the end of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="505"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1c8ad23e089c6c767ea517e4044c70acb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::push_back</definition>
        <argsstring>(wchar_t val)</argsstring>
        <name>push_back</name>
        <param>
          <type>wchar_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>val</emphasis> to the end of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="508"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12bce535478bd9fa0a11eea85743ab132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::push_back</definition>
        <argsstring>(code_point val)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>val</emphasis> to the end of the string </para>        </briefdescription>
        <detaileddescription>
<para>This can be used to push surrogate pair code points, you&apos;ll just need to push them one after the other. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="513"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_110342681d27b114247ba496a973f6c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::push_back</definition>
        <argsstring>(char val)</argsstring>
        <name>push_back</name>
        <param>
          <type>char</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>val</emphasis> to the end of the string </para>        </briefdescription>
        <detaileddescription>
<para>Limited to characters under the 127 value barrier. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="516"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1f46ac9d27e0c9d1b0ff1055ea569c814" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::UString::inString</definition>
        <argsstring>(unicode_char ch) const </argsstring>
        <name>inString</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if the given Unicode character <emphasis>ch</emphasis> is in this string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="518"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Stream variations</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_173abc3b413c68cf900c2e42378f70996" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; MyGUI::UString::asUTF8</definition>
        <argsstring>() const </argsstring>
        <name>asUTF8</name>
        <briefdescription>
<para>returns the current string in UTF-8 form within a std::string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="526"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_119a4f29b5ba393ab978d225f11a86f77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* MyGUI::UString::asUTF8_c_str</definition>
        <argsstring>() const </argsstring>
        <name>asUTF8_c_str</name>
        <briefdescription>
<para>returns the current string in UTF-8 form as a nul-terminated char array </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="528"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1c01fac8c416da1f440693392df2653d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classMyGUI_1_1UString_1bf1c4de64c20b004f5a7a91ca3f40085" kindref="member">utf32string</ref> &amp;</type>
        <definition>const utf32string&amp; MyGUI::UString::asUTF32</definition>
        <argsstring>() const </argsstring>
        <name>asUTF32</name>
        <briefdescription>
<para>returns the current string in UTF-32 form within a utf32string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="530"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_13df71f5e648dae7b6a780cf51871c5e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref> *</type>
        <definition>const unicode_char* MyGUI::UString::asUTF32_c_str</definition>
        <argsstring>() const </argsstring>
        <name>asUTF32_c_str</name>
        <briefdescription>
<para>returns the current string in UTF-32 form as a nul-terminated unicode_char array </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="532"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_17936c6fe3a731db1fdeb73f1b2444042" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::wstring &amp;</type>
        <definition>const std::wstring&amp; MyGUI::UString::asWStr</definition>
        <argsstring>() const </argsstring>
        <name>asWStr</name>
        <briefdescription>
<para>returns the current string in the native form of std::wstring </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="534"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_175b383e8a9128336a7130debdb2d44a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const wchar_t *</type>
        <definition>const wchar_t* MyGUI::UString::asWStr_c_str</definition>
        <argsstring>() const </argsstring>
        <name>asWStr_c_str</name>
        <briefdescription>
<para>returns the current string in the native form of a nul-terminated wchar_t array </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="536"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Single Character Access</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1671b7bc5bf180f5a5edf668433e3f4d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &amp;</type>
        <definition>code_point&amp; MyGUI::UString::at</definition>
        <argsstring>(size_type loc)</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
<para>returns a reference to the element in the string at index <computeroutput>loc</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="544"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_180f12c3c2ba9a50845f6a3f7d0ae8c24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &amp;</type>
        <definition>const code_point&amp; MyGUI::UString::at</definition>
        <argsstring>(size_type loc) const </argsstring>
        <name>at</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
<para>returns a reference to the element in the string at index <computeroutput>loc</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="546"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_15d63eab26c8ad1931e58a3c2e16b523e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
        <definition>unicode_char MyGUI::UString::getChar</definition>
        <argsstring>(size_type loc) const </argsstring>
        <name>getChar</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
<para>returns the data point <emphasis>loc</emphasis> evaluated as a UTF-32 value </para>        </briefdescription>
        <detaileddescription>
<para>This function will will only properly decode surrogate pairs when <emphasis>loc</emphasis> points to the index of a lead code point that is followed by a trailing code point. Evaluating the trailing code point itself, or pointing to a code point that is a sentinel value (part of a broken pair) will return the value of just that code point (not a valid Unicode value, but useful as a sentinel value). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="552"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_13ec7c31d8b84c6df9cc196b22496bf41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MyGUI::UString::setChar</definition>
        <argsstring>(size_type loc, unicode_char ch)</argsstring>
        <name>setChar</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>loc</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>sets the value of the character at <emphasis>loc</emphasis> to the Unicode value <emphasis>ch</emphasis> (UTF-32) </para>        </briefdescription>
        <detaileddescription>
<para>Providing sentinel values (values between U+D800-U+DFFF) are accepted, but you should be aware that you can also unwittingly create a valid surrogate pair if you don&apos;t pay attention to what you are doing.<simplesect kind="note"><para>This operation may also lengthen the string if a surrogate pair is needed to represent the value given, but one is not available to replace; or alternatively shorten the string if an existing surrogate pair is replaced with a character that is representable without a surrogate pair. The return value will signify any lengthening or shortening performed, returning 0 if no change was made, -1 if the string was shortened, or 1 if the string was lengthened. Any single call can only change the string length by + or - 1. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="562"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>iterator acquisition</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1f58370504f85c6f4d4e8c07524e2001f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator MyGUI::UString::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>returns an iterator to the first element of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="570"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_160c06f901a7f8dc654424cc2007ef45c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator MyGUI::UString::begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
<para>returns an iterator to the first element of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="572"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1cb16be393de15c96896d80918002e7f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator MyGUI::UString::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>returns an iterator just past the end of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="574"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ce0191f721a28f1076cd35ccaee757bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator MyGUI::UString::end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
<para>returns an iterator just past the end of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="576"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1814b36b5a69a978e82633b8eb04af0d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__rev__iterator" kindref="compound">reverse_iterator</ref></type>
        <definition>reverse_iterator MyGUI::UString::rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>returns a reverse iterator to the last element of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="578"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1bff6fa53c2493fd74008f434eb2d1b95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__rev__iterator" kindref="compound">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator MyGUI::UString::rbegin</definition>
        <argsstring>() const </argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>returns a reverse iterator to the last element of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="580"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1c9b0700910ee50827424a9ab7b177b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__rev__iterator" kindref="compound">reverse_iterator</ref></type>
        <definition>reverse_iterator MyGUI::UString::rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <briefdescription>
<para>returns a reverse iterator just past the beginning of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="582"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_10a76493b6c11b9b2db5e200fd293a3f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__rev__iterator" kindref="compound">const_reverse_iterator</ref></type>
        <definition>const_reverse_iterator MyGUI::UString::rend</definition>
        <argsstring>() const </argsstring>
        <name>rend</name>
        <briefdescription>
<para>returns a reverse iterator just past the beginning of the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="584"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>assign</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1c161858df673bb7e7600f9ec1bdf5a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(iterator start, iterator end)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>gives the current string the values from <emphasis>start</emphasis> to <emphasis>end</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="592"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_15faa153cb0ad1c8e21f4cbb1cacd1949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const UString &amp;str)</argsstring>
        <name>assign</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>assign <emphasis>str</emphasis> to the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="594"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1cad1d7df631a1af930cbc3f4eebacd2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const code_point *str)</argsstring>
        <name>assign</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>assign the nul-terminated <emphasis>str</emphasis> to the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="596"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12bd4b69d6f400319e659e1c83d08e981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const code_point *str, size_type num)</argsstring>
        <name>assign</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>assign the first <emphasis>num</emphasis> characters of <emphasis>str</emphasis> to the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="598"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1a09948265760dd093e9d624527c12374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const UString &amp;str, size_type index, size_type len)</argsstring>
        <name>assign</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>assign <emphasis>len</emphasis> entries from <emphasis>str</emphasis> to the current string, starting at <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="600"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_11008c1478956a2b8732081900213db6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(size_type num, const code_point &amp;ch)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>assign <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> to the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="602"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1d220db25de826c8135078708f78a7e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const std::wstring &amp;wstr)</argsstring>
        <name>assign</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>wstr</declname>
        </param>
        <briefdescription>
<para>assign <emphasis>wstr</emphasis> to the current string (<emphasis>wstr</emphasis> is treated as a UTF-16 stream) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="604"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1dce3918258da529750a83d9fa93af47e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const wchar_t *w_str)</argsstring>
        <name>assign</name>
        <param>
          <type>const wchar_t *</type>
          <declname>w_str</declname>
        </param>
        <briefdescription>
<para>assign <emphasis>w_str</emphasis> to the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="607"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_15ac1eabc877c96cbc2ca023e290589c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const wchar_t *w_str, size_type num)</argsstring>
        <name>assign</name>
        <param>
          <type>const wchar_t *</type>
          <declname>w_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>assign the first <emphasis>num</emphasis> characters of <emphasis>w_str</emphasis> to the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="609"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_17b8bf605051b88d5e7a34e22b254fcbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>assign</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>assign <emphasis>str</emphasis> to the current string (<emphasis>str</emphasis> is treated as a UTF-8 stream) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="612"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_144e8872273f9d8a6675461c098bd8a9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const char *c_str)</argsstring>
        <name>assign</name>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <briefdescription>
<para>assign <emphasis>c_str</emphasis> to the current string (<emphasis>c_str</emphasis> is treated as a UTF-8 stream) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="614"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1bb3f8c94eb026ec51a1a0e7b7d612714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::assign</definition>
        <argsstring>(const char *c_str, size_type num)</argsstring>
        <name>assign</name>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>assign the first <emphasis>num</emphasis> characters of <emphasis>c_str</emphasis> to the current string (<emphasis>c_str</emphasis> is treated as a UTF-8 stream) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="616"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>append</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1bd34361c618a814c95fac15d3b96c5ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(const UString &amp;str)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>str</emphasis> on to the end of the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="624"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1f126979fa96b17d614cdbf45d859e170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(const code_point *str)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>str</emphasis> on to the end of the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="626"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12598041813a72424dd6af449a16677f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(const UString &amp;str, size_type index, size_type len)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>appends a substring of <emphasis>str</emphasis> starting at <emphasis>index</emphasis> that is <emphasis>len</emphasis> characters long on to the end of the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="628"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1dd1916e5263919c85b5759ab742b7368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(const code_point *str, size_type num)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>num</emphasis> characters of <emphasis>str</emphasis> on to the end of the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="630"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_14035cbe2dc42b85eef0380d619a05de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(size_type num, code_point ch)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>num</emphasis> repetitions of <emphasis>ch</emphasis> on to the end of the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="632"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1d59add5bc2148667f04d5fbfa8743d63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(iterator start, iterator end)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>appends the sequence denoted by <emphasis>start</emphasis> and <emphasis>end</emphasis> on to the end of the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="634"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1c5f3bf44e828e2515b0089e44f6c1b89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(const wchar_t *w_str, size_type num)</argsstring>
        <name>append</name>
        <param>
          <type>const wchar_t *</type>
          <declname>w_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>num</emphasis> characters of <emphasis>str</emphasis> on to the end of the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="637"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1642fcef84130d8100f5df1d287133108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(size_type num, wchar_t ch)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>num</emphasis> repetitions of <emphasis>ch</emphasis> on to the end of the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="639"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1db50403a3aaa0791bba806cfc2d529c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(const char *c_str, size_type num)</argsstring>
        <name>append</name>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>num</emphasis> characters of <emphasis>str</emphasis> on to the end of the current string (UTF-8 encoding) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="642"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_15b560421a96063a45c8f362e17245815" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(size_type num, char ch)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>num</emphasis> repetitions of <emphasis>ch</emphasis> on to the end of the current string (Unicode values less than 128) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="644"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_173d3c51eac47967ff376b4ab69f3fe72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::append</definition>
        <argsstring>(size_type num, unicode_char ch)</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>appends <emphasis>num</emphasis> repetitions of <emphasis>ch</emphasis> on to the end of the current string (Full Unicode spectrum) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="646"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>insert</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1334a5e0f79095857608997b8990c0ddd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator MyGUI::UString::insert</definition>
        <argsstring>(iterator i, const code_point &amp;ch)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>ch</emphasis> before the code point denoted by <emphasis>i</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="654"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_14c4587ce1a037e40fbd0c307a092e466" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index, const UString &amp;str)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>str</emphasis> into the current string, at location <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="656"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_19c50f3148e9b5b0b01785fb2e7d19d9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index, const code_point *str)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>str</emphasis> into the current string, at location <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="658" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="658" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_17950d49c0bb28c8a2c77247521028f1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index1, const UString &amp;str, size_type index2, size_type num)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index1</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index2</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>inserts a substring of <emphasis>str</emphasis> (starting at <emphasis>index2</emphasis> and <emphasis>num</emphasis> code points long) into the current string, at location <emphasis>index1</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="663"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_104ffbd01115ee7bc901117984c5ff3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::insert</definition>
        <argsstring>(iterator i, iterator start, iterator end)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>inserts the code points denoted by <emphasis>start</emphasis> and <emphasis>end</emphasis> into the current string, before the code point specified by <emphasis>i</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="665"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_13e3e3acb09489af1bab335eacf58c52b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index, const code_point *str, size_type num)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> code points of <emphasis>str</emphasis> into the current string, at location <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="667"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_14bd176cfb8c55dbcc9b70c9237de87a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index, const wchar_t *w_str, size_type num)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>w_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> code points of <emphasis>str</emphasis> into the current string, at location <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="670"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_11754d248cf0b3feedce59907a7b0dd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index, const char *c_str, size_type num)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> code points of <emphasis>str</emphasis> into the current string, at location <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="673"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_15d21ca2329308acf49a703dd390b546b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index, size_type num, code_point ch)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> into the current string, at location <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="675"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_19035c34267c719dbee466a989fcff4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index, size_type num, wchar_t ch)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> into the current string, at location <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="678"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1e55a6739967f0503d0a8d26fdbda7ed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index, size_type num, char ch)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> into the current string, at location <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="681"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_151fe556737d3b771d30c26459d31ba69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::insert</definition>
        <argsstring>(size_type index, size_type num, unicode_char ch)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> into the current string, at location <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="683"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12b467f97c403d1dd0d7a7572763c1160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::insert</definition>
        <argsstring>(iterator i, size_type num, const code_point &amp;ch)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> into the current string, before the code point denoted by <emphasis>i</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="685"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1aeeb5c218e16a9e8ebd71003d6754c6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::insert</definition>
        <argsstring>(iterator i, size_type num, const wchar_t &amp;ch)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const wchar_t &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> into the current string, before the code point denoted by <emphasis>i</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="688"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_11139ac5305e4f24815bf3ba9c4987adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::insert</definition>
        <argsstring>(iterator i, size_type num, const char &amp;ch)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const char &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> into the current string, before the code point denoted by <emphasis>i</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="691"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ffc51e3e51a0cc6b8becdafd242c1a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::insert</definition>
        <argsstring>(iterator i, size_type num, const unicode_char &amp;ch)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref> &amp;</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>inserts <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> into the current string, before the code point denoted by <emphasis>i</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="693"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>erase</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ae91d2963911912f4c3ea812b9f9937f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator MyGUI::UString::erase</definition>
        <argsstring>(iterator loc)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>loc</declname>
        </param>
        <briefdescription>
<para>removes the code point pointed to by <emphasis>loc</emphasis>, returning an iterator to the next character </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="701"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_17c016d890d1a5e67061c68348f3c6735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
        <definition>iterator MyGUI::UString::erase</definition>
        <argsstring>(iterator start, iterator end)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>removes the code points between <emphasis>start</emphasis> and <emphasis>end</emphasis> (including the one at <emphasis>start</emphasis> but not the one at <emphasis>end</emphasis>), returning an iterator to the code point after the last code point removed </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="703"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_119f32b73782a5cd5bbcd0c1f195805e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::erase</definition>
        <argsstring>(size_type index=0, size_type num=npos)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>removes <emphasis>num</emphasis> code points from the current string, starting at <emphasis>index</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="705"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>replace</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1b242f6822e4a1cc75d1be662e8edc551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::replace</definition>
        <argsstring>(size_type index1, size_type num1, const UString &amp;str)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index1</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num1</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>replaces up to <emphasis>num1</emphasis> code points of the current string (starting at <emphasis>index1</emphasis>) with <emphasis>str</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="713"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_146dafd2a5f565abfa2835201150eb60a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::replace</definition>
        <argsstring>(size_type index1, size_type num1, const UString &amp;str, size_type num2)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index1</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num1</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num2</declname>
        </param>
        <briefdescription>
<para>replaces up to <emphasis>num1</emphasis> code points of the current string (starting at <emphasis>index1</emphasis>) with up to <emphasis>num2</emphasis> code points from <emphasis>str</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="715"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12dc62d107b141b993fafcd97841276c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::replace</definition>
        <argsstring>(size_type index1, size_type num1, const UString &amp;str, size_type index2, size_type num2)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index1</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num1</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index2</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num2</declname>
        </param>
        <briefdescription>
<para>replaces up to <emphasis>num1</emphasis> code points of the current string (starting at <emphasis>index1</emphasis>) with up to <emphasis>num2</emphasis> code points from <emphasis>str</emphasis> beginning at <emphasis>index2</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="717"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1350fd8e8432771a93fbdc87d96b30349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::replace</definition>
        <argsstring>(iterator start, iterator end, const UString &amp;str, size_type num=npos)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>replaces code points in the current string from <emphasis>start</emphasis> to <emphasis>end</emphasis> with <emphasis>num</emphasis> code points from <emphasis>str</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="719"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_13cc88daadffff973446f8d6be59d9723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::replace</definition>
        <argsstring>(size_type index, size_type num1, size_type num2, code_point ch)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num1</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num2</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>replaces up to <emphasis>num1</emphasis> code points in the current string (beginning at <emphasis>index</emphasis>) with <computeroutput>num2</computeroutput> copies of <computeroutput>ch</computeroutput> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="721"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_16b9d57f37d5475b86f98d18b1896caf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::replace</definition>
        <argsstring>(iterator start, iterator end, size_type num, code_point ch)</argsstring>
        <name>replace</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">iterator</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>replaces the code points in the current string from <emphasis>start</emphasis> to <emphasis>end</emphasis> with <emphasis>num</emphasis> copies of <emphasis>ch</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="723"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>compare</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1b6c90d68f155fd577a0bb4cc33be9d54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MyGUI::UString::compare</definition>
        <argsstring>(const UString &amp;str) const </argsstring>
        <name>compare</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>compare <emphasis>str</emphasis> to the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="731"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_11db64e8de44a8222b6c80acfe0f5a213" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MyGUI::UString::compare</definition>
        <argsstring>(const code_point *str) const </argsstring>
        <name>compare</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>compare <emphasis>str</emphasis> to the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="733"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1813934e09842287d66d808d7838a3ed0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MyGUI::UString::compare</definition>
        <argsstring>(size_type index, size_type length, const UString &amp;str) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>compare <emphasis>str</emphasis> to a substring of the current string, starting at <emphasis>index</emphasis> for <emphasis>length</emphasis> characters </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="735"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_17ecde52715e8cb5012456883637da63e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MyGUI::UString::compare</definition>
        <argsstring>(size_type index, size_type length, const UString &amp;str, size_type index2, size_type length2) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index2</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length2</declname>
        </param>
        <briefdescription>
<para>compare a substring of <emphasis>str</emphasis> to a substring of the current string, where <emphasis>index2</emphasis> and <emphasis>length2</emphasis> refer to <emphasis>str</emphasis> and <emphasis>index</emphasis> and <emphasis>length</emphasis> refer to the current string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="737"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1e4b0241c8d96e76ca38ab2acffb76fe3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MyGUI::UString::compare</definition>
        <argsstring>(size_type index, size_type length, const code_point *str, size_type length2) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length2</declname>
        </param>
        <briefdescription>
<para>compare a substring of <emphasis>str</emphasis> to a substring of the current string, where the substring of <emphasis>str</emphasis> begins at zero and is <emphasis>length2</emphasis> characters long, and the substring of the current string begins at <emphasis>index</emphasis> and is <emphasis>length</emphasis> characters long </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="739"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1dd48bc2716536c26e5dfc00149b44e8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MyGUI::UString::compare</definition>
        <argsstring>(size_type index, size_type length, const wchar_t *w_str, size_type length2) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>w_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length2</declname>
        </param>
        <briefdescription>
<para>compare a substring of <emphasis>str</emphasis> to a substring of the current string, where the substring of <emphasis>str</emphasis> begins at zero and is <emphasis>length2</emphasis> elements long, and the substring of the current string begins at <emphasis>index</emphasis> and is <emphasis>length</emphasis> characters long </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="742"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_11d92b6898387b9bf36013da7d781bde1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MyGUI::UString::compare</definition>
        <argsstring>(size_type index, size_type length, const char *c_str, size_type length2) const </argsstring>
        <name>compare</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length2</declname>
        </param>
        <briefdescription>
<para>compare a substring of <emphasis>str</emphasis> to a substring of the current string, where the substring of <emphasis>str</emphasis> begins at zero and is <emphasis>length2</emphasis> <bold>UTF-8 code points</bold> long, and the substring of the current string begins at <emphasis>index</emphasis> and is <emphasis>length</emphasis> characters long </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="745"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>find &amp; rfind</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1de99ab0a6959163562a4e34a2df15ccb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find</definition>
        <argsstring>(const UString &amp;str, size_type index=0) const </argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>str</emphasis> within the current string, starting at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>str</emphasis> is a UTF-16 encoded string, but through implicit casting can also be a UTF-8 encoded string (const char* or std::string) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="754"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_165d8b1aeaa964a3b998925b11c8e0da1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find</definition>
        <argsstring>(const code_point *cp_str, size_type index, size_type length) const </argsstring>
        <name>find</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>cp_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>str</emphasis> within the current string and within <emphasis>length</emphasis> code points, starting at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>cp_str</emphasis> is a UTF-16 encoded string </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="757"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_125cecfeaad9536eb0152231e9dfbbed6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find</definition>
        <argsstring>(const char *c_str, size_type index, size_type length) const </argsstring>
        <name>find</name>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>str</emphasis> within the current string and within <emphasis>length</emphasis> code points, starting at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>cp_str</emphasis> is a UTF-8 encoded string </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="760"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_19c45eb85eb37590aa6fe3e1b4c5a7662" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find</definition>
        <argsstring>(const wchar_t *w_str, size_type index, size_type length) const </argsstring>
        <name>find</name>
        <param>
          <type>const wchar_t *</type>
          <declname>w_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>str</emphasis> within the current string and within <emphasis>length</emphasis> code points, starting at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>cp_str</emphasis> is a UTF-16 encoded string </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="764"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1229d066db3dcc9587465ea9e3683670d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find</definition>
        <argsstring>(char ch, size_type index=0) const </argsstring>
        <name>find</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence <emphasis>ch</emphasis> within the current string, starting at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>ch</emphasis> is only capable of representing Unicode values up to U+007F (127) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="768"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_19c57975b9c72a52500aacbb9d44ae96c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find</definition>
        <argsstring>(code_point ch, size_type index=0) const </argsstring>
        <name>find</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence <emphasis>ch</emphasis> within the current string, starting at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>ch</emphasis> is only capable of representing Unicode values up to U+FFFF (65535) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="771"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_132a2dd96c88c2618e50a2d71b9978250" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find</definition>
        <argsstring>(wchar_t ch, size_type index=0) const </argsstring>
        <name>find</name>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence <emphasis>ch</emphasis> within the current string, starting at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>ch</emphasis> is only capable of representing Unicode values up to U+FFFF (65535) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="775"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1fdabf5ac0e458510da8ba5864247ff5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find</definition>
        <argsstring>(unicode_char ch, size_type index=0) const </argsstring>
        <name>find</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence <emphasis>ch</emphasis> within the current string, starting at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
<para><emphasis>ch</emphasis> can fully represent any Unicode character </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="779"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_173526b57c33d7a1a6085a9aadbda373f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::rfind</definition>
        <argsstring>(const UString &amp;str, size_type index=0) const </argsstring>
        <name>rfind</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the location of the first occurrence of <emphasis>str</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="782"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ddb2b78661c54314e8538a754469f35a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::rfind</definition>
        <argsstring>(const code_point *cp_str, size_type index, size_type num) const </argsstring>
        <name>rfind</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> *</type>
          <declname>cp_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>returns the location of the first occurrence of <emphasis>str</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>, searching at most <emphasis>num</emphasis> characters; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="784"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ca4a4fcb358450b55f9db374f6bb55ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::rfind</definition>
        <argsstring>(const char *c_str, size_type index, size_type num) const </argsstring>
        <name>rfind</name>
        <param>
          <type>const char *</type>
          <declname>c_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>returns the location of the first occurrence of <emphasis>str</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>, searching at most <emphasis>num</emphasis> characters; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="786"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_15a976685beddfd0b5b2a3072c6536c4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::rfind</definition>
        <argsstring>(const wchar_t *w_str, size_type index, size_type num) const </argsstring>
        <name>rfind</name>
        <param>
          <type>const wchar_t *</type>
          <declname>w_str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
<para>returns the location of the first occurrence of <emphasis>str</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>, searching at most <emphasis>num</emphasis> characters; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="789"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_19a0b84eaafc49d628e96b6acbdef6445" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::rfind</definition>
        <argsstring>(char ch, size_type index=0) const </argsstring>
        <name>rfind</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the location of the first occurrence of <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="792"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_129aeed2de31c4c8f92fe7192fb27385a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::rfind</definition>
        <argsstring>(code_point ch, size_type index) const </argsstring>
        <name>rfind</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>returns the location of the first occurrence of <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="794"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1926f4a9465ca0827d47c8dd530865be7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::rfind</definition>
        <argsstring>(wchar_t ch, size_type index=0) const </argsstring>
        <name>rfind</name>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the location of the first occurrence of <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="797"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ad1b06600413d153f8371bedc8b3e317" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::rfind</definition>
        <argsstring>(unicode_char ch, size_type index=0) const </argsstring>
        <name>rfind</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the location of the first occurrence of <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="800"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>find_first/last_(not)_of</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1c5e588cddc7ca39e0ca0e3566de00d8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_of</definition>
        <argsstring>(const UString &amp;str, size_type index=0, size_type num=npos) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>Returns the index of the first character within the current string that matches <bold>any</bold> character in <emphasis>str</emphasis>, beginning the search at <emphasis>index</emphasis> and searching at most <emphasis>num</emphasis> characters; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="808"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_17564e05140e6fb60866a2de2e8656013" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_of</definition>
        <argsstring>(code_point ch, size_type index=0) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>ch</emphasis> in the current string, starting the search at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="810"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ee960c43d39e582973b8dc1d1d19d2ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_of</definition>
        <argsstring>(char ch, size_type index=0) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>ch</emphasis> in the current string, starting the search at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="812"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1dbe2971daf4849eba045036a109f8392" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_of</definition>
        <argsstring>(wchar_t ch, size_type index=0) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>ch</emphasis> in the current string, starting the search at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="815"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1de24eae8ac286d9ea4419c6929c90c8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_of</definition>
        <argsstring>(unicode_char ch, size_type index=0) const </argsstring>
        <name>find_first_of</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>ch</emphasis> in the current string, starting the search at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="818"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ed9f1d20aab7dad6a1d4d0768ce7e302" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_not_of</definition>
        <argsstring>(const UString &amp;str, size_type index=0, size_type num=npos) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the first character within the current string that does not match any character in <emphasis>str</emphasis>, beginning the search at <emphasis>index</emphasis> and searching at most <emphasis>num</emphasis> characters; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="821"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1b0fb8495ad1cf75da5862ca558c74ad5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_not_of</definition>
        <argsstring>(code_point ch, size_type index=0) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first character within the current string that does not match <emphasis>ch</emphasis>, starting the search at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="823"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_14942a76d92c203ad5300523e9fa14a03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_not_of</definition>
        <argsstring>(char ch, size_type index=0) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first character within the current string that does not match <emphasis>ch</emphasis>, starting the search at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="825"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1367a2b09070ba2ee0733999b459299b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_not_of</definition>
        <argsstring>(wchar_t ch, size_type index=0) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first character within the current string that does not match <emphasis>ch</emphasis>, starting the search at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="828"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1a98c1210669c1edbf1cede0b13b6b3ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_first_not_of</definition>
        <argsstring>(unicode_char ch, size_type index=0) const </argsstring>
        <name>find_first_not_of</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>returns the index of the first character within the current string that does not match <emphasis>ch</emphasis>, starting the search at <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="831"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12f406331642ad76f228a141366335912" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_of</definition>
        <argsstring>(const UString &amp;str, size_type index=npos, size_type num=npos) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the first character within the current string that matches any character in <emphasis>str</emphasis>, doing a reverse search from <emphasis>index</emphasis> and searching at most <emphasis>num</emphasis> characters; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="834"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_112e4fb532ebbc760fecb8f75438d4a6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_of</definition>
        <argsstring>(code_point ch, size_type index=npos) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="836"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_19b592f9b12ef1f9315d822cd0e0482cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_of</definition>
        <argsstring>(char ch, size_type index=npos) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="838" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="838" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1586417e19a9a8de9d4a0b17c60b058e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_of</definition>
        <argsstring>(wchar_t ch, size_type index=npos) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="843"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1be334b0a3842c5ed6300dda5776e9278" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_of</definition>
        <argsstring>(unicode_char ch, size_type index=npos) const </argsstring>
        <name>find_last_of</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the first occurrence of <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="846"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1a15cc41296e25b952fdded4c21aaddf2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_not_of</definition>
        <argsstring>(const UString &amp;str, size_type index=npos, size_type num=npos) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>num</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the last character within the current string that does not match any character in <emphasis>str</emphasis>, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="849"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12df70779c2b2b682140935dfd0e2990e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_not_of</definition>
        <argsstring>(code_point ch, size_type index=npos) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the last occurrence of a character that does not match <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="851"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1174c69caa0d0ab9d4bc4305376569002" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_not_of</definition>
        <argsstring>(char ch, size_type index=npos) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the last occurrence of a character that does not match <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="853"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_182382173b81dc1b9d7aa66ea5360ac56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_not_of</definition>
        <argsstring>(wchar_t ch, size_type index=npos) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the last occurrence of a character that does not match <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="856"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1f94a2eb66b698e1d27ec25c0537d36cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>size_type MyGUI::UString::find_last_not_of</definition>
        <argsstring>(unicode_char ch, size_type index=npos) const </argsstring>
        <name>find_last_not_of</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
          <defval><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">npos</ref></defval>
        </param>
        <briefdescription>
<para>returns the index of the last occurrence of a character that does not match <emphasis>ch</emphasis> in the current string, doing a reverse search from <emphasis>index</emphasis>; returns <computeroutput><ref refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" kindref="member">UString::npos</ref></computeroutput> if nothing is found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="859"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Operators</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_195a866ffa637fe135436d2898ecc4690" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::UString::operator&lt;</definition>
        <argsstring>(const UString &amp;right) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>less than operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="867"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1bde0b673e9f8df5d03098aedffe08235" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::UString::operator&lt;=</definition>
        <argsstring>(const UString &amp;right) const </argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>less than or equal operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="869"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_15ef2bb2de1764b55ecc5de7b2b97677c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::UString::operator&gt;</definition>
        <argsstring>(const UString &amp;right) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>greater than operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="871"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1624a315b38ead4d9d6fa069927864e28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::UString::operator&gt;=</definition>
        <argsstring>(const UString &amp;right) const </argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>greater than or equal operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="873"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12dc3e4978af56998439a31bfa30f5eb0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::UString::operator==</definition>
        <argsstring>(const UString &amp;right) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>equality operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="875"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1042e8c15d11a5508630666d4c5319730" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MyGUI::UString::operator!=</definition>
        <argsstring>(const UString &amp;right) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
<para>inequality operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="877"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_195b6effe17172c5be547f434bdaead60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::operator=</definition>
        <argsstring>(const UString &amp;s)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>assignment operator, implicitly casts all compatible types </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="879"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1b26f935f5896950eaf1f20275ac4d258" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::operator=</definition>
        <argsstring>(code_point ch)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>assignment operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="881"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1db90d6504bfcdb895c07a808dce41ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::operator=</definition>
        <argsstring>(char ch)</argsstring>
        <name>operator=</name>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>assignment operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="883"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_18f5252557fad248c449b0dd2f780d825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::operator=</definition>
        <argsstring>(wchar_t ch)</argsstring>
        <name>operator=</name>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>assignment operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="886"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_17abf896cbf6d76503d1f7f1d720c92bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
        <definition>UString&amp; MyGUI::UString::operator=</definition>
        <argsstring>(unicode_char ch)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
<para>assignment operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="889"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_16293e912d8781868ca0cc0f58c027970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &amp;</type>
        <definition>code_point&amp; MyGUI::UString::operator[]</definition>
        <argsstring>(size_type index)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>code point dereference operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="891"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_175f0b08550469a7ea3a86094bb35a46b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &amp;</type>
        <definition>const code_point&amp; MyGUI::UString::operator[]</definition>
        <argsstring>(size_type index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>code point dereference operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="893"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Implicit Cast Operators</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_11c24c4844c22b0b56c4c2d6aa7495664" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::operator std::string</definition>
        <argsstring>() const </argsstring>
        <name>operator std::string</name>
        <briefdescription>
<para>implicit cast to std::string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="901"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_12b46dadbcf836e73144c4fb4e48d5bbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MyGUI::UString::operator std::wstring</definition>
        <argsstring>() const </argsstring>
        <name>operator std::wstring</name>
        <briefdescription>
<para>implicit cast to std::wstring </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="903"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>UTF-16 character encoding/decoding</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1355cc8488ce40eb410e093631841560a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool MyGUI::UString::_utf16_independent_char</definition>
        <argsstring>(code_point cp)</argsstring>
        <name>_utf16_independent_char</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <emphasis>cp</emphasis> does not match the signature for the lead of follow code point of a surrogate pair in a UTF-16 sequence </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="911"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1325ceda6c73476dee371c5483befd7b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool MyGUI::UString::_utf16_surrogate_lead</definition>
        <argsstring>(code_point cp)</argsstring>
        <name>_utf16_surrogate_lead</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <emphasis>cp</emphasis> matches the signature of a surrogate pair lead character </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="913"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_157f667e6bf884a8391d5a977f81f5e22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool MyGUI::UString::_utf16_surrogate_follow</definition>
        <argsstring>(code_point cp)</argsstring>
        <name>_utf16_surrogate_follow</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <emphasis>cp</emphasis> matches the signature of a surrogate pair following character </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="915"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_125c1415aaa08c392e3af9e2fe985a910" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t MyGUI::UString::_utf16_char_length</definition>
        <argsstring>(code_point cp)</argsstring>
        <name>_utf16_char_length</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>estimates the number of UTF-16 code points in the sequence starting with <emphasis>cp</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="917"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1f16c03ae0df7540e9ce687a9e46eb704" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t MyGUI::UString::_utf16_char_length</definition>
        <argsstring>(unicode_char uc)</argsstring>
        <name>_utf16_char_length</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>uc</declname>
        </param>
        <briefdescription>
<para>returns the number of UTF-16 code points needed to represent the given UTF-32 character <emphasis>cp</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="919"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1fb565784cd2ec31a29def0f35c92017d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t MyGUI::UString::_utf16_to_utf32</definition>
        <argsstring>(const code_point in_cp[2], unicode_char &amp;out_uc)</argsstring>
        <name>_utf16_to_utf32</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>in_cp</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref> &amp;</type>
          <declname>out_uc</declname>
        </param>
        <briefdescription>
<para>converts the given UTF-16 character buffer <emphasis>in_cp</emphasis> to a single UTF-32 Unicode character <emphasis>out_uc</emphasis>, returns the number of code points used to create the output character (2 for surrogate pairs, otherwise 1) </para>        </briefdescription>
        <detaileddescription>
<para>This function does it&apos;s best to prevent error conditions, verifying complete surrogate pairs before applying the algorithm. In the event that half of a pair is found it will happily generate a value in the 0xD800 - 0xDFFF range, which is normally an invalid Unicode value but we preserve them for use as sentinel values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="925"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1d733b51bec22a7cb9f13fd5ec848071c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t MyGUI::UString::_utf32_to_utf16</definition>
        <argsstring>(const unicode_char &amp;in_uc, code_point out_cp[2])</argsstring>
        <name>_utf32_to_utf16</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref> &amp;</type>
          <declname>in_uc</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
          <declname>out_cp</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
<para>writes the given UTF-32 <emphasis>uc_in</emphasis> to the buffer location <emphasis>out_cp</emphasis> using UTF-16 encoding, returns the number of code points used to encode the input (always 1 or 2) </para>        </briefdescription>
        <detaileddescription>
<para>This function, like its counterpart, will happily create invalid UTF-16 surrogate pairs. These invalid entries will be created for any value of <computeroutput>in_uc</computeroutput> that falls in the range U+D800 - U+DFFF. These are generally useful as sentinel values to represent various program specific conditions. <simplesect kind="note"><para>This function will also pass through any single UTF-16 code point without modification, making it a safe method of ensuring a stream that is unknown UTF-32 or UTF-16 is truly UTF-16. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="932"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>UTF-8 character encoding/decoding</header>
      <memberdef kind="function" id="classMyGUI_1_1UString_1813bf91f37e7708b011c007f8371d24e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool MyGUI::UString::_utf8_start_char</definition>
        <argsstring>(unsigned char cp)</argsstring>
        <name>_utf8_start_char</name>
        <param>
          <type>unsigned char</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>returns <computeroutput>true</computeroutput> if <emphasis>cp</emphasis> is the beginning of a UTF-8 sequence </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="940"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_108e9b175439b5a12667e57cfdf10a38b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t MyGUI::UString::_utf8_char_length</definition>
        <argsstring>(unsigned char cp)</argsstring>
        <name>_utf8_char_length</name>
        <param>
          <type>unsigned char</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
<para>estimates the number of UTF-8 code points in the sequence starting with <emphasis>cp</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="942"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_13837cb22576a55a981164b0d8989984b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t MyGUI::UString::_utf8_char_length</definition>
        <argsstring>(unicode_char uc)</argsstring>
        <name>_utf8_char_length</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref></type>
          <declname>uc</declname>
        </param>
        <briefdescription>
<para>returns the number of UTF-8 code points needed to represent the given UTF-32 character <emphasis>cp</emphasis> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="944"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_19990fa2570c42a751025889c801fe695" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t MyGUI::UString::_utf8_to_utf32</definition>
        <argsstring>(const unsigned char in_cp[6], unicode_char &amp;out_uc)</argsstring>
        <name>_utf8_to_utf32</name>
        <param>
          <type>const unsigned char</type>
          <declname>in_cp</declname>
          <array>[6]</array>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref> &amp;</type>
          <declname>out_uc</declname>
        </param>
        <briefdescription>
<para>converts the given UTF-8 character buffer to a single UTF-32 Unicode character, returns the number of bytes used to create the output character (maximum of 6) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="947"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1a93758235dcfce4718f1243e7310b1b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t MyGUI::UString::_utf32_to_utf8</definition>
        <argsstring>(const unicode_char &amp;in_uc, unsigned char out_cp[6])</argsstring>
        <name>_utf32_to_utf8</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref> &amp;</type>
          <declname>in_uc</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>out_cp</declname>
          <array>[6]</array>
        </param>
        <briefdescription>
<para>writes the given UTF-32 <emphasis>uc_in</emphasis> to the buffer location <emphasis>out_cp</emphasis> using UTF-8 encoding, returns the number of bytes used to encode the input </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="949"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1922bc074d9aa07f40517f0e4da9c48a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>static size_type MyGUI::UString::_verifyUTF8</definition>
        <argsstring>(const unsigned char *c_str)</argsstring>
        <name>_verifyUTF8</name>
        <param>
          <type>const unsigned char *</type>
          <declname>c_str</declname>
        </param>
        <briefdescription>
<para>verifies a UTF-8 stream, returning the total number of Unicode characters found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="952"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_15bd7e296e0998e27cfb1f087a37d5056" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>static size_type MyGUI::UString::_verifyUTF8</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>_verifyUTF8</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>verifies a UTF-8 stream, returning the total number of Unicode characters found </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="954"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t MyGUI::UString::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
<para>size type used to indicate string size and character positions within the string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="186" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" prot="public" static="no">
        <type>uint32</type>
        <definition>typedef uint32 MyGUI::UString::unicode_char</definition>
        <argsstring></argsstring>
        <name>unicode_char</name>
        <briefdescription>
<para>a single 32-bit Unicode character </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="191" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" prot="public" static="no">
        <type>uint16</type>
        <definition>typedef uint16 MyGUI::UString::code_point</definition>
        <argsstring></argsstring>
        <name>code_point</name>
        <briefdescription>
<para>a single UTF-16 code point </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="194" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1UString_1574652f8b78157eb2c3f815d2ba2dbf5" prot="public" static="no">
        <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref></type>
        <definition>typedef code_point MyGUI::UString::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>value type typedef for use in iterators </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="197" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1UString_1e2cbd4a9fc8f200bf61dc4beebf738f2" prot="public" static="no">
        <type>std::basic_string&lt; <ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">code_point</ref> &gt;</type>
        <definition>typedef std::basic_string&lt;code_point&gt; MyGUI::UString::dstring</definition>
        <argsstring></argsstring>
        <name>dstring</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="199" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1UString_1bf1c4de64c20b004f5a7a91ca3f40085" prot="public" static="no">
        <type>std::basic_string&lt; <ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">unicode_char</ref> &gt;</type>
        <definition>typedef std::basic_string&lt;unicode_char&gt; MyGUI::UString::utf32string</definition>
        <argsstring></argsstring>
        <name>utf32string</name>
        <briefdescription>
<para>string type used for returning UTF-32 formatted data </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="202" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1UString_19283fc52c4d7dbe1caaf295295086f12" prot="public" static="no">
        <type><ref refid="classMyGUI_1_1UString_1_1__fwd__iterator" kindref="compound">_fwd_iterator</ref></type>
        <definition>typedef _fwd_iterator MyGUI::UString::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>iterator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="433" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1UString_19f79fb3ea57d2dd139540db0303dc0cb" prot="public" static="no">
        <type><ref refid="classMyGUI_1_1UString_1_1__rev__iterator" kindref="compound">_rev_iterator</ref></type>
        <definition>typedef _rev_iterator MyGUI::UString::reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
<para>reverse iterator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="434" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1UString_183517309f708b38feac23d4bb7e0a173" prot="public" static="no">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__fwd__iterator" kindref="compound">_const_fwd_iterator</ref></type>
        <definition>typedef _const_fwd_iterator MyGUI::UString::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>const iterator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="435" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classMyGUI_1_1UString_1a00ad2580479477eb98882a80ffbc486" prot="public" static="no">
        <type><ref refid="classMyGUI_1_1UString_1_1__const__rev__iterator" kindref="compound">_const_rev_iterator</ref></type>
        <definition>typedef _const_rev_iterator MyGUI::UString::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
<para>const reverse iterator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="436" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref></type>
        <definition>const size_type MyGUI::UString::npos</definition>
        <argsstring></argsstring>
        <name>npos</name>
        <initializer> static_cast&lt;<ref refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" kindref="member">size_type</ref>&gt;(~0)</initializer>
        <briefdescription>
<para>the usual constant representing: not found, no limit, etc </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="188" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af51" prot="private" static="no">
        <name>BufferType</name>
        <enumvalue id="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af51bcc9eeb7bcde9d152ebd222ce7bb0831" prot="private">
          <name>bt_none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af519db50059d10a27a9f3f454d505b3572f" prot="private">
          <name>bt_string</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af51e8259bebfdd71bfeb7ce7347ab103579" prot="private">
          <name>bt_wstring</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af51b352e39832006d59fcc2e967d4010538" prot="private">
          <name>bt_utf32string</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>buffer data type identifier </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="962" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="962" bodyend="967"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classMyGUI_1_1UString_19b6763a223c5350da07a565e1016b1fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::_init</definition>
        <argsstring>()</argsstring>
        <name>_init</name>
        <briefdescription>
<para>common constructor operations </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="970"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_186ce0cecc387bd07a8608783d54c8af7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::_cleanBuffer</definition>
        <argsstring>() const </argsstring>
        <name>_cleanBuffer</name>
        <briefdescription>
<para>auto cleans the scratch buffer using the proper delete for the stored type </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="975"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_11b95233feb46b1c88d3c73bb5720c8d7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::_getBufferStr</definition>
        <argsstring>() const </argsstring>
        <name>_getBufferStr</name>
        <briefdescription>
<para>create a std::string in the scratch buffer area </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="978"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_14e66ff482320b55da0478886c11225fc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::_getBufferWStr</definition>
        <argsstring>() const </argsstring>
        <name>_getBufferWStr</name>
        <briefdescription>
<para>create a std::wstring in the scratch buffer area </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="980"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1b4b1b3a03b9f161af48ca351efee4672" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::_getBufferUTF32Str</definition>
        <argsstring>() const </argsstring>
        <name>_getBufferUTF32Str</name>
        <briefdescription>
<para>create a utf32string in the scratch buffer area </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="982"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_108f812b29612b5f23d0b19da311b7af7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::_load_buffer_UTF8</definition>
        <argsstring>() const </argsstring>
        <name>_load_buffer_UTF8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="984"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1441cb9b43a7f63eacfd5daf1c37a7d1f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::_load_buffer_WStr</definition>
        <argsstring>() const </argsstring>
        <name>_load_buffer_WStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="985"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1b4617f1c05c5d7ee907d394f90b53956" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MyGUI::UString::_load_buffer_UTF32</definition>
        <argsstring>() const </argsstring>
        <name>_load_buffer_UTF32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="986"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMyGUI_1_1UString_1fc1c3adbae2be5f5010eabdbe8f191ab" prot="private" static="no" mutable="no">
        <type>dstring</type>
        <definition>dstring MyGUI::UString::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="959" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="959" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1e3f4d6b6f72e5afed05763b6f03fc358" prot="private" static="no" mutable="yes">
        <type>BufferType</type>
        <definition>BufferType MyGUI::UString::m_bufferType</definition>
        <argsstring></argsstring>
        <name>m_bufferType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="988" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="988" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_142ca7d736b1edce83c315b580130f23f" prot="private" static="no" mutable="yes">
        <type>size_t</type>
        <definition>size_t MyGUI::UString::m_bufferSize</definition>
        <argsstring></argsstring>
        <name>m_bufferSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="989" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="989" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1946e66a191ccf29fb1b54f2db65f83ee" prot="private" static="no" mutable="yes">
        <type>void *</type>
        <definition>void* MyGUI::UString::mVoidBuffer</definition>
        <argsstring></argsstring>
        <name>mVoidBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="993" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="993" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_106125f99b6fa14fb916514cb0d4dcfe9" prot="private" static="no" mutable="yes">
        <type>std::string *</type>
        <definition>std::string* MyGUI::UString::mStrBuffer</definition>
        <argsstring></argsstring>
        <name>mStrBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="994" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="994" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_131e376ce807a708ef1018eac6971deb6" prot="private" static="no" mutable="yes">
        <type>std::wstring *</type>
        <definition>std::wstring* MyGUI::UString::mWStrBuffer</definition>
        <argsstring></argsstring>
        <name>mWStrBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="995" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="995" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1bc47e6410f0844ef477065293ab58a97" prot="private" static="no" mutable="yes">
        <type><ref refid="classMyGUI_1_1UString_1bf1c4de64c20b004f5a7a91ca3f40085" kindref="member">utf32string</ref> *</type>
        <definition>utf32string* MyGUI::UString::mUTF32StrBuffer</definition>
        <argsstring></argsstring>
        <name>mUTF32StrBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="996" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="996" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1cd71788ee7a8e505daf5ad89dc756ff1" prot="private" static="no" mutable="no">
        <type>MyGUI::UString::@0</type>
        <definition>union MyGUI::UString::@0
		 MyGUI::UString::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="998"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classMyGUI_1_1UString_1752dc45c122adfd68de1bbf840d75afa" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead1</definition>
        <argsstring></argsstring>
        <name>_lead1</name>
        <initializer> 0xC0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="171" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1eaafc65bb81fbc95b9d75535ab0708c5" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead1_mask</definition>
        <argsstring></argsstring>
        <name>_lead1_mask</name>
        <initializer> 0x1F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="172" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_134f83026c00801f8d587d5b448df73ce" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead2</definition>
        <argsstring></argsstring>
        <name>_lead2</name>
        <initializer> 0xE0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="173" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_18130a3e231c0766b73118b5eae87b91a" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead2_mask</definition>
        <argsstring></argsstring>
        <name>_lead2_mask</name>
        <initializer> 0x0F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="174" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1b7b504db1f4d71c9dc62bd64c16162f3" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead3</definition>
        <argsstring></argsstring>
        <name>_lead3</name>
        <initializer> 0xF0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="175" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1651a124cde8be5e0873925949ad0b2f4" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead3_mask</definition>
        <argsstring></argsstring>
        <name>_lead3_mask</name>
        <initializer> 0x07</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="176" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1baa2253298d948e0277c38217a29f00c" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead4</definition>
        <argsstring></argsstring>
        <name>_lead4</name>
        <initializer> 0xF8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="177" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_18dca7c93f7465e4a777f15c8ac99d521" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead4_mask</definition>
        <argsstring></argsstring>
        <name>_lead4_mask</name>
        <initializer> 0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="178" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1bb88a1d808af196024242f6743077bb3" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead5</definition>
        <argsstring></argsstring>
        <name>_lead5</name>
        <initializer> 0xFC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="179" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1d71f67dcbf24e8226e8aecf6c76b2466" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_lead5_mask</definition>
        <argsstring></argsstring>
        <name>_lead5_mask</name>
        <initializer> 0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="180" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1653321c9dc611ad2c791408ff07d5185" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_cont</definition>
        <argsstring></argsstring>
        <name>_cont</name>
        <initializer> 0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="181" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMyGUI_1_1UString_1b5fae662ff5af21d5c39a173ae0b74eb" prot="private" static="yes" mutable="no">
        <type>const unsigned char</type>
        <definition>const unsigned char MyGUI::UString::_cont_mask</definition>
        <argsstring></argsstring>
        <name>_cont_mask</name>
        <initializer> 0x3F</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="182" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="classMyGUI_1_1UString_1770c60e9f33ee1a1b8e7cd85b7368dc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString operator+</definition>
        <argsstring>(const UString &amp;s1, const UString &amp;s2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>string addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1002" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1002" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ded2838aa1fc81b9644712625899ca00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString operator+</definition>
        <argsstring>(const UString &amp;s1, UString::code_point c)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">UString::code_point</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>string addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1006" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1006" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1311918eba2586f558ccc1bc21b8911c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString operator+</definition>
        <argsstring>(const UString &amp;s1, UString::unicode_char c)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">UString::unicode_char</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>string addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1010" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1010" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_171acf30d51c319bfc194e498c578f04a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString operator+</definition>
        <argsstring>(const UString &amp;s1, char c)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>string addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1014" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1014" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ec6829841ae2072c35689a38caacdf9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString operator+</definition>
        <argsstring>(const UString &amp;s1, wchar_t c)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>string addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1019" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1019" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_106842ef7233f24b930d3ce509737b4d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString operator+</definition>
        <argsstring>(UString::code_point c, const UString &amp;s2)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" kindref="member">UString::code_point</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>string addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1024" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1024" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_165f319893a53cad2c42b5d3679eafc7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString operator+</definition>
        <argsstring>(UString::unicode_char c, const UString &amp;s2)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" kindref="member">UString::unicode_char</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>string addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1028" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1028" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1f08f0cb9c6d10bf4f9c647e5ce54f7ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString operator+</definition>
        <argsstring>(char c, const UString &amp;s2)</argsstring>
        <name>operator+</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>string addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1032" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1032" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1335f15c2ac22e80e90ba53fb4ad477df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref></type>
        <definition>UString operator+</definition>
        <argsstring>(wchar_t c, const UString &amp;s2)</argsstring>
        <name>operator+</name>
        <param>
          <type>wchar_t</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>string addition operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1037" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1037" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1679015162688416f5fa0bfcda9a8e86b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const UString &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>std::ostream write operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1090" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1090" bodyend="1092"/>
      </memberdef>
      <memberdef kind="function" id="classMyGUI_1_1UString_1ed9246c6eaa9e7f552150e6516ee8e45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::wostream &amp;</type>
        <definition>std::wostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::wostream &amp;os, const UString &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::wostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classMyGUI_1_1UString" kindref="compound">UString</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>std::wostream write operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="1095" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="1095" bodyend="1097"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A UTF-16 string with implicit conversion to/from std::string and std::wstring. </para>    </briefdescription>
    <detaileddescription>
<para>This class provides a complete 1 to 1 map of most std::string functions (at least to my knowledge). Implicit conversions allow this string class to work with all common C++ string formats, with specialty functions defined where implicit conversion would cause potential problems or is otherwise unavailable.</para><para>Some additional functionality is present to assist in working with characters using the 32-bit UTF-32 encoding. (Which is guaranteed to fit any Unicode character into a single code point.) <bold>Note:</bold> Reverse iterators do not have this functionality due to the ambiguity that surrounds working with UTF-16 in reverse. (Such as, where should an iterator point to represent the beginning of a surrogate pair?)</para><para><simplesect kind="par"><title>Supported Input Types</title><para>The supported string types for input, and their assumed encoding schemes, are:<itemizedlist>
<listitem><para>std::string (UTF-8)</para></listitem><listitem><para>char* (UTF-8)</para></listitem><listitem><para>std::wstring (autodetected UTF-16 / UTF-32 based on compiler)</para></listitem><listitem><para>wchar_t* (autodetected UTF-16 / UTF-32 based on compiler)</para></listitem></itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><itemizedlist>
<listitem><para>For additional information on UTF-16 encoding: <ulink url="http://en.wikipedia.org/wiki/UTF-16">http://en.wikipedia.org/wiki/UTF-16</ulink></para></listitem><listitem><para>For additional information on UTF-8 encoding: <ulink url="http://en.wikipedia.org/wiki/UTF-8">http://en.wikipedia.org/wiki/UTF-8</ulink></para></listitem><listitem><para>For additional information on UTF-32 encoding: <ulink url="http://en.wikipedia.org/wiki/UTF-32">http://en.wikipedia.org/wiki/UTF-32</ulink> </para></listitem></itemizedlist>
</para></simplesect>
</para>    </detaileddescription>
    <location file="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" line="169" bodyfile="D:/MyGUI/MyGUI_Trunk/MyGUIEngine/include/MyGUI_UString.h" bodystart="169" bodyend="999"/>
    <listofallmembers>
      <member refid="classMyGUI_1_1UString_186ce0cecc387bd07a8608783d54c8af7" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_cleanBuffer</name></member>
      <member refid="classMyGUI_1_1UString_1653321c9dc611ad2c791408ff07d5185" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_cont</name></member>
      <member refid="classMyGUI_1_1UString_1b5fae662ff5af21d5c39a173ae0b74eb" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_cont_mask</name></member>
      <member refid="classMyGUI_1_1UString_11b95233feb46b1c88d3c73bb5720c8d7" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_getBufferStr</name></member>
      <member refid="classMyGUI_1_1UString_1b4b1b3a03b9f161af48ca351efee4672" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_getBufferUTF32Str</name></member>
      <member refid="classMyGUI_1_1UString_14e66ff482320b55da0478886c11225fc" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_getBufferWStr</name></member>
      <member refid="classMyGUI_1_1UString_19b6763a223c5350da07a565e1016b1fd" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_init</name></member>
      <member refid="classMyGUI_1_1UString_1752dc45c122adfd68de1bbf840d75afa" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead1</name></member>
      <member refid="classMyGUI_1_1UString_1eaafc65bb81fbc95b9d75535ab0708c5" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead1_mask</name></member>
      <member refid="classMyGUI_1_1UString_134f83026c00801f8d587d5b448df73ce" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead2</name></member>
      <member refid="classMyGUI_1_1UString_18130a3e231c0766b73118b5eae87b91a" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead2_mask</name></member>
      <member refid="classMyGUI_1_1UString_1b7b504db1f4d71c9dc62bd64c16162f3" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead3</name></member>
      <member refid="classMyGUI_1_1UString_1651a124cde8be5e0873925949ad0b2f4" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead3_mask</name></member>
      <member refid="classMyGUI_1_1UString_1baa2253298d948e0277c38217a29f00c" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead4</name></member>
      <member refid="classMyGUI_1_1UString_18dca7c93f7465e4a777f15c8ac99d521" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead4_mask</name></member>
      <member refid="classMyGUI_1_1UString_1bb88a1d808af196024242f6743077bb3" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead5</name></member>
      <member refid="classMyGUI_1_1UString_1d71f67dcbf24e8226e8aecf6c76b2466" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_lead5_mask</name></member>
      <member refid="classMyGUI_1_1UString_1b4617f1c05c5d7ee907d394f90b53956" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_load_buffer_UTF32</name></member>
      <member refid="classMyGUI_1_1UString_108f812b29612b5f23d0b19da311b7af7" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_load_buffer_UTF8</name></member>
      <member refid="classMyGUI_1_1UString_1441cb9b43a7f63eacfd5daf1c37a7d1f" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>_load_buffer_WStr</name></member>
      <member refid="classMyGUI_1_1UString_125c1415aaa08c392e3af9e2fe985a910" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf16_char_length</name></member>
      <member refid="classMyGUI_1_1UString_1f16c03ae0df7540e9ce687a9e46eb704" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf16_char_length</name></member>
      <member refid="classMyGUI_1_1UString_1355cc8488ce40eb410e093631841560a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf16_independent_char</name></member>
      <member refid="classMyGUI_1_1UString_157f667e6bf884a8391d5a977f81f5e22" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf16_surrogate_follow</name></member>
      <member refid="classMyGUI_1_1UString_1325ceda6c73476dee371c5483befd7b3" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf16_surrogate_lead</name></member>
      <member refid="classMyGUI_1_1UString_1fb565784cd2ec31a29def0f35c92017d" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf16_to_utf32</name></member>
      <member refid="classMyGUI_1_1UString_1d733b51bec22a7cb9f13fd5ec848071c" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf32_to_utf16</name></member>
      <member refid="classMyGUI_1_1UString_1a93758235dcfce4718f1243e7310b1b5" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf32_to_utf8</name></member>
      <member refid="classMyGUI_1_1UString_108e9b175439b5a12667e57cfdf10a38b" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf8_char_length</name></member>
      <member refid="classMyGUI_1_1UString_13837cb22576a55a981164b0d8989984b" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf8_char_length</name></member>
      <member refid="classMyGUI_1_1UString_1813bf91f37e7708b011c007f8371d24e" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf8_start_char</name></member>
      <member refid="classMyGUI_1_1UString_19990fa2570c42a751025889c801fe695" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_utf8_to_utf32</name></member>
      <member refid="classMyGUI_1_1UString_1922bc074d9aa07f40517f0e4da9c48a5" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_verifyUTF8</name></member>
      <member refid="classMyGUI_1_1UString_15bd7e296e0998e27cfb1f087a37d5056" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>_verifyUTF8</name></member>
      <member refid="classMyGUI_1_1UString_1bd34361c618a814c95fac15d3b96c5ea" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_1f126979fa96b17d614cdbf45d859e170" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_12598041813a72424dd6af449a16677f9" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_1dd1916e5263919c85b5759ab742b7368" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_14035cbe2dc42b85eef0380d619a05de1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_1d59add5bc2148667f04d5fbfa8743d63" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_1c5f3bf44e828e2515b0089e44f6c1b89" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_1642fcef84130d8100f5df1d287133108" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_1db50403a3aaa0791bba806cfc2d529c9" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_15b560421a96063a45c8f362e17245815" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_173d3c51eac47967ff376b4ab69f3fe72" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>append</name></member>
      <member refid="classMyGUI_1_1UString_1c161858df673bb7e7600f9ec1bdf5a84" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_15faa153cb0ad1c8e21f4cbb1cacd1949" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_1cad1d7df631a1af930cbc3f4eebacd2a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_12bd4b69d6f400319e659e1c83d08e981" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_1a09948265760dd093e9d624527c12374" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_11008c1478956a2b8732081900213db6c" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_1d220db25de826c8135078708f78a7e18" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_1dce3918258da529750a83d9fa93af47e" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_15ac1eabc877c96cbc2ca023e290589c2" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_17b8bf605051b88d5e7a34e22b254fcbf" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_144e8872273f9d8a6675461c098bd8a9e" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_1bb3f8c94eb026ec51a1a0e7b7d612714" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>assign</name></member>
      <member refid="classMyGUI_1_1UString_1c01fac8c416da1f440693392df2653d1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>asUTF32</name></member>
      <member refid="classMyGUI_1_1UString_13df71f5e648dae7b6a780cf51871c5e1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>asUTF32_c_str</name></member>
      <member refid="classMyGUI_1_1UString_173abc3b413c68cf900c2e42378f70996" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>asUTF8</name></member>
      <member refid="classMyGUI_1_1UString_119a4f29b5ba393ab978d225f11a86f77" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>asUTF8_c_str</name></member>
      <member refid="classMyGUI_1_1UString_17936c6fe3a731db1fdeb73f1b2444042" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>asWStr</name></member>
      <member refid="classMyGUI_1_1UString_175b383e8a9128336a7130debdb2d44a8" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>asWStr_c_str</name></member>
      <member refid="classMyGUI_1_1UString_1671b7bc5bf180f5a5edf668433e3f4d7" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>at</name></member>
      <member refid="classMyGUI_1_1UString_180f12c3c2ba9a50845f6a3f7d0ae8c24" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>at</name></member>
      <member refid="classMyGUI_1_1UString_1f58370504f85c6f4d4e8c07524e2001f" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>begin</name></member>
      <member refid="classMyGUI_1_1UString_160c06f901a7f8dc654424cc2007ef45c" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>begin</name></member>
      <member refid="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af51bcc9eeb7bcde9d152ebd222ce7bb0831" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>bt_none</name></member>
      <member refid="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af519db50059d10a27a9f3f454d505b3572f" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>bt_string</name></member>
      <member refid="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af51b352e39832006d59fcc2e967d4010538" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>bt_utf32string</name></member>
      <member refid="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af51e8259bebfdd71bfeb7ce7347ab103579" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>bt_wstring</name></member>
      <member refid="classMyGUI_1_1UString_198b7833dcc9bf11897324f4f3623af51" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>BufferType</name></member>
      <member refid="classMyGUI_1_1UString_170d5324de90c8a7a499b7be2ab845118" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>c_str</name></member>
      <member refid="classMyGUI_1_1UString_18f69500ae2d5ee234761b24549251bcf" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>capacity</name></member>
      <member refid="classMyGUI_1_1UString_13e6cb4e8ffd926dda2613a47d3ea2eeb" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>clear</name></member>
      <member refid="classMyGUI_1_1UString_187a3b9398a34ff4c40725cb451c53c5b" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>code_point</name></member>
      <member refid="classMyGUI_1_1UString_1b6c90d68f155fd577a0bb4cc33be9d54" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>compare</name></member>
      <member refid="classMyGUI_1_1UString_11db64e8de44a8222b6c80acfe0f5a213" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>compare</name></member>
      <member refid="classMyGUI_1_1UString_1813934e09842287d66d808d7838a3ed0" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>compare</name></member>
      <member refid="classMyGUI_1_1UString_17ecde52715e8cb5012456883637da63e" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>compare</name></member>
      <member refid="classMyGUI_1_1UString_1e4b0241c8d96e76ca38ab2acffb76fe3" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>compare</name></member>
      <member refid="classMyGUI_1_1UString_1dd48bc2716536c26e5dfc00149b44e8d" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>compare</name></member>
      <member refid="classMyGUI_1_1UString_11d92b6898387b9bf36013da7d781bde1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>compare</name></member>
      <member refid="classMyGUI_1_1UString_183517309f708b38feac23d4bb7e0a173" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>const_iterator</name></member>
      <member refid="classMyGUI_1_1UString_1a00ad2580479477eb98882a80ffbc486" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>const_reverse_iterator</name></member>
      <member refid="classMyGUI_1_1UString_121b0b62a87b79a78667b726956d7f6d5" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>data</name></member>
      <member refid="classMyGUI_1_1UString_1e2cbd4a9fc8f200bf61dc4beebf738f2" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>dstring</name></member>
      <member refid="classMyGUI_1_1UString_1b775d335ea4e3fb4b6f9f298e4179127" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>empty</name></member>
      <member refid="classMyGUI_1_1UString_1cb16be393de15c96896d80918002e7f3" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>end</name></member>
      <member refid="classMyGUI_1_1UString_1ce0191f721a28f1076cd35ccaee757bd" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>end</name></member>
      <member refid="classMyGUI_1_1UString_1ae91d2963911912f4c3ea812b9f9937f" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>erase</name></member>
      <member refid="classMyGUI_1_1UString_17c016d890d1a5e67061c68348f3c6735" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>erase</name></member>
      <member refid="classMyGUI_1_1UString_119f32b73782a5cd5bbcd0c1f195805e1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>erase</name></member>
      <member refid="classMyGUI_1_1UString_1de99ab0a6959163562a4e34a2df15ccb" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find</name></member>
      <member refid="classMyGUI_1_1UString_165d8b1aeaa964a3b998925b11c8e0da1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find</name></member>
      <member refid="classMyGUI_1_1UString_125cecfeaad9536eb0152231e9dfbbed6" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find</name></member>
      <member refid="classMyGUI_1_1UString_19c45eb85eb37590aa6fe3e1b4c5a7662" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find</name></member>
      <member refid="classMyGUI_1_1UString_1229d066db3dcc9587465ea9e3683670d" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find</name></member>
      <member refid="classMyGUI_1_1UString_19c57975b9c72a52500aacbb9d44ae96c" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find</name></member>
      <member refid="classMyGUI_1_1UString_132a2dd96c88c2618e50a2d71b9978250" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find</name></member>
      <member refid="classMyGUI_1_1UString_1fdabf5ac0e458510da8ba5864247ff5e" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find</name></member>
      <member refid="classMyGUI_1_1UString_1ed9f1d20aab7dad6a1d4d0768ce7e302" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_not_of</name></member>
      <member refid="classMyGUI_1_1UString_1b0fb8495ad1cf75da5862ca558c74ad5" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_not_of</name></member>
      <member refid="classMyGUI_1_1UString_14942a76d92c203ad5300523e9fa14a03" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_not_of</name></member>
      <member refid="classMyGUI_1_1UString_1367a2b09070ba2ee0733999b459299b5" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_not_of</name></member>
      <member refid="classMyGUI_1_1UString_1a98c1210669c1edbf1cede0b13b6b3ed" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_not_of</name></member>
      <member refid="classMyGUI_1_1UString_1c5e588cddc7ca39e0ca0e3566de00d8f" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_of</name></member>
      <member refid="classMyGUI_1_1UString_17564e05140e6fb60866a2de2e8656013" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_of</name></member>
      <member refid="classMyGUI_1_1UString_1ee960c43d39e582973b8dc1d1d19d2ed" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_of</name></member>
      <member refid="classMyGUI_1_1UString_1dbe2971daf4849eba045036a109f8392" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_of</name></member>
      <member refid="classMyGUI_1_1UString_1de24eae8ac286d9ea4419c6929c90c8c" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_first_of</name></member>
      <member refid="classMyGUI_1_1UString_1a15cc41296e25b952fdded4c21aaddf2" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_not_of</name></member>
      <member refid="classMyGUI_1_1UString_12df70779c2b2b682140935dfd0e2990e" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_not_of</name></member>
      <member refid="classMyGUI_1_1UString_1174c69caa0d0ab9d4bc4305376569002" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_not_of</name></member>
      <member refid="classMyGUI_1_1UString_182382173b81dc1b9d7aa66ea5360ac56" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_not_of</name></member>
      <member refid="classMyGUI_1_1UString_1f94a2eb66b698e1d27ec25c0537d36cf" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_not_of</name></member>
      <member refid="classMyGUI_1_1UString_12f406331642ad76f228a141366335912" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_of</name></member>
      <member refid="classMyGUI_1_1UString_112e4fb532ebbc760fecb8f75438d4a6d" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_of</name></member>
      <member refid="classMyGUI_1_1UString_19b592f9b12ef1f9315d822cd0e0482cb" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_of</name></member>
      <member refid="classMyGUI_1_1UString_1586417e19a9a8de9d4a0b17c60b058e8" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_of</name></member>
      <member refid="classMyGUI_1_1UString_1be334b0a3842c5ed6300dda5776e9278" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>find_last_of</name></member>
      <member refid="classMyGUI_1_1UString_15d63eab26c8ad1931e58a3c2e16b523e" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>getChar</name></member>
      <member refid="classMyGUI_1_1UString_1334a5e0f79095857608997b8990c0ddd" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_14c4587ce1a037e40fbd0c307a092e466" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_19c50f3148e9b5b0b01785fb2e7d19d9d" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_17950d49c0bb28c8a2c77247521028f1a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_104ffbd01115ee7bc901117984c5ff3d1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_13e3e3acb09489af1bab335eacf58c52b" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_14bd176cfb8c55dbcc9b70c9237de87a2" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_11754d248cf0b3feedce59907a7b0dd9a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_15d21ca2329308acf49a703dd390b546b" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_19035c34267c719dbee466a989fcff4b5" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_1e55a6739967f0503d0a8d26fdbda7ed4" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_151fe556737d3b771d30c26459d31ba69" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_12b467f97c403d1dd0d7a7572763c1160" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_1aeeb5c218e16a9e8ebd71003d6754c6e" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_11139ac5305e4f24815bf3ba9c4987adb" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_1ffc51e3e51a0cc6b8becdafd242c1a07" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>insert</name></member>
      <member refid="classMyGUI_1_1UString_1f46ac9d27e0c9d1b0ff1055ea569c814" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>inString</name></member>
      <member refid="classMyGUI_1_1UString_19283fc52c4d7dbe1caaf295295086f12" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>iterator</name></member>
      <member refid="classMyGUI_1_1UString_1e308d11a1f02e8683548605e86d69c76" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>length</name></member>
      <member refid="classMyGUI_1_1UString_10d0dc02e72cbe7f190cee92b3a034b75" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>length_Characters</name></member>
      <member refid="classMyGUI_1_1UString_1cd71788ee7a8e505daf5ad89dc756ff1" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>m_buffer</name></member>
      <member refid="classMyGUI_1_1UString_142ca7d736b1edce83c315b580130f23f" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>m_bufferSize</name></member>
      <member refid="classMyGUI_1_1UString_1e3f4d6b6f72e5afed05763b6f03fc358" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>m_bufferType</name></member>
      <member refid="classMyGUI_1_1UString_165148bc6b19509f7660410de200d6bf8" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>max_size</name></member>
      <member refid="classMyGUI_1_1UString_1fc1c3adbae2be5f5010eabdbe8f191ab" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>mData</name></member>
      <member refid="classMyGUI_1_1UString_106125f99b6fa14fb916514cb0d4dcfe9" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>mStrBuffer</name></member>
      <member refid="classMyGUI_1_1UString_1bc47e6410f0844ef477065293ab58a97" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>mUTF32StrBuffer</name></member>
      <member refid="classMyGUI_1_1UString_1946e66a191ccf29fb1b54f2db65f83ee" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>mVoidBuffer</name></member>
      <member refid="classMyGUI_1_1UString_131e376ce807a708ef1018eac6971deb6" prot="private" virt="non-virtual"><scope>MyGUI::UString</scope><name>mWStrBuffer</name></member>
      <member refid="classMyGUI_1_1UString_1a716449f1493109c8680c32ec2942b56" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>npos</name></member>
      <member refid="classMyGUI_1_1UString_11c24c4844c22b0b56c4c2d6aa7495664" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator std::string</name></member>
      <member refid="classMyGUI_1_1UString_12b46dadbcf836e73144c4fb4e48d5bbb" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator std::wstring</name></member>
      <member refid="classMyGUI_1_1UString_1042e8c15d11a5508630666d4c5319730" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator!=</name></member>
      <member refid="classMyGUI_1_1UString_1770c60e9f33ee1a1b8e7cd85b7368dc4" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_1ded2838aa1fc81b9644712625899ca00" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_1311918eba2586f558ccc1bc21b8911c7" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_171acf30d51c319bfc194e498c578f04a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_1ec6829841ae2072c35689a38caacdf9b" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_106842ef7233f24b930d3ce509737b4d3" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_165f319893a53cad2c42b5d3679eafc7d" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_1f08f0cb9c6d10bf4f9c647e5ce54f7ce" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_1335f15c2ac22e80e90ba53fb4ad477df" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator+</name></member>
      <member refid="classMyGUI_1_1UString_195a866ffa637fe135436d2898ecc4690" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator&lt;</name></member>
      <member refid="classMyGUI_1_1UString_1679015162688416f5fa0bfcda9a8e86b" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator&lt;&lt;</name></member>
      <member refid="classMyGUI_1_1UString_1ed9246c6eaa9e7f552150e6516ee8e45" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator&lt;&lt;</name></member>
      <member refid="classMyGUI_1_1UString_1bde0b673e9f8df5d03098aedffe08235" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator&lt;=</name></member>
      <member refid="classMyGUI_1_1UString_195b6effe17172c5be547f434bdaead60" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator=</name></member>
      <member refid="classMyGUI_1_1UString_1b26f935f5896950eaf1f20275ac4d258" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator=</name></member>
      <member refid="classMyGUI_1_1UString_1db90d6504bfcdb895c07a808dce41ece" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator=</name></member>
      <member refid="classMyGUI_1_1UString_18f5252557fad248c449b0dd2f780d825" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator=</name></member>
      <member refid="classMyGUI_1_1UString_17abf896cbf6d76503d1f7f1d720c92bf" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator=</name></member>
      <member refid="classMyGUI_1_1UString_12dc3e4978af56998439a31bfa30f5eb0" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator==</name></member>
      <member refid="classMyGUI_1_1UString_15ef2bb2de1764b55ecc5de7b2b97677c" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator&gt;</name></member>
      <member refid="classMyGUI_1_1UString_1624a315b38ead4d9d6fa069927864e28" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator&gt;=</name></member>
      <member refid="classMyGUI_1_1UString_16293e912d8781868ca0cc0f58c027970" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator[]</name></member>
      <member refid="classMyGUI_1_1UString_175f0b08550469a7ea3a86094bb35a46b" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>operator[]</name></member>
      <member refid="classMyGUI_1_1UString_1dea87abfc31f6068ebf44aa406853ca2" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>push_back</name></member>
      <member refid="classMyGUI_1_1UString_1c8ad23e089c6c767ea517e4044c70acb" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>push_back</name></member>
      <member refid="classMyGUI_1_1UString_12bce535478bd9fa0a11eea85743ab132" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>push_back</name></member>
      <member refid="classMyGUI_1_1UString_110342681d27b114247ba496a973f6c4c" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>push_back</name></member>
      <member refid="classMyGUI_1_1UString_1814b36b5a69a978e82633b8eb04af0d3" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rbegin</name></member>
      <member refid="classMyGUI_1_1UString_1bff6fa53c2493fd74008f434eb2d1b95" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rbegin</name></member>
      <member refid="classMyGUI_1_1UString_1c9b0700910ee50827424a9ab7b177b9a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rend</name></member>
      <member refid="classMyGUI_1_1UString_10a76493b6c11b9b2db5e200fd293a3f9" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rend</name></member>
      <member refid="classMyGUI_1_1UString_1b242f6822e4a1cc75d1be662e8edc551" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>replace</name></member>
      <member refid="classMyGUI_1_1UString_146dafd2a5f565abfa2835201150eb60a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>replace</name></member>
      <member refid="classMyGUI_1_1UString_12dc62d107b141b993fafcd97841276c0" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>replace</name></member>
      <member refid="classMyGUI_1_1UString_1350fd8e8432771a93fbdc87d96b30349" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>replace</name></member>
      <member refid="classMyGUI_1_1UString_13cc88daadffff973446f8d6be59d9723" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>replace</name></member>
      <member refid="classMyGUI_1_1UString_16b9d57f37d5475b86f98d18b1896caf9" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>replace</name></member>
      <member refid="classMyGUI_1_1UString_12bf1c1237beb73671ecbab1a3396eaba" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>reserve</name></member>
      <member refid="classMyGUI_1_1UString_1ccca24e972e317b9190f8b48434da43a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>resize</name></member>
      <member refid="classMyGUI_1_1UString_19f79fb3ea57d2dd139540db0303dc0cb" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>reverse_iterator</name></member>
      <member refid="classMyGUI_1_1UString_173526b57c33d7a1a6085a9aadbda373f" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rfind</name></member>
      <member refid="classMyGUI_1_1UString_1ddb2b78661c54314e8538a754469f35a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rfind</name></member>
      <member refid="classMyGUI_1_1UString_1ca4a4fcb358450b55f9db374f6bb55ed" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rfind</name></member>
      <member refid="classMyGUI_1_1UString_15a976685beddfd0b5b2a3072c6536c4a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rfind</name></member>
      <member refid="classMyGUI_1_1UString_19a0b84eaafc49d628e96b6acbdef6445" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rfind</name></member>
      <member refid="classMyGUI_1_1UString_129aeed2de31c4c8f92fe7192fb27385a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rfind</name></member>
      <member refid="classMyGUI_1_1UString_1926f4a9465ca0827d47c8dd530865be7" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rfind</name></member>
      <member refid="classMyGUI_1_1UString_1ad1b06600413d153f8371bedc8b3e317" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>rfind</name></member>
      <member refid="classMyGUI_1_1UString_13ec7c31d8b84c6df9cc196b22496bf41" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>setChar</name></member>
      <member refid="classMyGUI_1_1UString_1613f6c781cd8286030962c3cb62e5580" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>size</name></member>
      <member refid="classMyGUI_1_1UString_12efa81ea545a5775f4f19bb7bc1894d1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>size_type</name></member>
      <member refid="classMyGUI_1_1UString_143a0eab543f2e97ef30ca2e7a5d3ab34" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>substr</name></member>
      <member refid="classMyGUI_1_1UString_1f87bbc917cd14e6b10ab014ab1cd6148" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>swap</name></member>
      <member refid="classMyGUI_1_1UString_1b0f7618b2f081f17a48371fa39e57d1a" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>unicode_char</name></member>
      <member refid="classMyGUI_1_1UString_1157521f39d214bb91341ac99417c0706" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_1fef714d257f63bfb5e3ce4f59b8ef613" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_148ac3d0e1993af6cb8721164d64de5bb" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_11495351cfcae8b6f2ab40e622b4891b4" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_1635460c2372aa8d7e2ee39f2f3c7d8ae" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_16fcb41a41fe3481d859243a32c3e77df" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_1ffc00652ca83c6a19f4b7c3b1b7f72a1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_18cff862de53edbc858f407dd8a608cc1" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_1fff1025d8f1b5c0ac3221549291ff361" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_1021e0f46c634366ed0e600c60daf38fa" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_1345cb6f67d223e68495ad531dca843be" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_10740942bee628ac6be0dd94a5c623a96" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>UString</name></member>
      <member refid="classMyGUI_1_1UString_1bf1c4de64c20b004f5a7a91ca3f40085" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>utf32string</name></member>
      <member refid="classMyGUI_1_1UString_1574652f8b78157eb2c3f815d2ba2dbf5" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>value_type</name></member>
      <member refid="classMyGUI_1_1UString_142f8239ea6e91289f409331739b9ef18" prot="public" virt="non-virtual"><scope>MyGUI::UString</scope><name>~UString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
