		#region Method #{MethodName}

		[DllImport(DllName.m_dllName, CallingConvention = CallingConvention.Cdecl)]
        #{MarshalAsReturn}
		private static extern #{MarshalTypeNameReturn} Export#{ThisName}_#{MethodName}#{ValueName1}#{ValueName2}#{ValueName3}#{ValueName4}#{ValueName5}( IntPtr _native ,
			#{MarshalAs1} #{TypePrefix1} #{MarshalTypeName1} #{ValueName1} ,
			#{MarshalAs2} #{TypePrefix2} #{MarshalTypeName2} #{ValueName2} ,
			#{MarshalAs3} #{TypePrefix3} #{MarshalTypeName3} #{ValueName3} ,
			#{MarshalAs4} #{TypePrefix4} #{MarshalTypeName4} #{ValueName4} ,
			#{MarshalAs5} #{TypePrefix5} #{MarshalTypeName5} #{ValueName5} );

		public #{TypeName} #{MethodName}(
			#{TypeName1} #{ValueName1} ,
			#{TypeName2} #{ValueName2} ,
			#{TypeName3} #{ValueName3} ,
			#{TypeName4} #{ValueName4} ,
			#{TypeName5} #{ValueName5} )
		{
			return #{MarshalConvertBefore} Export#{ThisName}_#{MethodName}#{ValueName1}#{ValueName2}#{ValueName3}#{ValueName4}#{ValueName5}( Native , 
				#{TypePrefix1} #{ValueName1} #{MarshalValueNative1} ,
				#{TypePrefix2} #{ValueName2} #{MarshalValueNative2} ,
				#{TypePrefix3} #{ValueName3} #{MarshalValueNative3} ,
				#{TypePrefix4} #{ValueName4} #{MarshalValueNative4} ,
				#{TypePrefix5} #{ValueName5} #{MarshalValueNative5} ) #{MarshalConvertPost} ;
		}

		[DllImport(DllName.m_dllName, CallingConvention = CallingConvention.Cdecl)]
        #{MarshalAsReturn}
		private static extern #{MarshalTypeNameReturn} Export#{ThisName}_#{MethodName}#{ValueName1}#{ValueName2}#{ValueName3}#{ValueName4}( IntPtr _native ,
			#{MarshalAs1} #{TypePrefix1} #{MarshalTypeName1} #{ValueName1} ,
			#{MarshalAs2} #{TypePrefix2} #{MarshalTypeName2} #{ValueName2} ,
			#{MarshalAs3} #{TypePrefix3} #{MarshalTypeName3} #{ValueName3} ,
			#{MarshalAs4} #{TypePrefix4} #{MarshalTypeName4} #{ValueName4} );

		public #{TypeName} #{MethodName}(
			#{TypeName1} #{ValueName1} ,
			#{TypeName2} #{ValueName2} ,
			#{TypeName3} #{ValueName3} ,
			#{TypeName4} #{ValueName4} )
		{
			return #{MarshalConvertBefore} Export#{ThisName}_#{MethodName}#{ValueName1}#{ValueName2}#{ValueName3}#{ValueName4}( Native , 
				#{TypePrefix1} #{ValueName1} #{MarshalValueNative1} ,
				#{TypePrefix2} #{ValueName2} #{MarshalValueNative2} ,
				#{TypePrefix3} #{ValueName3} #{MarshalValueNative3} ,
				#{TypePrefix4} #{ValueName4} #{MarshalValueNative4} ) #{MarshalConvertPost} ;
		}

		[DllImport(DllName.m_dllName, CallingConvention = CallingConvention.Cdecl)]
        #{MarshalAsReturn}
		private static extern #{MarshalTypeNameReturn} Export#{ThisName}_#{MethodName}#{ValueName1}#{ValueName2}#{ValueName3}( IntPtr _native ,
			#{MarshalAs1} #{TypePrefix1} #{MarshalTypeName1} #{ValueName1} ,
			#{MarshalAs2} #{TypePrefix2} #{MarshalTypeName2} #{ValueName2} ,
			#{MarshalAs3} #{TypePrefix3} #{MarshalTypeName3} #{ValueName3} );

		public #{TypeName} #{MethodName}(
			#{TypeName1} #{ValueName1} ,
			#{TypeName2} #{ValueName2} ,
			#{TypeName3} #{ValueName3} )
		{
			return #{MarshalConvertBefore} Export#{ThisName}_#{MethodName}#{ValueName1}#{ValueName2}#{ValueName3}( Native , 
				#{TypePrefix1} #{ValueName1} #{MarshalValueNative1} ,
				#{TypePrefix2} #{ValueName2} #{MarshalValueNative2} ,
				#{TypePrefix3} #{ValueName3} #{MarshalValueNative3} ) #{MarshalConvertPost} ;
		}

		[DllImport(DllName.m_dllName, CallingConvention = CallingConvention.Cdecl)]
        #{MarshalAsReturn}
		private static extern #{MarshalTypeNameReturn} Export#{ThisName}_#{MethodName}#{ValueName1}#{ValueName2}( IntPtr _native ,
			#{MarshalAs1} #{TypePrefix1} #{MarshalTypeName1} #{ValueName1} ,
			#{MarshalAs2} #{TypePrefix2} #{MarshalTypeName2} #{ValueName2} );

		public #{TypeName} #{MethodName}(
			#{TypeName1} #{ValueName1} ,
			#{TypeName2} #{ValueName2} )
		{
			return #{MarshalConvertBefore} Export#{ThisName}_#{MethodName}#{ValueName1}#{ValueName2}( Native , 
				#{TypePrefix1} #{ValueName1} #{MarshalValueNative1} ,
				#{TypePrefix2} #{ValueName2} #{MarshalValueNative2} ) #{MarshalConvertPost} ;
		}

		#endregion
