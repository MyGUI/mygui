<?xml version="1.0" encoding="UTF-8"?>
<Root>
	<TypeHolder>
		<TypeInfo name="int">
			<TypeName>int</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>int</ValueTypeName>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>int</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="float">
			<TypeName>float</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>float</ValueTypeName>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>float</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="bool">
			<TypeName>bool</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>bool</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.U1)] </ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>bool</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.U1)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="bool &amp;">
			<TypeName>bool</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>bool</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.U1)] </ValueMarshalAs>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>bool</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.U1)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="size_t">
			<TypeName>uint</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>uint</ValueTypeName>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>uint</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="unsigned int">
			<TypeName>uint</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>uint</ValueTypeName>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>uint</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<!-- Строки -->
		<TypeInfo name="const MyGUI::UString &amp;">
			<TypeName>string</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>string</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.LPWStr)] </ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>Marshal.PtrToStringUni(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::UString">
			<TypeName>string</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>string</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.LPWStr)] </ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>Marshal.PtrToStringUni(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const std::string &amp;">
			<TypeName>string</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>string</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.LPStr)] </ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>Marshal.PtrToStringAnsi(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="std::string">
			<TypeName>string</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>string</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.LPStr)] </ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>Marshal.PtrToStringAnsi(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<!-- Перечисления -->
		<TypeInfo name="MyGUI::Align">
			<TypeName>Align</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>Align</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.I4)] </ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>Align</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.I4)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::FlowDirection">
			<TypeName>FlowDirection</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FlowDirection</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.I4)] </ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>FlowDirection</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.I4)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::ResizingPolicy">
			<TypeName>ResizingPolicy</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>ResizingPolicy</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.I4)] </ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>ResizingPolicy</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.I4)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::WidgetStyle">
			<TypeName>WidgetStyle</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>WidgetStyle</ValueTypeName>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.I4)] </ValueMarshalAs>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>WidgetStyle</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.I4)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::KeyCode">
			<TypeName>KeyCode</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>KeyCode</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.I4)] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>KeyCode</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.I4)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::MouseButton">
			<TypeName>MouseButton</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>MouseButton</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.I4)] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>MouseButton</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.I4)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::MenuItemType">
			<TypeName>MenuItemType</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>MenuItemType</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.I4)] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>MenuItemType</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.I4)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<!-- Структуры -->
		<TypeInfo name="MyGUI::types::TPoint &lt; int &gt;">
			<TypeName>IntPoint</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntPoint</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntPoint)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntPoint))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::types::TPoint &lt; int &gt; &amp;">
			<TypeName>IntPoint</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntPoint</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntPoint)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntPoint))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TPoint &lt; int &gt; &amp;">
			<TypeName>IntPoint</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntPoint</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntPoint)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntPoint))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TPoint &lt; float &gt;">
			<TypeName>FloatPoint</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatPoint</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatPoint)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatPoint))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::types::TPoint &lt; float &gt; &amp;">
			<TypeName>FloatPoint</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatPoint</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatPoint)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatPoint))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TPoint &lt; float &gt; &amp;">
			<TypeName>FloatPoint</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatPoint</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatPoint)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatPoint))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TSize &lt; int &gt;">
			<TypeName>IntSize</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntSize</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntSize)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntSize))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::types::TSize &lt; int &gt; &amp;">
			<TypeName>IntSize</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntSize</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntSize)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntSize))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TSize &lt; int &gt; &amp;">
			<TypeName>IntSize</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntSize</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntSize)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntSize))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TSize &lt; float &gt;">
			<TypeName>FloatSize</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatSize</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatSize)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatSize))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::types::TSize &lt; float &gt; &amp;">
			<TypeName>FloatSize</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatSize</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatSize)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatSize))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TSize &lt; float &gt; &amp;">
			<TypeName>FloatSize</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatSize</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatSize)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatSize))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TCoord &lt; int &gt;">
			<TypeName>IntCoord</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntCoord</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntCoord)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntCoord))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::types::TCoord &lt; int &gt; &amp;">
			<TypeName>IntCoord</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntCoord</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntCoord)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntCoord))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TCoord &lt; int &gt; &amp;">
			<TypeName>IntCoord</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntCoord</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntCoord)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntCoord))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TCoord &lt; float &gt;">
			<TypeName>FloatCoord</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatCoord</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatCoord)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatCoord))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::types::TCoord &lt; float &gt; &amp;">
			<TypeName>FloatCoord</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatCoord</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatCoord)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatCoord))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TCoord &lt; float &gt; &amp;">
			<TypeName>FloatCoord</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatCoord</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatCoord)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatCoord))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TRect &lt; int &gt;">
			<TypeName>IntRect</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntRect</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntRect)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntRect))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::types::TRect &lt; int &gt; &amp;">
			<TypeName>IntRect</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntRect</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntRect)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntRect))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TRect &lt; int &gt; &amp;">
			<TypeName>IntRect</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IntRect</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IntRect)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IntRect))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TRect &lt; float &gt;">
			<TypeName>FloatRect</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatRect</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatRect)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatRect))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::types::TRect &lt; float &gt; &amp;">
			<TypeName>FloatRect</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatRect</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatRect)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatRect))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::types::TRect &lt; float &gt; &amp;">
			<TypeName>FloatRect</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>FloatRect</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(FloatRect)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(FloatRect))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::DDWidgetState &amp;">
			<TypeName>DDWidgetState</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>DDWidgetState</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(DDWidgetState)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(DDWidgetState))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::DDItemState">
			<TypeName>DDItemState</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>DDItemState</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs>[MarshalAs(UnmanagedType.I4)] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>DDItemState</ReturnTypeName>
			<ReturnMarshalAs>[return: MarshalAs(UnmanagedType.I4)]</ReturnMarshalAs>
			<ReturnConvertBefore></ReturnConvertBefore>
			<ReturnConvertPost></ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::DDItemInfo &amp;">
			<TypeName>DDItemInfo</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>DDItemInfo</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(DDItemInfo)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(DDItemInfo))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::IBNotifyItemData &amp;">
			<TypeName>IBNotifyItemData</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IBNotifyItemData</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IBNotifyItemData)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IBNotifyItemData))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::ToolTipInfo &amp;">
			<TypeName>ToolTipInfo</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>ToolTipInfo</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(ToolTipInfo)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(ToolTipInfo))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::IBDrawItemInfo &amp;">
			<TypeName>IBDrawItemInfo</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>IBDrawItemInfo</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(IBDrawItemInfo)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(IBDrawItemInfo))</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="const MyGUI::Colour &amp;">
			<TypeName>Colour</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost></ConvertPost>
			<ValueTypeName>Colour</ValueTypeName>
			<ValueTypePrefix>ref </ValueTypePrefix>
			<ValueMarshalAs>[In] </ValueMarshalAs>
			<ValueConvertBefore></ValueConvertBefore>
			<ValueConvertPost></ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(Colour)Marshal.PtrToStructure(</ReturnConvertBefore>
			<ReturnConvertPost>, typeof(Colour))</ReturnConvertPost>
		</TypeInfo>
		<!-- Widgets -->
		<TypeInfo name="MyGUI::Button *">
			<TypeName>Button</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(Button)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(Button)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::ComboBox *">
			<TypeName>ComboBox</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(ComboBox)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(ComboBox)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::DDContainer *">
			<TypeName>DDContainer</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(DDContainer)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(DDContainer)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::EditBox *">
			<TypeName>EditBox</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(EditBox)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(EditBox)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::ItemBox *">
			<TypeName>ItemBox</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(ItemBox)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(ItemBox)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::ListBox *">
			<TypeName>ListBox</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(ListBox)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(ListBox)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::MenuBar *">
			<TypeName>MenuBar</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(MenuBar)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(MenuBar)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::MenuControl *">
			<TypeName>MenuControl</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(MenuControl)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(MenuControl)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::MultiListBox *">
			<TypeName>MultiListBox</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(MultiListBox)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(MultiListBox)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::PopupMenu *">
			<TypeName>PopupMenu</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(PopupMenu)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(PopupMenu)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::ProgressBar *">
			<TypeName>ProgressBar</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(ProgressBar)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(ProgressBar)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::ScrollView *">
			<TypeName>ScrollView</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(ScrollView)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(ScrollView)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::ImageBox *">
			<TypeName>ImageBox</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(ImageBox)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(ImageBox)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::TextBox *">
			<TypeName>TextBox</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(TextBox)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(TextBox)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::TabControl *">
			<TypeName>TabControl</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(TabControl)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(TabControl)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::ScrollBar *">
			<TypeName>ScrollBar</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(ScrollBar)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(ScrollBar)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::Widget *">
			<TypeName>Widget</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(Widget)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(Widget)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<!--TypeInfo name="MyGUI::Widget * &amp;">
			<TypeName>Widget</TypeName>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ReturnTypeName>Widget</ReturnTypeName>
			<ValueTypePrefix>ref</ValueTypePrefix>
			<ValueMarshalAs>[In, Out]</ValueMarshalAs>
		</TypeInfo-->
		<TypeInfo name="MyGUI::Window *">
			<TypeName>Window</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(Window)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(Window)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::MenuItem *">
			<TypeName>MenuItem</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(MenuItem)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(MenuItem)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::TabItem *">
			<TypeName>TabItem</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(TabItem)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(TabItem)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
		<TypeInfo name="MyGUI::MultiListItem *">
			<TypeName>MultiListItem</TypeName>
			<ConvertBefore></ConvertBefore>
			<ConvertPost>.Native</ConvertPost>
			<ValueTypeName>IntPtr</ValueTypeName>
			<ValueTypePrefix></ValueTypePrefix>
			<ValueMarshalAs></ValueMarshalAs>
			<ValueConvertBefore>(MultiListItem)BaseWidget.GetByNative(</ValueConvertBefore>
			<ValueConvertPost>)</ValueConvertPost>
			<ReturnTypeName>IntPtr</ReturnTypeName>
			<ReturnMarshalAs></ReturnMarshalAs>
			<ReturnConvertBefore>(MultiListItem)BaseWidget.GetByNative(</ReturnConvertBefore>
			<ReturnConvertPost>)</ReturnConvertPost>
		</TypeInfo>
	</TypeHolder>
	<Item type="MyGUI::WidgetInput" namespace="MyGUI">
		<Template type="Export_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_WidgetInput.cpp"/>
		<Template type="Sharp_Templates" name="Part.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_WidgetInput.cs"/>
		<Tag key="ThisName" value="Widget"/>
		<Tag key="ThisType" value="Widget"/>
		<Member name="setMaskPick" template="Empty.txt"/>
		<Member name="eventToolTip" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::UserData" namespace="MyGUI">
		<Template type="Export_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_WidgetUserData.cpp"/>
		<Template type="Sharp_Templates" name="Part.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_WidgetUserData.cs"/>
		<Tag key="ThisName" value="Widget"/>
		<Tag key="ThisType" value="Widget"/>
		<Member name="setUserData" template="Empty.txt"/>
		<Member name="getUserData" template="Empty.txt"/>
		<Member name="getUserStrings" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::ICroppedRectangle" namespace="MyGUI">
		<Template type="Export_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_WidgetCropped.cpp"/>
		<Template type="Sharp_Templates" name="Part.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_WidgetCropped.cs"/>
		<Tag key="ThisName" value="Widget"/>
		<Tag key="ThisType" value="Widget"/>
		<Member name="getCroppedParent" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::Widget" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_Widget.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_Widget.cs"/>
		<Tag key="BaseName" value="BaseWidget"/>
		<Tag key="ThisName" value="Widget"/>
		<Tag key="ThisType" value="Widget"/>
		<Tag key="Partial" value="partial"/>
		<Member name="createWidgetT" template="Empty.txt"/>
		<Member name="isType" template="Empty.txt"/>
		<Member name="getTypeName" template="Empty.txt"/>
		<Member name="getEnumerator" template="Empty.txt"/>
		<Member name="createWidgetRealT" template="Empty.txt"/>
		<Member name="createWidgetReal" template="Empty.txt"/>
		<Member name="createWidget" template="Empty.txt"/>
		<Member name="findWidgets" template="Empty.txt"/>
		<Member name="setProperty" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::Button" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_Button.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_Button.cs"/>
		<Tag key="BaseName" value="TextBox"/>
		<Tag key="ThisName" value="Button"/>
		<Tag key="ThisType" value="Button"/>
	</Item>
	<Item type="MyGUI::ComboBox" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_ComboBox.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_ComboBox.cs"/>
		<Tag key="BaseName" value="EditBox"/>
		<Tag key="ThisName" value="ComboBox"/>
		<Tag key="ThisType" value="ComboBox"/>
		<Member name="clearItemDataAt" template="Empty.txt"/>
		<Member name="getItemDataAt" template="Empty.txt"/>
		<Member name="setItemDataAt" template="Empty.txt"/>
		<Member name="clearItemData" template="Empty.txt"/>
		<Member name="getItemData" template="Empty.txt"/>
		<Member name="setItemData" template="Empty.txt"/>
		<Member name="addItem" template="Method1.txt"/>
		<Member name="insertItemAt" template="Method2.txt"/>
	</Item>
	<Item type="MyGUI::DDContainer" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_DDContainer.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_DDContainer.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="DDContainer"/>
		<Tag key="ThisType" value="DDContainer"/>
		<Member name="requestDragWidgetInfo" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::EditBox" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_EditBox.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_EditBox.cs"/>
		<Tag key="BaseName" value="TextBox"/>
		<Tag key="ThisName" value="EditBox"/>
		<Tag key="ThisType" value="EditBox"/>
		<Member name="setCoord" template="Empty.txt"/>
		<Member name="setSize" template="Empty.txt"/>
		<Member name="setPosition" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::ItemBox" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_ItemBox.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_ItemBox.cs"/>
		<Tag key="BaseName" value="DDContainer"/>
		<Tag key="ThisName" value="ItemBox"/>
		<Tag key="ThisType" value="ItemBox"/>
		<Member name="clearItemDataAt" template="Empty.txt"/>
		<Member name="getItemDataAt" template="Empty.txt"/>
		<Member name="setItemDataAt" template="Empty.txt"/>
		<Member name="clearItemData" template="Empty.txt"/>
		<Member name="getItemData" template="Empty.txt"/>
		<Member name="setItemData" template="Empty.txt"/>
		<Member name="addItem" template="Method0.txt"/>
		<Member name="insertItemAt" template="Method1.txt"/>
		<Member name="setCoord" template="Empty.txt"/>
		<Member name="setSize" template="Empty.txt"/>
		<Member name="setPosition" template="Empty.txt"/>
		<Member name="resetDrag" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::ListBox" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_ListBox.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_ListBox.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="ListBox"/>
		<Tag key="ThisType" value="ListBox"/>
		<Member name="clearItemDataAt" template="Empty.txt"/>
		<Member name="getItemDataAt" template="Empty.txt"/>
		<Member name="setItemDataAt" template="Empty.txt"/>
		<Member name="clearItemData" template="Empty.txt"/>
		<Member name="getItemData" template="Empty.txt"/>
		<Member name="setItemData" template="Empty.txt"/>
		<Member name="addItem" template="Method1.txt"/>
		<Member name="insertItemAt" template="Method2.txt"/>
		<Member name="setCoord" template="Empty.txt"/>
		<Member name="setSize" template="Empty.txt"/>
		<Member name="setPosition" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::MenuBar" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MenuBar.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_MenuBar.cs"/>
		<Tag key="BaseName" value="MenuControl"/>
		<Tag key="ThisName" value="MenuBar"/>
		<Tag key="ThisType" value="MenuBar"/>
	</Item>
	<Item type="MyGUI::MenuControl" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MenuControl.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_MenuControl.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="MenuControl"/>
		<Tag key="ThisType" value="MenuControl"/>
		<Member name="createItemChildT" template="Empty.txt"/>
		<Member name="createItemChildTAt" template="Empty.txt"/>
		<Member name="clearItemDataAt" template="Empty.txt"/>
		<Member name="getItemDataAt" template="Empty.txt"/>
		<Member name="setItemDataAt" template="Empty.txt"/>
		<Member name="clearItemData" template="Empty.txt"/>
		<Member name="getItemData" template="Empty.txt"/>
		<Member name="setItemData" template="Empty.txt"/>
		<Member name="addItem" template="MethodReturn3_2_1.txt"/>
		<Member name="insertItem" template="Empty.txt"/>
		<Member name="insertItemAt" template="MethodReturn4_3_2.txt"/>
	</Item>
	<Item type="MyGUI::MultiListBox" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MultiListBox.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_MultiListBox.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="MultiListBox"/>
		<Tag key="ThisType" value="MultiListBox"/>
		<Member name="clearItemDataAt" template="Empty.txt"/>
		<Member name="getItemDataAt" template="Empty.txt"/>
		<Member name="setItemDataAt" template="Empty.txt"/>
		<Member name="clearItemData" template="Empty.txt"/>
		<Member name="getItemData" template="Empty.txt"/>
		<Member name="setItemData" template="Empty.txt"/>
		<Member name="clearColumnDataAt" template="Empty.txt"/>
		<Member name="getColumnDataAt" template="Empty.txt"/>
		<Member name="setColumnDataAt" template="Empty.txt"/>
		<Member name="clearColumnData" template="Empty.txt"/>
		<Member name="getColumnData" template="Empty.txt"/>
		<Member name="setColumnData" template="Empty.txt"/>
		<Member name="clearSubItemDataAt" template="Empty.txt"/>
		<Member name="getSubItemDataAt" template="Empty.txt"/>
		<Member name="setSubItemDataAt" template="Empty.txt"/>
		<Member name="clearSubItemData" template="Empty.txt"/>
		<Member name="getSubItemData" template="Empty.txt"/>
		<Member name="setSubItemData" template="Empty.txt"/>
		<Member name="addColumn" template="Method2.txt"/>
		<Member name="insertColumnAt" template="Method3.txt"/>
		<Member name="addItem" template="Method1.txt"/>
		<Member name="insertItemAt" template="Method2.txt"/>
		<Member name="setCoord" template="Empty.txt"/>
		<Member name="setSize" template="Empty.txt"/>
		<Member name="setPosition" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::PopupMenu" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_PopupMenu.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_PopupMenu.cs"/>
		<Tag key="BaseName" value="MenuControl"/>
		<Tag key="ThisName" value="PopupMenu"/>
		<Tag key="ThisType" value="PopupMenu"/>
	</Item>
	<Item type="MyGUI::ProgressBar" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_ProgressBar.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_ProgressBar.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="ProgressBar"/>
		<Tag key="ThisType" value="ProgressBar"/>
		<Member name="setCoord" template="Empty.txt"/>
		<Member name="setSize" template="Empty.txt"/>
		<Member name="setPosition" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::ScrollView" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_ScrollView.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_ScrollVew.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="ScrollView"/>
		<Tag key="ThisType" value="ScrollView"/>
		<Member name="setCoord" template="Empty.txt"/>
		<Member name="setSize" template="Empty.txt"/>
		<Member name="setPosition" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::ImageBox" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_ImageBox.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_ImageBox.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="ImageBox"/>
		<Tag key="ThisType" value="ImageBox"/>
		<Member name="setItemResourcePtr" template="Empty.txt"/>
		<Member name="setItemResourceInfo" template="Empty.txt"/>
		<Member name="getItemResource" template="Empty.txt"/>
		<Member name="setItemResourceInfo" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::TextBox" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_TextBox.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_TextBox.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="TextBox"/>
		<Tag key="ThisType" value="TextBox"/>
	</Item>
	<Item type="MyGUI::TabControl" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_TabControl.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_TabControl.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="TabControl"/>
		<Tag key="ThisType" value="TabControl"/>
		<Member name="clearItemDataAt" template="Empty.txt"/>
		<Member name="getItemDataAt" template="Empty.txt"/>
		<Member name="setItemDataAt" template="Empty.txt"/>
		<Member name="clearItemData" template="Empty.txt"/>
		<Member name="getItemData" template="Empty.txt"/>
		<Member name="setItemData" template="Empty.txt"/>
		<Member name="addItem" template="MethodReturn1.txt"/>
		<Member name="insertItem" template="Empty.txt"/>
		<Member name="insertItemAt" template="MethodReturn2.txt"/>
		<Member name="setCoord" template="Empty.txt"/>
		<Member name="setSize" template="Empty.txt"/>
		<Member name="setPosition" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::ScrollBar" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_ScrollBar.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_ScrollBar.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="ScrollBar"/>
		<Tag key="ThisType" value="ScrollBar"/>
		<Member name="setCoord" template="Empty.txt"/>
		<Member name="setSize" template="Empty.txt"/>
		<Member name="setPosition" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::Window" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_Window.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_Window.cs"/>
		<Tag key="BaseName" value="TextBox"/>
		<Tag key="ThisName" value="Window"/>
		<Tag key="ThisType" value="Window"/>
		<Member name="destroySmooth" template="Empty.txt"/>
		<Member name="setCoord" template="Empty.txt"/>
		<Member name="setSize" template="Empty.txt"/>
		<Member name="setPosition" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::MenuItem" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MenuItem.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_MenuItem.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="MenuItem"/>
		<Tag key="ThisType" value="MenuItem"/>
		<Member name="createItemChildT" template="Empty.txt"/>
		<Member name="clearItemDataAt" template="Empty.txt"/>
		<Member name="getItemDataAt" template="Empty.txt"/>
		<Member name="setItemDataAt" template="Empty.txt"/>
		<Member name="clearItemData" template="Empty.txt"/>
		<Member name="getItemData" template="Empty.txt"/>
		<Member name="setItemData" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::TabItem" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_TabItem.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_TabItem.cs"/>
		<Tag key="BaseName" value="TextBox"/>
		<Tag key="ThisName" value="TabItem"/>
		<Tag key="ThisType" value="TabItem"/>
		<Member name="clearItemDataAt" template="Empty.txt"/>
		<Member name="getItemDataAt" template="Empty.txt"/>
		<Member name="setItemDataAt" template="Empty.txt"/>
		<Member name="clearItemData" template="Empty.txt"/>
		<Member name="getItemData" template="Empty.txt"/>
		<Member name="setItemData" template="Empty.txt"/>
	</Item>
	<Item type="MyGUI::MultiListItem" namespace="MyGUI">
		<Template template="ExportWidget.txt" type="Export_Templates" name="Export.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_ExportWidget.cpp"/>
		<Template template="ExportMarshalingWidget.txt" type="Export_Templates" name="ExportMarshaling.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MarshalingWidget.h"/>
		<Template template="RegisterFactory.txt" type="Sharp_Templates" name="GuiPart_WrapWidget.txt" output="..\..\..\..\MyGUI_Sharp\Core\Generate\MyGUI_GuiPart_WidgetCreator.cs"/>
		<Template type="Export_Templates" name="Derived_h.txt" output="..\..\..\..\MyGUI_Export\Generate\MyGUI_Export_MultiListItem.h"/>
		<Template type="Sharp_Templates" name="Derived.txt" output="..\..\..\..\MyGUI_Sharp\Widgets\Generate\MyGUI_Sharp_MultiListItem.cs"/>
		<Tag key="BaseName" value="Widget"/>
		<Tag key="ThisName" value="MultiListItem"/>
		<Tag key="ThisType" value="MultiListItem"/>
	</Item>
</Root>
